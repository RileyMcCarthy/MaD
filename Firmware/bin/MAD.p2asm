con
	_clkfreq = 160000000
	_clkmode = 16779259
dat
	nop
	cogid	pa
	coginit	pa,##$404
	orgh	$10
	long	0	'reserved
	long	0 ' clock frequency: will default to 160000000
	long	0 ' clock mode: will default to $10007fb
	orgh	$400
 _ret_	mov	result1, #0
	org	0
entry
	cmp	ptra, #0 wz
 if_ne	jmp	#spininit
	mov	ptra, ptr_stackspace_
	rdlong	pa, #20 wz
 if_ne	jmp	#skip_clock_set_
	hubset	#0
	hubset	##16779256
	waitx	##200000
	mov	pa, ##16779259
	hubset	pa
	wrlong	pa, #24
	wrlong	##160000000, #20
	jmp	#skip_clock_set_
	orgf	128
skip_clock_set_
	call	#_main
cogexit
	waitx	##160000
	cogid	arg01
	cogstop	arg01
spininit
	rdlong	objptr, ptra++
	rdlong	result1, ptra++
	setq	#3
	rdlong	arg01, ptra
	sub	ptra, #4
	call	result1
	jmp	#cogexit
FCACHE_LOAD_
    pop	fcache_tmpb_
    add	fcache_tmpb_, pa
    push	fcache_tmpb_
    sub	fcache_tmpb_, pa
    shr	pa, #2
    altd	pa
    mov	 0-0, ret_instr_
    sub	pa, #1
    setq	pa
    rdlong	$0, fcache_tmpb_
    jmp	#\$0 ' jmp to cache
ret_instr_
    ret
fcache_tmpb_
    long 0
builtin_bytefill_
        shr	arg03, #1 wc
 if_c   wrbyte	arg02, arg01
 if_c   add	arg01, #1
        movbyts	arg02, #0
builtin_wordfill_
        shr	arg03, #1 wc
 if_c   wrword	arg02, arg01
 if_c   add	arg01, #2
        setword	arg02, arg02, #1
builtin_longfill_
        wrfast	#0,arg01
        cmp	arg03, #0 wz
 if_nz  rep	#1, arg03
 if_nz  wflong	arg02
        ret
COUNT_
    long 0
RETADDR_
    long 0
fp
    long 0
pushregs_
    pop  pa
    pop  RETADDR_
    tjz  COUNT_, #pushregs_done_
    altd  COUNT_, #511
    setq #0-0
    wrlong local01, ptra++
pushregs_done_
    setq #2 ' push 3 registers starting at COUNT_
    wrlong COUNT_, ptra++
    mov    fp, ptra
    jmp  pa
 popregs_
    pop    pa
    setq   #2
    rdlong COUNT_, --ptra
    djf    COUNT_, #popregs__ret
    setq   COUNT_
    rdlong local01, --ptra
popregs__ret
    push   RETADDR_
    jmp    pa

divide_
       abs     muldivb_,muldivb_     wcz      'abs(y)
       wrc     itmp2_                         'store sign of y
       abs     muldiva_,muldiva_     wc       'abs(x)
       qdiv    muldiva_, muldivb_             'queue divide
 if_c  xor     itmp2_,#1                      'store sign of x
       getqx   muldivb_                       'get quotient
       getqy   muldiva_                       'get remainder
       negc    muldiva_,muldiva_              'restore sign, remainder (sign of x)
       testb   itmp2_,#0             wc       'restore sign, division result
 _ret_ negc    muldivb_,muldivb_     

__heap_ptr
	long	@__heap_base
entryptr__
	long	@entry
itmp1_
	long	0
itmp2_
	long	0
objptr
	long	@objmem
ptr____default_flush_
	long	@___default_flush
ptr____default_getc_
	long	@___default_getc
ptr____default_putc_
	long	@___default_putc
ptr____default_putc_terminal_
	long	@___default_putc_terminal
ptr___struct___fmtfile_putchar_
	long	@__struct___fmtfile_putchar
ptr___struct__s_vfs_file_t_putchar_
	long	@__struct__s_vfs_file_t_putchar
ptr___system__dat__
	long	@__system__dat_
ptr__beginCommunication_
	long	@_beginCommunication
ptr__continuous_data_0040_
	long	@_continuous_data_0040
ptr__control_cog_0137_
	long	@_control_cog_0137
ptr__dat__
	long	@_dat_
ptr__fatfs_cc___default_flush_
	long	@_fatfs_cc___default_flush
ptr__fatfs_cc___default_getc_
	long	@_fatfs_cc___default_getc
ptr__fatfs_cc___default_putc_
	long	@_fatfs_cc___default_putc
ptr__fatfs_cc___default_putc_terminal_
	long	@_fatfs_cc___default_putc_terminal
ptr__fatfs_cc_dat__
	long	@_fatfs_cc_dat_
ptr__fatfs_cc_v_close_
	long	@_fatfs_cc_v_close
ptr__fatfs_cc_v_closedir_
	long	@_fatfs_cc_v_closedir
ptr__fatfs_cc_v_creat_
	long	@_fatfs_cc_v_creat
ptr__fatfs_cc_v_deinit_
	long	@_fatfs_cc_v_deinit
ptr__fatfs_cc_v_init_
	long	@_fatfs_cc_v_init
ptr__fatfs_cc_v_ioctl_
	long	@_fatfs_cc_v_ioctl
ptr__fatfs_cc_v_lseek_
	long	@_fatfs_cc_v_lseek
ptr__fatfs_cc_v_mkdir_
	long	@_fatfs_cc_v_mkdir
ptr__fatfs_cc_v_open_
	long	@_fatfs_cc_v_open
ptr__fatfs_cc_v_opendir_
	long	@_fatfs_cc_v_opendir
ptr__fatfs_cc_v_read_
	long	@_fatfs_cc_v_read
ptr__fatfs_cc_v_readdir_
	long	@_fatfs_cc_v_readdir
ptr__fatfs_cc_v_remove_
	long	@_fatfs_cc_v_remove
ptr__fatfs_cc_v_rename_
	long	@_fatfs_cc_v_rename
ptr__fatfs_cc_v_rmdir_
	long	@_fatfs_cc_v_rmdir
ptr__fatfs_cc_v_stat_
	long	@_fatfs_cc_v_stat
ptr__fatfs_cc_v_write_
	long	@_fatfs_cc_v_write
ptr__jm_fullduplexserial_spin2_dat__
	long	@_jm_fullduplexserial_spin2_dat_
ptr__monitor_cog_0158_
	long	@_monitor_cog_0158
ptr__motion_cog_0176_
	long	@_motion_cog_0176
ptr_stackspace_
	long	@stackspace
result1
	long	0
result2
	long	1
result3
	long	2
result4
	long	3
COG_BSS_START
	fit	480
	orgh
hubentry

_write_register_0025
	mov	COUNT_, #2
	call	#pushregs_
	mov	local01, arg01
	add	local01, #12
	mov	arg01, #85
	mov	local02, objptr
	mov	objptr, local01
	call	#_jm_fullduplexserial_spin2_tx
	mov	objptr, local01
	getbyte	arg02, arg02, #0
	shl	arg02, #1
	mov	arg01, #64
	add	arg01, arg02
	call	#_jm_fullduplexserial_spin2_tx
	getbyte	arg01, arg03, #0
	mov	objptr, local01
	call	#_jm_fullduplexserial_spin2_tx
	mov	objptr, local02
	mov	ptra, fp
	call	#popregs_
_write_register_0025_ret
	ret

_read_register_0027
	mov	COUNT_, #3
	call	#pushregs_
	mov	local01, arg01
	add	local01, #12
	mov	arg01, #85
	mov	local02, objptr
	mov	objptr, local01
	call	#_jm_fullduplexserial_spin2_tx
	mov	objptr, local01
	getbyte	local03, arg02, #0
	shl	local03, #1
	mov	arg01, #32
	add	arg01, local03
	call	#_jm_fullduplexserial_spin2_tx
	mov	arg01, #10
	mov	objptr, local01
	call	#_jm_fullduplexserial_spin2_rxtime
	mov	objptr, local02
	mov	ptra, fp
	call	#popregs_
_read_register_0027_ret
	ret

_continuous_data_0040
	rdlong	_var01, #20
	qdiv	_var01, ##100000
	mov	_var02, arg01
	add	_var02, ##744
	rdlong	_var03, _var02
	sub	_var02, ##744
	mov	_var04, #0
	mov	_var05, #0
	rdlong	result1, #20
	getqx	_var06
	qdiv	result1, ##100000
	shr	_var06, #1
	getqx	_var07
	qmul	_var06, #35
	shl	_var07, #16
	mov	arg03, #7
	add	arg03, _var07
	rdlong	result1, #20
	getqx	_var08
	qdiv	result1, #10
	shl	_var08, #1
	getqx	_var09
	fltl	_var03
	wrpin	#0, _var03
	mov	arg01, _var03
	mov	arg02, ##32830
	mov	arg04, #0
	dirl	arg01
	wrpin	##32830, arg01
	wxpin	arg03, arg01
	wypin	#0, arg01
	dirh	arg01
	getct	result1
	mov	_var10, result1
LR__0001
LR__0002
	testp	_var03 wc
 if_b	jmp	#LR__0003
	getct	result1
	sub	result1, _var10
	cmps	result1, _var09 wcz
 if_a	add	_var02, ##756
 if_a	wrbyte	#0, _var02
 if_a	sub	_var02, ##756
 if_a	jmp	#LR__0002
	getct	_var01
	sub	_var01, _var10
	cmps	_var01, _var08 wcz
 if_a	mov	_var05, #0
 if_a	mov	_var04, #0
	jmp	#LR__0002
LR__0003
	getct	_var10
	mov	arg01, _var03
	mov	result1, #0
	rdpin	result1, arg01
	getbyte	result1, result1, #3
	mov	_var11, _var05
	shl	_var11, #3
	shl	result1, _var11
	or	_var04, result1
	add	_var05, #1
	cmps	_var05, #3 wc
 if_b	jmp	#LR__0001
	add	_var02, ##756
	wrbyte	#1, _var02
	sub	_var02, #4
	wrlong	_var04, _var02
	sub	_var02, ##752
	rdlong	_var07, _var02
	add	_var07, #1
	wrlong	_var07, _var02
	mov	_var04, #0
	mov	_var05, #0
	jmp	#LR__0001
_continuous_data_0040_ret
	ret

_force_gauge_begin
	mov	COUNT_, #2
	call	#pushregs_
	mov	local01, arg01
	add	local01, ##744
	wrlong	arg02, local01
	add	local01, #4
	wrlong	arg03, local01
	sub	local01, ##736
	mov	arg01, arg02
	mov	arg02, arg03
	mov	arg03, #3
	mov	arg04, ##100000
	mov	local02, objptr
	mov	objptr, local01
	call	#_jm_fullduplexserial_spin2_start
	mov	objptr, local01
	mov	arg01, #85
	call	#_jm_fullduplexserial_spin2_tx
	mov	objptr, local01
	mov	arg01, #2
	call	#_jm_fullduplexserial_spin2_tx
	mov	objptr, local02
	mov	arg01, #100
	call	#__system___waitms
	mov	arg01, #85
	mov	local02, objptr
	mov	objptr, local01
	call	#_jm_fullduplexserial_spin2_tx
	mov	objptr, local01
	sub	local01, #12
	mov	arg01, #6
	call	#_jm_fullduplexserial_spin2_tx
	mov	objptr, local02
	mov	arg01, #100
	call	#__system___waitms
	mov	arg01, local01
	mov	arg02, #1
	mov	arg03, #0
	call	#_write_register_0025
	mov	arg01, local01
	mov	arg02, #2
	mov	arg03, #0
	call	#_write_register_0025
	mov	arg01, local01
	mov	arg02, #3
	mov	arg03, #0
	call	#_write_register_0025
	mov	arg01, local01
	mov	arg02, #4
	mov	arg03, #0
	call	#_write_register_0025
	mov	arg01, local01
	mov	arg02, #1
	mov	arg03, #200
	call	#_write_register_0025
	mov	arg01, local01
	mov	arg02, #2
	mov	arg03, #0
	call	#_write_register_0025
	mov	arg01, local01
	mov	arg02, #3
	mov	arg03, #1
	call	#_write_register_0025
	mov	arg01, local01
	mov	arg02, #4
	mov	arg03, #119
	call	#_write_register_0025
	mov	arg01, local01
	mov	arg02, #1
	call	#_read_register_0027
	getbyte	result1, result1, #0
	cmp	result1, #200 wz
 if_ne	mov	result1, #0
 if_ne	jmp	#LR__0004
	add	local01, ##756
	wrbyte	#1, local01
	mov	arg01, #100
	call	#__system___waitms
	sub	local01, ##744
	mov	arg01, #85
	mov	local02, objptr
	mov	objptr, local01
	call	#_jm_fullduplexserial_spin2_tx
	mov	objptr, local01
	sub	local01, #12
	mov	arg01, #8
	call	#_jm_fullduplexserial_spin2_tx
	mov	objptr, local02
	add	ptr__dat__, #4
	mov	arg04, ptr__dat__
	wrlong	local02, arg04
	add	arg04, #4
	wrlong	ptr__continuous_data_0040_, arg04
	add	arg04, #4
	wrlong	local01, arg04
	mov	arg03, ptr__dat__
	sub	ptr__dat__, #4
	mov	result1, #30
	setq	arg03
	coginit	result1, entryptr__ wc
 if_b	neg	result1, #1
	add	local01, ##760
	wrlong	result1, local01
	cmps	result1, #1 wc
 if_b	mov	result1, #0
 if_ae	mov	result1, #1
LR__0004
	mov	ptra, fp
	call	#popregs_
_force_gauge_begin_ret
	ret

_force_gauge_stop
	mov	COUNT_, #2
	call	#pushregs_
	mov	local01, arg01
	mov	arg01, ##1000
	call	#__system___waitms
	add	local01, ##760
	rdlong	local02, local01
	sub	local01, ##760
	cmps	local02, #1 wc
 if_ae	add	local01, ##760
 if_ae	rdlong	arg01, local01
 if_ae	cogstop	arg01
	mov	ptra, fp
	call	#popregs_
_force_gauge_stop_ret
	ret

_raw_to_force
	mov	COUNT_, #1
	call	#pushregs_
	mov	local01, arg02
	add	local01, #96
	rdlong	result1, local01
	sub	arg01, result1
	call	#__system___float_fromint
	mov	arg01, result1
	sub	local01, #4
	rdlong	arg02, local01
	call	#__system___float_div
	mov	arg01, result1
	mov	arg02, #1
	call	#__system___float_tointeger
	mov	ptra, fp
	call	#popregs_
_raw_to_force_ret
	ret

_read_register_0048
	mov	COUNT_, #2
	call	#pushregs_
	mov	local01, arg01
	mov	local02, objptr
	mov	objptr, local01
	call	#_jm_i2c_spin2_start
	mov	objptr, local01
	add	local01, #12
	rdbyte	arg01, local01
	sub	local01, #12
	call	#_jm_i2c_spin2_write
	getbyte	arg01, arg02, #0
	mov	objptr, local01
	call	#_jm_i2c_spin2_write
	mov	objptr, local01
	call	#_jm_i2c_spin2_start
	mov	objptr, local01
	add	local01, #13
	rdbyte	arg01, local01
	sub	local01, #13
	call	#_jm_i2c_spin2_write
	mov	arg01, #1
	mov	objptr, local01
	call	#_jm_i2c_spin2_read
	mov	arg02, result1
	mov	objptr, local01
	call	#_jm_i2c_spin2_stop
	mov	objptr, local02
	mov	result1, arg02
	mov	ptra, fp
	call	#popregs_
_read_register_0048_ret
	ret

_write_register_0050
	mov	COUNT_, #3
	call	#pushregs_
	mov	local01, arg01
	mov	local02, objptr
	mov	objptr, local01
	call	#_jm_i2c_spin2_start
	mov	objptr, local01
	add	local01, #12
	rdbyte	arg01, local01
	sub	local01, #12
	call	#_jm_i2c_spin2_write
	mov	local03, result1
	getbyte	arg01, arg02, #0
	mov	objptr, local01
	call	#_jm_i2c_spin2_write
	getbyte	arg01, arg03, #0
	mov	objptr, local01
	call	#_jm_i2c_spin2_write
	mov	objptr, local01
	call	#_jm_i2c_spin2_stop
	mov	objptr, local02
	cmp	local03, #0 wz
	wrz	result1
	mov	ptra, fp
	call	#popregs_
_write_register_0050_ret
	ret

_mcp23017_begin
	mov	COUNT_, #3
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	arg01, arg04
	mov	arg02, arg03
	mov	arg03, #100
	mov	arg04, #1
	mov	local03, objptr
	mov	objptr, local01
	call	#_jm_i2c_spin2_setup
	mov	objptr, local03
	getbyte	local03, local02, #0
	mov	result1, #32
	or	result1, local03
	shl	result1, #1
	and	result1, #254
	add	local01, #12
	wrbyte	result1, local01
	getbyte	local02, local02, #0
	mov	local03, #32
	or	local03, local02
	shl	local03, #1
	or	local03, #1
	add	local01, #1
	wrbyte	local03, local01
	sub	local01, #13
	mov	arg01, local01
	mov	arg02, #0
	mov	arg03, #15
	call	#_write_register_0050
	mov	local03, result1
	mov	arg01, local01
	mov	arg02, #1
	mov	arg03, #255
	call	#_write_register_0050
	getbyte	local03, local03, #0
	getbyte	local02, result1, #0
	and	local03, local02
	mov	arg01, local01
	mov	arg02, #0
	call	#_read_register_0048
	getbyte	local02, result1, #0
	cmp	local02, #15 wz
 if_ne	jmp	#LR__0005
	mov	arg01, local01
	mov	arg02, #1
	call	#_read_register_0048
	getbyte	result1, result1, #0
	cmp	result1, #255 wz
 if_e	jmp	#LR__0006
LR__0005
	mov	arg01, ##@LR__1235
	getbyte	local03, local03, #0
	mov	arg02, ptra
	wrlong	local03, ptra++
	call	#_printf
	sub	ptra, #4
	mov	result1, #0
	jmp	#LR__0007
LR__0006
	mov	result1, #1
LR__0007
	mov	ptra, fp
	call	#popregs_
_mcp23017_begin_ret
	ret

_mcp_update_register
	mov	COUNT_, #1
	call	#pushregs_
	mov	local01, arg01
	mov	arg02, #18
	call	#_read_register_0048
	add	local01, #14
	wrbyte	result1, local01
	sub	local01, #14
	mov	arg01, local01
	mov	arg02, #19
	call	#_read_register_0048
	add	local01, #15
	wrbyte	result1, local01
	mov	ptra, fp
	call	#popregs_
_mcp_update_register_ret
	ret

_mcp_set_pin
	mov	COUNT_, #4
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg04
	mov	arg02, arg03
	zerox	arg02, #7 wz
 if_e	mov	local04, #18
 if_ne	mov	local04, #19
	mov	arg01, local01
	mov	arg02, local04
	call	#_read_register_0048
	getbyte	arg03, result1, #0
	cmp	local03, #0 wz
 if_ne	getword	local02, local02, #0
 if_ne	decod	local03, local02
 if_ne	or	arg03, local03
 if_e	getword	local02, local02, #0
 if_e	decod	local03, local02
 if_e	andn	arg03, local03
	mov	arg01, local01
	mov	arg02, local04
	call	#_write_register_0050
	mov	ptra, fp
	call	#popregs_
_mcp_set_pin_ret
	ret

_mcp_get_pin
	zerox	arg03, #7 wz
 if_e	add	arg01, #14
 if_e	rdbyte	_var01, arg01
 if_ne	add	arg01, #15
 if_ne	rdbyte	_var01, arg01
	getbyte	result1, _var01, #0
	getword	arg02, arg02, #0
	shr	result1, arg02
	and	result1, #1
_mcp_get_pin_ret
	ret

_steps_to_mm
	mov	COUNT_, #2
	call	#pushregs_
	mov	local01, arg02 wz
 if_e	mov	result1, #0
 if_e	jmp	#LR__0008
	call	#__system___float_fromint
	mov	local02, result1
	add	local01, #28
	rdlong	arg01, local01
	mov	arg02, ##1078530000
	call	#__system___float_mul
	mov	arg02, result1
	mov	arg01, local02
	call	#__system___float_mul
	mov	arg01, result1
	add	local01, #40
	rdlong	arg02, local01
	call	#__system___float_div
LR__0008
	mov	ptra, fp
	call	#popregs_
_steps_to_mm_ret
	ret

_steps_to_um
	mov	COUNT_, #2
	call	#pushregs_
	mov	local01, arg02 wz
 if_e	mov	result1, #0
 if_e	jmp	#LR__0009
	call	#__system___float_fromint
	mov	local02, result1
	add	local01, #28
	rdlong	arg01, local01
	mov	arg02, ##1078530000
	call	#__system___float_mul
	mov	arg02, result1
	mov	arg01, local02
	call	#__system___float_mul
	mov	arg01, result1
	add	local01, #40
	rdlong	arg02, local01
	call	#__system___float_div
	mov	arg01, result1
	mov	arg02, ##1148846080
	call	#__system___float_mul
	mov	arg01, result1
	mov	arg02, #1
	call	#__system___float_tointeger
LR__0009
	mov	ptra, fp
	call	#popregs_
_steps_to_um_ret
	ret

_readNavKeyInt_0061
	mov	COUNT_, #2
	call	#pushregs_
	mov	local01, arg01
	add	local01, #116
	wrlong	#0, local01
	sub	local01, #116
	mov	local02, objptr
	mov	objptr, local01
	call	#_jm_i2c_spin2_start
	mov	objptr, local01
	add	local01, #108
	rdbyte	arg01, local01
	sub	local01, #108
	and	arg01, #254
	call	#_jm_i2c_spin2_write
	getbyte	arg01, arg02, #0
	mov	objptr, local01
	call	#_jm_i2c_spin2_write
	mov	objptr, local01
	call	#_jm_i2c_spin2_start
	mov	objptr, local01
	add	local01, #108
	rdbyte	arg01, local01
	sub	local01, #108
	or	arg01, #1
	call	#_jm_i2c_spin2_write
	mov	arg01, #0
	mov	objptr, local01
	call	#_jm_i2c_spin2_read
	add	local01, #117
	wrbyte	result1, local01
	sub	local01, #117
	mov	arg01, #1
	mov	objptr, local01
	call	#_jm_i2c_spin2_read
	add	local01, #116
	wrbyte	result1, local01
	sub	local01, #116
	mov	objptr, local01
	call	#_jm_i2c_spin2_stop
	mov	objptr, local02
	add	local01, #116
	rdlong	result1, local01
	mov	ptra, fp
	call	#popregs_
_readNavKeyInt_0061_ret
	ret

_writeNavKey8_0064
	mov	COUNT_, #2
	call	#pushregs_
	mov	local01, arg01
	mov	local02, objptr
	mov	objptr, local01
	call	#_jm_i2c_spin2_start
	mov	objptr, local01
	add	local01, #108
	rdbyte	arg01, local01
	sub	local01, #108
	and	arg01, #254
	call	#_jm_i2c_spin2_write
	getbyte	arg01, arg02, #0
	mov	objptr, local01
	call	#_jm_i2c_spin2_write
	getbyte	arg01, arg03, #0
	mov	objptr, local01
	call	#_jm_i2c_spin2_write
	mov	objptr, local01
	call	#_jm_i2c_spin2_stop
	mov	objptr, local02
	mov	ptra, fp
	call	#popregs_
_writeNavKey8_0064_ret
	ret

_writeNavKey32_0065
	mov	COUNT_, #1
	call	#pushregs_
	mov	local01, arg01
	add	local01, #116
	wrlong	arg03, local01
	sub	local01, #116
	mov	arg03, objptr
	mov	objptr, local01
	call	#_jm_i2c_spin2_start
	mov	objptr, local01
	add	local01, #108
	rdbyte	arg01, local01
	sub	local01, #108
	and	arg01, #254
	call	#_jm_i2c_spin2_write
	getbyte	arg01, arg02, #0
	mov	objptr, local01
	call	#_jm_i2c_spin2_write
	mov	objptr, local01
	add	local01, #119
	rdbyte	arg01, local01
	sub	local01, #119
	call	#_jm_i2c_spin2_write
	mov	objptr, local01
	add	local01, #118
	rdbyte	arg01, local01
	sub	local01, #118
	call	#_jm_i2c_spin2_write
	mov	objptr, local01
	add	local01, #117
	rdbyte	arg01, local01
	sub	local01, #117
	call	#_jm_i2c_spin2_write
	mov	objptr, local01
	add	local01, #116
	rdbyte	arg01, local01
	sub	local01, #116
	call	#_jm_i2c_spin2_write
	mov	objptr, local01
	call	#_jm_i2c_spin2_stop
	mov	objptr, arg03
	mov	ptra, fp
	call	#popregs_
_writeNavKey32_0065_ret
	ret

_writeNavKeyFloat_0067
	mov	COUNT_, #1
	call	#pushregs_
	mov	local01, arg01
	add	local01, #116
	wrlong	arg03, local01
	sub	local01, #116
	mov	arg03, objptr
	mov	objptr, local01
	call	#_jm_i2c_spin2_start
	mov	objptr, local01
	add	local01, #108
	rdbyte	arg01, local01
	sub	local01, #108
	and	arg01, #254
	call	#_jm_i2c_spin2_write
	getbyte	arg01, arg02, #0
	mov	objptr, local01
	call	#_jm_i2c_spin2_write
	mov	objptr, local01
	add	local01, #119
	rdbyte	arg01, local01
	sub	local01, #119
	call	#_jm_i2c_spin2_write
	mov	objptr, local01
	add	local01, #118
	rdbyte	arg01, local01
	sub	local01, #118
	call	#_jm_i2c_spin2_write
	mov	objptr, local01
	add	local01, #117
	rdbyte	arg01, local01
	sub	local01, #117
	call	#_jm_i2c_spin2_write
	mov	objptr, local01
	add	local01, #116
	rdbyte	arg01, local01
	sub	local01, #116
	call	#_jm_i2c_spin2_write
	mov	objptr, local01
	call	#_jm_i2c_spin2_stop
	mov	objptr, arg03
	mov	ptra, fp
	call	#popregs_
_writeNavKeyFloat_0067_ret
	ret

_navkey_begin
	mov	COUNT_, #3
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg05
	add	local01, #108
	wrbyte	arg04, local01
	sub	local01, #108
	mov	arg01, arg02
	mov	arg02, arg03
	mov	arg03, #10
	mov	arg04, #1
	mov	local03, objptr
	mov	objptr, local01
	call	#_jm_i2c_spin2_setup
	mov	objptr, local03
	mov	arg01, local01
	mov	arg02, #0
	mov	arg03, #128
	call	#_writeNavKey8_0064
	mov	arg01, #100
	call	#__system___waitms
	mov	arg01, local01
	mov	arg02, #0
	mov	arg03, local02
	call	#_writeNavKey8_0064
	add	local01, #114
	wrbyte	local02, local01
	mov	ptra, fp
	call	#popregs_
_navkey_begin_ret
	ret

_navkey_update_status
	mov	COUNT_, #1
	call	#pushregs_
	mov	local01, arg01
	mov	arg02, #6
	call	#_readNavKeyInt_0061
	mov	arg02, result1
	signx	arg02, #15
	and	arg02, #1
	add	local01, #20
	wrlong	arg02, local01
	mov	arg02, result1
	signx	arg02, #15
	and	arg02, #2
	add	local01, #4
	wrlong	arg02, local01
	mov	arg02, result1
	signx	arg02, #15
	and	arg02, #4
	add	local01, #4
	wrlong	arg02, local01
	mov	arg02, result1
	signx	arg02, #15
	and	arg02, #8
	add	local01, #4
	wrlong	arg02, local01
	mov	arg02, result1
	signx	arg02, #15
	and	arg02, #16
	add	local01, #4
	wrlong	arg02, local01
	mov	arg02, result1
	signx	arg02, #15
	and	arg02, #32
	add	local01, #4
	wrlong	arg02, local01
	mov	arg02, result1
	signx	arg02, #15
	and	arg02, #64
	add	local01, #4
	wrlong	arg02, local01
	mov	arg02, result1
	signx	arg02, #15
	and	arg02, #128
	add	local01, #4
	wrlong	arg02, local01
	mov	arg02, result1
	signx	arg02, #15
	and	arg02, #256
	add	local01, #4
	wrlong	arg02, local01
	mov	arg02, result1
	signx	arg02, #15
	and	arg02, ##512
	add	local01, #4
	wrlong	arg02, local01
	mov	arg02, result1
	signx	arg02, #15
	and	arg02, ##1024
	add	local01, #4
	wrlong	arg02, local01
	mov	arg02, result1
	signx	arg02, #15
	and	arg02, ##2048
	add	local01, #4
	wrlong	arg02, local01
	mov	arg02, result1
	signx	arg02, #15
	and	arg02, ##4096
	add	local01, #4
	wrlong	arg02, local01
	mov	arg02, result1
	signx	arg02, #15
	and	arg02, ##8192
	add	local01, #4
	wrlong	arg02, local01
	signx	result1, #15
	and	result1, ##16384
	add	local01, #4
	wrlong	result1, local01
	mov	ptra, fp
	call	#popregs_
_navkey_update_status_ret
	ret

_navkey_write_max
	mov	COUNT_, #1
	call	#pushregs_
	mov	local01, arg01
	mov	arg01, arg02
	call	#__system___float_fromint
	mov	arg03, result1
	mov	arg01, local01
	mov	arg02, #14
	call	#_writeNavKeyFloat_0067
	mov	ptra, fp
	call	#popregs_
_navkey_write_max_ret
	ret

_navkey_write_min
	mov	COUNT_, #1
	call	#pushregs_
	mov	local01, arg01
	mov	arg01, arg02
	call	#__system___float_fromint
	mov	arg03, result1
	mov	arg01, local01
	mov	arg02, #18
	call	#_writeNavKeyFloat_0067
	mov	ptra, fp
	call	#popregs_
_navkey_write_min_ret
	ret

_queue_init
	wrlong	arg02, arg01
	add	arg01, #16
	wrlong	arg03, arg01
	add	arg01, #4
	wrlong	arg04, arg01
	sub	arg01, #16
	wrlong	#0, arg01
	add	arg01, #4
	wrlong	#0, arg01
	mov	result1, #0
	locknew	result1
	add	arg01, #16
	wrlong	result1, arg01
_queue_init_ret
	ret

_queue_push
	mov	COUNT_, #3
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02 wz
 if_e	mov	result1, #0
 if_e	jmp	#LR__0012
	add	local01, #24
LR__0010
	rdlong	arg01, local01
	locktry	arg01 wc
 if_ae	jmp	#LR__0010
	sub	local01, #24
	mov	arg01, local01
	call	#_queue_isfull
	cmp	result1, #0 wz
 if_e	jmp	#LR__0011
	mov	arg01, ##@LR__1236
	call	#_printf
	add	local01, #24
	rdlong	arg01, local01
	lockrel	arg01 wc
	mov	result1, #0
	jmp	#LR__0012
LR__0011
	rdlong	local03, local01
	add	local01, #8
	rdlong	arg02, local01
	add	local01, #12
	rdlong	arg03, local01
	qmul	arg02, arg03
	mov	arg02, local02
	getqx	arg01
	add	arg01, local03
	call	#_memcpy
	sub	local01, #12
	rdlong	arg01, local01
	add	arg01, #1
	wrlong	arg01, local01
	add	local01, #8
	rdlong	result1, local01
	sub	local01, #16
	cmp	arg01, result1 wz
 if_e	add	local01, #8
 if_e	wrlong	#0, local01
 if_e	sub	local01, #8
	add	local01, #24
	rdlong	arg01, local01
	lockrel	arg01 wc
	mov	result1, #1
LR__0012
	mov	ptra, fp
	call	#popregs_
_queue_push_ret
	ret

_queue_pop
	mov	COUNT_, #3
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	add	local01, #24
LR__0013
	rdlong	arg01, local01
	locktry	arg01 wc
 if_ae	jmp	#LR__0013
	sub	local01, #24
	mov	arg01, local01
	call	#_queue_isempty
	cmp	result1, #0 wz
 if_ne	add	local01, #24
 if_ne	rdlong	arg01, local01
 if_ne	lockrel	arg01 wc
 if_ne	mov	result1, #0
 if_ne	jmp	#LR__0015
	cmp	local02, #0 wz
 if_e	jmp	#LR__0014
	rdlong	local03, local01
	add	local01, #20
	rdlong	arg03, local01
	sub	local01, #16
	rdlong	result1, local01
	qmul	arg03, result1
	sub	local01, #4
	mov	arg01, local02
	getqx	arg02
	add	arg02, local03
	call	#_memcpy
LR__0014
	add	local01, #4
	rdlong	local03, local01
	add	local03, #1
	wrlong	local03, local01
	add	local01, #12
	rdlong	local02, local01
	sub	local01, #16
	cmp	local03, local02 wz
 if_e	add	local01, #4
 if_e	wrlong	#0, local01
 if_e	sub	local01, #4
	add	local01, #24
	rdlong	arg01, local01
	lockrel	arg01 wc
	mov	result1, #1
LR__0015
	mov	ptra, fp
	call	#popregs_
_queue_pop_ret
	ret

_queue_isempty
	mov	result1, #0
	add	arg01, #8
	rdlong	_var01, arg01
	sub	arg01, #4
	rdlong	arg01, arg01
	cmp	_var01, arg01 wz
 if_e	mov	result1, #1
_queue_isempty_ret
	ret

_queue_isfull
	mov	_var01, arg01
	mov	_var02, #0
	add	_var01, #4
	rdlong	_var03, _var01
	mov	_var04, _var03
	sub	_var04, #1
	add	_var01, #4
	rdlong	_var05, _var01
	sub	_var01, #8
	mov	_var06, _var05
	cmp	_var06, _var04 wz
 if_e	jmp	#LR__0016
	add	_var01, #4
	rdlong	_var07, _var01
	sub	_var01, #4
	mov	_var08, _var07 wz
 if_ne	jmp	#LR__0017
	add	_var01, #16
	rdlong	_var09, _var01
	mov	_var10, _var09
	sub	_var10, #1
	sub	_var01, #8
	rdlong	_var11, _var01
	sub	_var01, #8
	mov	_var12, _var11
	cmp	_var12, _var10 wz
 if_ne	jmp	#LR__0017
LR__0016
	xor	_var02, #1
LR__0017
	mov	result1, _var02
_queue_isfull_ret
	ret

_queue_empty
	mov	_var01, arg01
	add	_var01, #24
LR__0018
	rdlong	arg01, _var01
	locktry	arg01 wc
 if_ae	jmp	#LR__0018
	sub	_var01, #20
	wrlong	#0, _var01
	add	_var01, #4
	wrlong	#0, _var01
	add	_var01, #16
	rdlong	arg01, _var01
	lockrel	arg01 wc
_queue_empty_ret
	ret

_crc8
	mov	_var01, #0
	mov	_var02, #0
	loc	pa,	#(@LR__0022-@LR__0019)
	call	#FCACHE_LOAD_
LR__0019
	getbyte	_var03, _var02, #0
	getbyte	result1, arg02, #0
	cmp	_var03, result1 wc
 if_ae	jmp	#LR__0023
	getbyte	_var04, _var02, #0
	add	_var04, arg01
	rdbyte	_var05, _var04
	mov	_var06, #0
LR__0020
	getbyte	_var04, _var06, #0
	cmp	_var04, #8 wc
 if_ae	jmp	#LR__0021
	getbyte	_var04, _var01, #0
	getbyte	_var03, _var05, #0
	xor	_var04, _var03
	test	_var04, #1 wz
	getbyte	_var01, _var01, #0
	shr	_var01, #1
 if_ne	getbyte	_var01, _var01, #0
 if_ne	xor	_var01, #140
	getbyte	_var05, _var05, #0
	shr	_var05, #1
	add	_var06, #1
	jmp	#LR__0020
LR__0021
	add	_var02, #1
	jmp	#LR__0019
LR__0022
LR__0023
	mov	result1, _var01
_crc8_ret
	ret

_receive_0078
	mov	COUNT_, #5
	call	#pushregs_
	mov	local01, arg01 wz
	mov	local02, arg02
 if_e	mov	result1, #0
 if_e	jmp	#LR__0026
	mov	local03, #0
LR__0024
	cmp	local03, local02 wc
 if_ae	jmp	#LR__0025
	mov	local04, local03
	add	local04, local01
	add	ptr__dat__, ##16100
	mov	arg01, #10
	mov	local05, objptr
	mov	objptr, ptr__dat__
	sub	ptr__dat__, ##16100
	call	#_jm_fullduplexserial_spin2_rxtime
	mov	objptr, local05
	wrbyte	result1, local04
	mov	local05, local03
	add	local05, local01
	rdbyte	local04, local05
	cmp	local04, ##-1 wz
 if_e	mov	result1, #0
 if_e	jmp	#LR__0026
	add	local03, #1
	jmp	#LR__0024
LR__0025
	mov	result1, #1
LR__0026
	mov	ptra, fp
	call	#popregs_
_receive_0078_ret
	ret

_send_0082
	mov	COUNT_, #5
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg03
	mov	local03, #0
	mov	result1, local02
	zerox	result1, #15 wz
 if_e	jmp	#LR__0027
	mov	arg03, local02
	add	arg03, #3
	andn	arg03, #3
	mov	local03, ptra
	add	ptra, arg03
	mov	arg01, local03
	getword	arg03, local02, #0
	call	#_memcpy
	cmp	local03, #0 wz
 if_e	mov	result1, #0
 if_e	jmp	#LR__0030
LR__0027
	add	ptr__dat__, ##16100
	mov	arg01, #85
	mov	local04, objptr
	mov	objptr, ptr__dat__
	sub	ptr__dat__, ##16100
	call	#_jm_fullduplexserial_spin2_tx
	add	ptr__dat__, ##16100
	mov	objptr, ptr__dat__
	sub	ptr__dat__, ##16100
	mov	arg01, local01
	call	#_jm_fullduplexserial_spin2_tx
	add	ptr__dat__, ##16100
	mov	objptr, ptr__dat__
	sub	ptr__dat__, ##16100
	getword	arg01, local02, #0
	call	#_jm_fullduplexserial_spin2_tx
	add	ptr__dat__, ##16100
	mov	objptr, ptr__dat__
	sub	ptr__dat__, ##16100
	getword	arg01, local02, #0
	shr	arg01, #8
	call	#_jm_fullduplexserial_spin2_tx
	mov	objptr, local04
	mov	local05, #0
LR__0028
	getword	local04, local02, #0
	cmp	local05, local04 wc
 if_ae	jmp	#LR__0029
	add	ptr__dat__, ##16100
	mov	local04, local05
	add	local04, local03
	rdbyte	arg01, local04
	mov	local04, objptr
	mov	objptr, ptr__dat__
	sub	ptr__dat__, ##16100
	call	#_jm_fullduplexserial_spin2_tx
	mov	objptr, local04
	add	local05, #1
	jmp	#LR__0028
LR__0029
	mov	arg01, local03
	mov	arg02, local02
	call	#_crc8
	getbyte	arg01, result1, #0
	add	ptr__dat__, ##16100
	mov	local04, objptr
	mov	objptr, ptr__dat__
	sub	ptr__dat__, ##16100
	call	#_jm_fullduplexserial_spin2_tx
	mov	objptr, local04
	mov	result1, #1
LR__0030
	mov	ptra, fp
	call	#popregs_
_send_0082_ret
	ret

_recieveCMD_0084
	mov	COUNT_, #1
	call	#pushregs_
LR__0031
LR__0032
	add	ptr__dat__, ##16100
	mov	arg01, objptr
	mov	objptr, ptr__dat__
	sub	ptr__dat__, ##16100
	call	#_jm_fullduplexserial_spin2_rxcheck
	mov	objptr, arg01
	cmp	result1, #85 wz
 if_ne	jmp	#LR__0032
	add	ptr__dat__, ##16100
	mov	arg01, #10
	mov	local01, objptr
	mov	objptr, ptr__dat__
	sub	ptr__dat__, ##16100
	call	#_jm_fullduplexserial_spin2_rxtime
	mov	objptr, local01
	cmp	result1, ##-1 wz
 if_e	jmp	#LR__0031
	mov	ptra, fp
	call	#popregs_
_recieveCMD_0084_ret
	ret

_beginCommunication
	mov	COUNT_, #9
	call	#pushregs_
	add	ptra, ##10580
	wrlong	arg01, fp
	rdlong	result1, arg01
	add	fp, #4
	wrlong	result1, fp
	sub	fp, #4
	rdlong	result1, fp
	add	result1, #4
	rdlong	result1, result1
	add	fp, #8
	wrlong	result1, fp
	sub	fp, #8
	rdlong	result1, fp
	add	result1, #8
	rdlong	result1, result1
	add	fp, #12
	wrlong	result1, fp
	sub	fp, #12
	rdlong	arg01, fp
	add	arg01, #12
	rdlong	local01, arg01
	add	fp, #16
	wrlong	local01, fp
	sub	fp, #12
	rdlong	arg01, fp
	sub	fp, #4
	call	#_read_sd_profile
	add	ptr__dat__, ##16100
	mov	local02, ptr__dat__
	mov	local03, #56
	mov	local04, #0
	mov	local05, ##1000000
	mov	arg01, #57
	mov	arg02, #56
	mov	arg03, #0
	mov	arg04, ##1000000
	mov	local06, objptr
	mov	objptr, local02
	sub	ptr__dat__, ##16100
	call	#_jm_fullduplexserial_spin2_start
	mov	objptr, local06
LR__0033
	add	fp, #12
	rdlong	arg01, fp
	sub	fp, #12
	call	#_recieveCMD_0084
	add	fp, #20
	wrlong	result1, fp
	mov	local02, result1
	sub	fp, #20
	and	local02, #128
	cmp	local02, #128 wz
 if_e	jmp	#LR__0047
	add	fp, #20
	rdlong	local07, fp
	sub	fp, #20
	fle	local07, #14
	jmprel	local07
LR__0034
	jmp	#LR__0035
	jmp	#LR__0037
	jmp	#LR__0038
	jmp	#LR__0039
	jmp	#LR__0040
	jmp	#LR__0041
	jmp	#LR__0033
	jmp	#LR__0042
	jmp	#LR__0043
	jmp	#LR__0044
	jmp	#LR__0033
	jmp	#LR__0036
	jmp	#LR__0045
	jmp	#LR__0046
	jmp	#LR__0033
LR__0035
	add	fp, #24
	wrbyte	#1, fp
	mov	arg01, #0
	mov	arg02, fp
	mov	arg03, #1
	sub	fp, #24
	call	#_send_0082
	jmp	#LR__0033
LR__0036
	add	fp, #28
	wrbyte	#0, fp
	mov	arg01, #11
	mov	arg02, fp
	mov	arg03, #1
	sub	fp, #28
	call	#_send_0082
	jmp	#LR__0033
LR__0037
	add	fp, #12
	rdlong	local01, fp
	add	local01, #8
	rdlong	local04, local01
	add	fp, #20
	wrlong	local04, fp
	sub	fp, #20
	rdlong	local01, fp
	add	local01, #12
	rdlong	local04, local01
	add	fp, #24
	wrlong	local04, fp
	sub	fp, #24
	rdlong	local01, fp
	add	local01, #24
	rdlong	local04, local01
	add	fp, #28
	wrlong	local04, fp
	sub	fp, #28
	rdlong	local01, fp
	add	local01, #32
	rdlong	local04, local01
	add	fp, #32
	wrlong	local04, fp
	sub	fp, #32
	rdlong	local01, fp
	add	local01, #36
	rdlong	local04, local01
	add	fp, #36
	wrlong	local04, fp
	sub	fp, #16
	mov	arg01, #1
	mov	arg02, fp
	mov	arg03, #20
	sub	fp, #32
	call	#_send_0082
	jmp	#LR__0033
LR__0038
	add	fp, #8
	rdlong	arg02, fp
	sub	fp, #8
	mov	arg01, #2
	mov	arg03, #48
	call	#_send_0082
	jmp	#LR__0033
LR__0039
	add	fp, #4
	rdlong	arg02, fp
	sub	fp, #4
	mov	arg01, #3
	mov	arg03, #148
	call	#_send_0082
	jmp	#LR__0033
LR__0040
	add	fp, #4
	rdlong	local05, fp
	sub	fp, #4
	mov	local06, local05
	add	local06, #20
	mov	arg01, #4
	mov	arg02, local06
	mov	arg03, #100
	call	#_send_0082
	jmp	#LR__0033
LR__0041
	add	fp, #4
	rdlong	local05, fp
	sub	fp, #4
	mov	local06, local05
	add	local06, #120
	mov	arg01, #5
	mov	arg02, local06
	mov	arg03, #28
	call	#_send_0082
	jmp	#LR__0033
LR__0042
	add	fp, #8
	rdlong	local05, fp
	sub	fp, #8
	mov	local06, local05
	add	local06, #32
	mov	arg01, #7
	mov	arg02, local06
	mov	arg03, #4
	call	#_send_0082
	jmp	#LR__0033
LR__0043
	add	fp, #8
	rdlong	arg02, fp
	sub	fp, #8
	add	arg02, #36
	mov	arg01, #8
	mov	arg03, #4
	call	#_send_0082
	add	fp, #8
	rdlong	local05, fp
	sub	fp, #8
	mov	local06, local05
	add	local06, #40
	mov	arg01, #8
	mov	arg02, local06
	mov	arg03, #4
	call	#_send_0082
	jmp	#LR__0033
LR__0044
	add	fp, #8
	rdlong	local05, fp
	sub	fp, #8
	mov	local06, local05
	add	local06, #24
	mov	arg01, #9
	mov	arg02, local06
	mov	arg03, #4
	call	#_send_0082
	jmp	#LR__0033
LR__0045
	add	fp, #52
	mov	arg01, fp
	sub	fp, #52
	mov	arg02, #4
	call	#_receive_0078
	cmp	result1, #0 wz
 if_e	jmp	#LR__0033
	add	fp, #56
	mov	arg01, fp
	sub	fp, #56
	mov	arg02, #4
	call	#_receive_0078
	mov	local03, result1 wz
 if_e	jmp	#LR__0033
	add	fp, #60
	mov	arg01, fp
	sub	fp, #8
	rdlong	arg02, fp
	add	fp, #4
	rdbyte	local06, fp
	sub	fp, #56
	getbyte	local05, local06, #0
	mov	arg03, local05
	call	#_read_sd_card_data
	cmp	result1, #0 wz
 if_e	jmp	#LR__0033
	add	fp, #60
	mov	arg02, fp
	sub	fp, #4
	rdbyte	local06, fp
	sub	fp, #56
	getbyte	local05, local06, #0
	mov	local08, local05
	shl	local08, #2
	add	local08, local05
	shl	local08, #3
	mov	local04, local08
	mov	arg01, #12
	mov	arg03, local04
	call	#_send_0082
	jmp	#LR__0033
LR__0046
	call	#_read_data_size
	add	fp, ##10260
	wrlong	result1, fp
	mov	arg01, #13
	mov	arg02, fp
	mov	arg03, #4
	sub	fp, ##10260
	call	#_send_0082
	jmp	#LR__0033
LR__0047
	add	fp, #20
	rdlong	local09, fp
	sub	fp, #20
	andn	local09, #128
	sub	local09, #3
	fle	local09, #8
	jmprel	local09
LR__0048
	jmp	#LR__0049
	jmp	#LR__0050
	jmp	#LR__0051
	jmp	#LR__0033
	jmp	#LR__0052
	jmp	#LR__0053
	jmp	#LR__0054
	jmp	#LR__0055
	jmp	#LR__0033
LR__0049
	add	fp, ##10264
	mov	arg01, fp
	sub	fp, ##10264
	mov	arg02, #148
	call	#_receive_0078
	cmp	result1, #0 wz
 if_e	jmp	#LR__0033
	add	fp, #4
	rdlong	arg01, fp
	add	fp, ##10260
	mov	arg02, fp
	sub	fp, ##10264
	mov	arg03, #148
	call	#_memcpy
	add	fp, #4
	rdlong	arg01, fp
	sub	fp, #4
	call	#_write_sd_profile
	jmp	#LR__0033
LR__0050
	add	fp, ##10412
	mov	arg01, fp
	sub	fp, ##10412
	mov	arg02, #100
	call	#_receive_0078
	cmp	result1, #0 wz
 if_e	jmp	#LR__0033
	add	fp, #4
	rdlong	local05, fp
	add	local05, #20
	add	fp, ##10408
	mov	arg01, local05
	mov	arg02, fp
	mov	arg03, #100
	sub	fp, ##10412
	call	#__system____builtin_memmove
	jmp	#LR__0033
LR__0051
	add	fp, ##10512
	mov	arg01, fp
	sub	fp, ##10512
	mov	arg02, #28
	call	#_receive_0078
	cmp	result1, #0 wz
 if_e	jmp	#LR__0033
	add	fp, #4
	rdlong	local05, fp
	add	local05, #120
	add	fp, ##10508
	mov	arg01, local05
	mov	arg02, fp
	mov	arg03, #28
	sub	fp, ##10512
	call	#__system____builtin_memmove
	jmp	#LR__0033
LR__0052
	add	fp, #8
	rdlong	arg01, fp
	sub	fp, #8
	mov	arg02, #8
	mov	arg03, #1
	call	#_state_machine_set
	add	fp, ##10540
	mov	arg01, fp
	sub	fp, ##10540
	mov	arg02, #4
	call	#_receive_0078
	cmp	result1, #0 wz
 if_e	jmp	#LR__0033
	add	fp, #8
	rdlong	arg01, fp
	add	fp, ##10532
	rdlong	local05, fp
	sub	fp, ##10540
	mov	local04, local05
	mov	arg02, #10
	mov	arg03, local04
	call	#_state_machine_set
	jmp	#LR__0033
LR__0053
	add	fp, ##10544
	mov	arg01, fp
	sub	fp, ##10544
	mov	arg02, #4
	call	#_receive_0078
	cmp	result1, #0 wz
 if_e	jmp	#LR__0033
	add	fp, ##10548
	mov	arg01, fp
	sub	fp, ##10548
	mov	arg02, #4
	call	#_receive_0078
	mov	local03, result1 wz
 if_e	jmp	#LR__0033
	add	fp, #8
	rdlong	local01, fp
	add	fp, ##10536
	rdlong	local04, fp
	add	local01, #36
	wrlong	local04, local01
	sub	fp, ##10536
	rdlong	local01, fp
	add	fp, ##10540
	rdlong	local04, fp
	sub	fp, ##10548
	add	local01, #40
	wrlong	local04, local01
	jmp	#LR__0033
LR__0054
	add	fp, ##10552
	mov	arg01, fp
	sub	fp, ##10552
	mov	arg02, #4
	call	#_receive_0078
	cmp	result1, #0 wz
 if_e	jmp	#LR__0033
	add	fp, #8
	rdlong	arg01, fp
	add	fp, ##10544
	rdlong	local05, fp
	sub	fp, ##10552
	mov	local04, local05
	mov	arg02, #8
	mov	arg03, local04
	call	#_state_machine_set
	jmp	#LR__0033
LR__0055
	add	fp, ##10556
	wrbyte	#0, fp
	add	fp, #4
	mov	arg01, fp
	sub	fp, ##10560
	mov	arg02, #12
	call	#_receive_0078
	cmp	result1, #0 wz
 if_e	jmp	#LR__0057
	add	fp, ##10560
	mov	arg02, fp
	sub	fp, ##10560
	add	ptr__dat__, ##241828
	mov	arg01, ptr__dat__
	sub	ptr__dat__, ##241828
	call	#_queue_push
	cmp	result1, #0 wz
 if_e	jmp	#LR__0056
	add	fp, ##10556
	wrbyte	#0, fp
	mov	arg01, #11
	mov	arg02, fp
	mov	arg03, #1
	sub	fp, ##10556
	call	#_send_0082
	jmp	#LR__0033
LR__0056
	add	fp, ##10556
	wrbyte	#2, fp
	mov	arg01, #11
	mov	arg02, fp
	mov	arg03, #1
	sub	fp, ##10556
	call	#_send_0082
	jmp	#LR__0033
LR__0057
	add	fp, ##10556
	wrbyte	#1, fp
	mov	local03, fp
	mov	local04, #1
	mov	arg01, #11
	mov	arg02, local03
	mov	arg03, #1
	sub	fp, ##10556
	call	#_send_0082
	jmp	#LR__0033
	mov	ptra, fp
	call	#popregs_
_beginCommunication_ret
	ret

_start_communication
	mov	_var01, arg03
	add	ptr__dat__, ##16832
	wrlong	arg01, ptr__dat__
	add	ptr__dat__, #4
	wrlong	arg02, ptr__dat__
	add	ptr__dat__, #4
	wrlong	_var01, ptr__dat__
	add	ptr__dat__, #4
	wrlong	arg04, ptr__dat__
	sub	ptr__dat__, ##12744
	mov	arg02, ptr__dat__
	wrlong	objptr, arg02
	add	arg02, #4
	wrlong	ptr__beginCommunication_, arg02
	add	arg02, #4
	add	ptr__dat__, ##12732
	wrlong	ptr__dat__, arg02
	sub	ptr__dat__, ##12732
	mov	arg03, ptr__dat__
	sub	ptr__dat__, ##4100
	mov	result1, #30
	setq	arg03
	coginit	result1, entryptr__ wc
 if_b	neg	result1, #1
	add	_var01, #52
	wrlong	result1, _var01
	cmp	result1, ##-1 wz
 if_ne	mov	result1, #1
 if_e	mov	result1, #0
_start_communication_ret
	ret

_mad_begin
	add	ptr__dat__, ##17112
	mov	arg01, ptr__dat__
	sub	ptr__dat__, ##17112
	call	#_machine_state_init
	call	#_motion_begin
	cmp	result1, #0 wz
 if_ne	jmp	#LR__0058
	mov	arg01, ##@LR__1237
	call	#_printf
	jmp	#LR__0060
LR__0058
	add	ptr__dat__, ##16948
	mov	arg01, ptr__dat__
	add	ptr__dat__, #16
	mov	arg02, ptr__dat__
	add	ptr__dat__, #148
	mov	arg03, ptr__dat__
	sub	ptr__dat__, #264
	mov	arg04, ptr__dat__
	sub	ptr__dat__, ##16848
	call	#_control_begin
	cmp	result1, #0 wz
 if_ne	jmp	#LR__0059
	mov	arg01, ##@LR__1238
	call	#_printf
	jmp	#LR__0060
LR__0059
	add	ptr__dat__, ##17112
	mov	arg01, ptr__dat__
	sub	ptr__dat__, ##17112
	mov	arg02, #0
	mov	arg03, #1
	call	#_state_machine_set
	add	ptr__dat__, ##16964
	mov	arg01, ptr__dat__
	add	ptr__dat__, #148
	mov	arg02, ptr__dat__
	sub	ptr__dat__, #264
	mov	arg03, ptr__dat__
	add	ptr__dat__, #100
	mov	arg04, ptr__dat__
	sub	ptr__dat__, ##16948
	call	#_start_communication
	add	ptr__dat__, ##16848
	mov	arg01, ptr__dat__
	add	ptr__dat__, #264
	mov	arg02, ptr__dat__
	sub	ptr__dat__, #128
	mov	arg03, ptr__dat__
	sub	ptr__dat__, ##16984
	mov	arg04, #10
	call	#_monitor_begin
LR__0060
_mad_begin_ret
	ret

__openraw
	mov	COUNT_, #12
	call	#pushregs_
	add	ptra, #52
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	add	fp, #4
	wrlong	arg03, fp
	add	fp, #4
	wrlong	arg04, fp
	add	fp, #12
	wrlong	#4, fp
	sub	fp, #24
	rdlong	arg03, fp
	add	fp, #28
	wrlong	arg03, fp
	add	ptr___system__dat__, #380
	mov	arg01, ptr___system__dat__
	sub	ptr___system__dat__, #380
	add	fp, #4
	wrlong	arg01, fp
	sub	fp, #28
	rdlong	arg02, fp
	sub	fp, #8
	mov	arg03, #0
	call	#__system____getvfsforfile
	add	fp, #24
	wrlong	result1, fp
	cmps	result1, #0 wz
	sub	fp, #24
 if_e	jmp	#LR__0061
	add	fp, #24
	rdlong	result1, fp
	sub	fp, #24
	add	result1, #32
	rdlong	result1, result1 wz
 if_ne	jmp	#LR__0062
LR__0061
	add	ptr___system__dat__, #24
	wrlong	#16, ptr___system__dat__
	sub	ptr___system__dat__, #24
	neg	result1, #1
	jmp	#LR__0077
LR__0062
	add	fp, #32
	rdlong	arg01, fp
	sub	fp, #32
	mov	arg02, #0
	mov	arg03, #48
	mov	local01, arg01
	call	#\builtin_bytefill_
	add	fp, #24
	rdlong	local02, fp
	mov	local03, local02
	add	local03, #32
	rdlong	local04, local03
	mov	arg03, local04
	rdlong	local05, arg03
	add	arg03, #4
	rdlong	local06, arg03
	mov	local07, local06
	add	fp, #8
	rdlong	local08, fp
	add	fp, #4
	rdlong	local09, fp
	sub	fp, #24
	rdlong	local10, fp
	sub	fp, #12
	mov	arg01, local08
	mov	arg02, local09
	mov	arg03, local10
	mov	local11, objptr
	mov	objptr, local05
	call	local07
	mov	objptr, local11
	add	fp, #20
	wrlong	result1, fp
	sub	fp, #20
	cmp	result1, #0 wz
 if_e	jmp	#LR__0063
	add	fp, #12
	rdlong	local07, fp
	sub	fp, #12
	test	local07, #4 wz
 if_e	jmp	#LR__0063
	add	fp, #24
	rdlong	local02, fp
	mov	local03, local02
	add	local03, #36
	rdlong	local04, local03
	sub	local03, #36
	mov	local11, local04
	rdlong	local05, local11
	add	local11, #4
	rdlong	local06, local11
	mov	local07, local06
	add	fp, #8
	rdlong	local08, fp
	add	fp, #4
	rdlong	local09, fp
	sub	fp, #20
	rdlong	local10, fp
	sub	fp, #16
	mov	arg01, local08
	mov	arg02, local09
	mov	arg03, local10
	mov	local11, objptr
	mov	objptr, local05
	call	local07
	mov	objptr, local11
	mov	local12, result1
	add	fp, #20
	wrlong	local12, fp
	sub	fp, #20
LR__0063
	add	fp, #20
	rdlong	local12, fp wz
	sub	fp, #20
 if_ne	jmp	#LR__0076
	add	fp, #12
	rdlong	local12, fp
	and	local12, #3 wz
	add	fp, #28
	wrlong	local12, fp
	sub	fp, #40
 if_ne	add	fp, #28
 if_ne	rdlong	local12, fp
 if_ne	or	local12, #2
 if_ne	wrlong	local12, fp
 if_ne	sub	fp, #28
	add	fp, #40
	rdlong	local12, fp
	sub	fp, #40
	cmp	local12, #1 wz
 if_ne	add	fp, #28
 if_ne	rdlong	local12, fp
 if_ne	or	local12, #1
 if_ne	wrlong	local12, fp
 if_ne	sub	fp, #28
	add	fp, #12
	rdlong	local12, fp
	sub	fp, #12
	test	local12, #32 wz
 if_ne	add	fp, #28
 if_ne	rdlong	local12, fp
 if_ne	or	local12, #192
 if_ne	wrlong	local12, fp
 if_ne	sub	fp, #28
	add	fp, #32
	rdlong	local12, fp
	sub	fp, #4
	rdlong	local07, fp
	add	local12, #8
	wrlong	local07, local12
	add	fp, #4
	rdlong	local12, fp
	sub	fp, #32
	add	local12, #16
	rdlong	local07, local12 wz
 if_ne	jmp	#LR__0064
	add	fp, #32
	rdlong	local12, fp
	sub	fp, #8
	rdlong	local07, fp
	sub	fp, #24
	add	local07, #4
	rdlong	local02, local07
	add	local12, #16
	wrlong	local02, local12
LR__0064
	add	fp, #32
	rdlong	local12, fp
	sub	fp, #32
	add	local12, #20
	rdlong	local07, local12 wz
 if_ne	jmp	#LR__0065
	add	fp, #32
	rdlong	local12, fp
	sub	fp, #8
	rdlong	local07, fp
	sub	fp, #24
	add	local07, #8
	rdlong	local02, local07
	add	local12, #20
	wrlong	local02, local12
LR__0065
	add	fp, #32
	rdlong	local12, fp
	sub	fp, #32
	add	local12, #32
	rdlong	local07, local12 wz
 if_ne	jmp	#LR__0066
	add	fp, #32
	rdlong	local12, fp
	sub	fp, #8
	rdlong	local07, fp
	sub	fp, #24
	rdlong	local02, local07
	add	local12, #32
	wrlong	local02, local12
LR__0066
	add	fp, #32
	rdlong	local12, fp
	sub	fp, #32
	add	local12, #36
	rdlong	local07, local12 wz
 if_ne	jmp	#LR__0067
	add	fp, #32
	rdlong	local12, fp
	sub	fp, #8
	rdlong	local07, fp
	sub	fp, #24
	add	local07, #16
	rdlong	local02, local07
	add	local12, #36
	wrlong	local02, local12
LR__0067
	add	fp, #32
	rdlong	local12, fp
	sub	fp, #32
	add	local12, #44
	rdlong	local07, local12 wz
 if_ne	jmp	#LR__0068
	add	fp, #32
	rdlong	local12, fp
	sub	fp, #8
	rdlong	local07, fp
	sub	fp, #24
	add	local07, #12
	rdlong	local02, local07
	add	local12, #44
	wrlong	local02, local12
LR__0068
	add	fp, #32
	rdlong	local12, fp
	sub	fp, #32
	add	local12, #24
	rdlong	local07, local12 wz
 if_ne	jmp	#LR__0071
	add	fp, #32
	rdlong	arg01, fp
	mov	local03, arg01
	add	local03, #36
	rdlong	local12, local03
	rdlong	local05, local12
	add	local12, #4
	rdlong	local07, local12
	add	fp, #16
	mov	arg03, fp
	sub	fp, #48
	mov	arg02, #256
	mov	local11, objptr
	mov	objptr, local05
	call	local07
	mov	objptr, local11
	add	fp, #44
	wrlong	result1, fp
	sub	fp, #44
	cmp	result1, #0 wz
 if_ne	jmp	#LR__0069
	add	fp, #48
	rdlong	local07, fp
	sub	fp, #48
	test	local07, #2 wz
 if_e	jmp	#LR__0069
	add	fp, #32
	rdlong	local12, fp
	sub	fp, #32
	mov	arg01, objptr
	mov	arg02, ptr____default_putc_terminal_
	call	#__system___make_methodptr
	mov	local07, result1
	add	local12, #24
	wrlong	local07, local12
	jmp	#LR__0070
LR__0069
	add	fp, #32
	rdlong	local12, fp
	sub	fp, #32
	mov	arg01, objptr
	mov	arg02, ptr____default_putc_
	call	#__system___make_methodptr
	add	local12, #24
	wrlong	result1, local12
LR__0070
LR__0071
	add	fp, #32
	rdlong	local12, fp
	sub	fp, #32
	add	local12, #28
	rdlong	local07, local12 wz
 if_ne	jmp	#LR__0072
	add	fp, #32
	rdlong	local12, fp
	sub	fp, #32
	mov	arg01, objptr
	mov	arg02, ptr____default_getc_
	call	#__system___make_methodptr
	add	local12, #28
	wrlong	result1, local12
LR__0072
	add	fp, #32
	rdlong	local12, fp
	sub	fp, #32
	add	local12, #40
	rdlong	local07, local12 wz
 if_ne	jmp	#LR__0075
	add	fp, #24
	rdlong	local12, fp
	sub	fp, #24
	add	local12, #20
	rdlong	local07, local12 wz
 if_e	jmp	#LR__0073
	add	fp, #32
	rdlong	local12, fp
	sub	fp, #8
	rdlong	local07, fp
	sub	fp, #24
	add	local07, #20
	rdlong	local02, local07
	add	local12, #40
	wrlong	local02, local12
	jmp	#LR__0074
LR__0073
	add	fp, #32
	rdlong	local12, fp
	sub	fp, #32
	mov	arg01, objptr
	mov	arg02, ptr____default_flush_
	call	#__system___make_methodptr
	add	local12, #40
	wrlong	result1, local12
LR__0074
LR__0075
LR__0076
	add	fp, #20
	rdlong	local12, fp wz
 if_e	mov	arg01, #0
 if_e	add	ptr___system__dat__, #24
 if_e	wrlong	arg01, ptr___system__dat__
 if_e	sub	ptr___system__dat__, #24
	rdlong	result1, fp
	sub	fp, #20
LR__0077
	mov	ptra, fp
	call	#popregs_
__openraw_ret
	ret

__closeraw
	mov	COUNT_, #5
	call	#pushregs_
	mov	local01, arg01
	mov	local02, #0
	add	local01, #8
	rdlong	result1, local01 wz
	sub	local01, #8
 if_e	add	ptr___system__dat__, #24
 if_e	wrlong	#5, ptr___system__dat__
 if_e	sub	ptr___system__dat__, #24
 if_e	neg	result1, #1
 if_e	jmp	#LR__0080
	add	local01, #40
	rdlong	result1, local01 wz
	sub	local01, #40
 if_e	jmp	#LR__0078
	add	local01, #40
	rdlong	arg01, local01
	sub	local01, #40
	rdlong	local03, arg01
	add	arg01, #4
	rdlong	local04, arg01
	mov	arg01, local01
	mov	local05, objptr
	mov	objptr, local03
	call	local04
	mov	objptr, local05
LR__0078
	add	local01, #32
	rdlong	local05, local01 wz
	sub	local01, #32
 if_e	jmp	#LR__0079
	add	local01, #32
	rdlong	local05, local01
	sub	local01, #32
	rdlong	local03, local05
	add	local05, #4
	rdlong	local04, local05
	mov	arg01, local01
	mov	local05, objptr
	mov	objptr, local03
	call	local04
	mov	objptr, local05
	mov	local02, result1
LR__0079
	mov	arg01, local01
	mov	arg02, #0
	mov	arg03, #48
	call	#\builtin_bytefill_
	mov	result1, local02
LR__0080
	mov	ptra, fp
	call	#popregs_
__closeraw_ret
	ret

__vfs_open_sdcardx
	mov	COUNT_, #6
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	mov	local04, arg04
	mov	arg01, #28
	call	#__system___gc_alloc_managed
	mov	local05, result1
	mov	arg01, ##560
	call	#__system___gc_alloc_managed
	mov	local06, result1
	mov	arg01, #0
	mov	arg02, local01
	mov	arg03, local02
	mov	arg04, local03
	mov	arg05, local04
	mov	local04, objptr
	mov	objptr, local05
	call	#_fatfs_cc_disk_setpins
	mov	objptr, local04
	mov	local04, result1 wz
 if_ne	jmp	#LR__0081
	mov	arg02, ##@LR__1239
	mov	arg01, local06
	mov	arg03, #0
	mov	local03, objptr
	mov	objptr, local05
	call	#_fatfs_cc_f_mount
	mov	objptr, local03
	mov	local04, result1
LR__0081
	cmp	local04, #0 wz
 if_e	jmp	#LR__0082
	neg	arg01, local04 wz
	add	ptr___system__dat__, #24
	wrlong	arg01, ptr___system__dat__
	sub	ptr___system__dat__, #24
	mov	result1, #0
	jmp	#LR__0083
LR__0082
	mov	arg01, local05
	mov	local01, objptr
	mov	objptr, local05
	call	#_fatfs_cc_get_vfs
	mov	objptr, local01
LR__0083
	mov	ptra, fp
	call	#popregs_
__vfs_open_sdcardx_ret
	ret

___default_getc
	mov	COUNT_, #3
	call	#pushregs_
	mov	local01, arg01
	rdlong	local02, local01
	add	local02, #8
	rdlong	local03, local02
	test	local03, #2 wz
 if_ne	mov	arg01, local01
 if_ne	call	#___default_flush
	rdlong	local03, local02
	or	local03, #1
	wrlong	local03, local02
	sub	local02, #8
	rdlong	local03, local02 wz
 if_ne	jmp	#LR__0084
	mov	arg01, local01
	call	#___default_filbuf
	mov	local03, result1
LR__0084
	cmps	local03, #1 wc
 if_b	neg	result1, #1
 if_b	jmp	#LR__0085
	sub	local03, #1
	wrlong	local03, local02
	add	local02, #4
	rdlong	local03, local02
	rdbyte	result1, local03
	add	local03, #1
	wrlong	local03, local02
LR__0085
	mov	ptra, fp
	call	#popregs_
___default_getc_ret
	ret

___default_putc
	mov	COUNT_, #4
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	rdlong	local03, local02
	add	local03, #8
	rdlong	result1, local03
	test	result1, #1 wz
 if_ne	mov	arg01, local02
 if_ne	call	#___default_flush
	rdlong	arg01, local03
	or	arg01, #2
	wrlong	arg01, local03
	sub	local03, #8
	rdlong	arg01, local03
	mov	local04, arg01
	add	local03, #12
	add	local04, local03
	wrbyte	local01, local04
	getbyte	local01, local01, #0
	add	arg01, #1
	sub	local03, #12
	wrlong	arg01, local03
	cmp	arg01, ##1024 wz
 if_ne	jmp	#LR__0086
	mov	arg01, local02
	call	#___default_flush
	cmp	result1, #0 wz
 if_ne	neg	local01, #1
LR__0086
	mov	result1, local01
	mov	ptra, fp
	call	#popregs_
___default_putc_ret
	ret

___default_putc_terminal
	mov	COUNT_, #4
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	rdlong	local03, local02
	add	local03, #8
	rdlong	result1, local03
	test	result1, #1 wz
 if_ne	mov	arg01, local02
 if_ne	call	#___default_flush
	rdlong	arg01, local03
	or	arg01, #2
	wrlong	arg01, local03
	sub	local03, #8
	rdlong	arg01, local03
	mov	local04, arg01
	add	local03, #12
	add	local04, local03
	wrbyte	local01, local04
	getbyte	local01, local01, #0
	sub	local03, #12
	add	arg01, #1
	wrlong	arg01, local03
	cmp	local01, #10 wz
 if_ne	cmp	arg01, ##1024 wz
 if_ne	jmp	#LR__0087
	mov	arg01, local02
	call	#___default_flush
	cmp	result1, #0 wz
 if_ne	neg	local01, #1
LR__0087
	mov	result1, local01
	mov	ptra, fp
	call	#popregs_
___default_putc_terminal_ret
	ret

___default_flush
	mov	COUNT_, #13
	call	#pushregs_
	mov	local01, arg01
	rdlong	local02, local01
	rdlong	local03, local02
	add	local02, #8
	rdlong	local04, local02
	sub	local02, #8
	test	local04, #2 wz
 if_e	jmp	#LR__0090
	cmps	local03, #1 wc
 if_b	jmp	#LR__0092
	add	local01, #8
	rdlong	local04, local01
	sub	local01, #8
	test	local04, #64 wz
 if_e	jmp	#LR__0089
	add	local01, #8
	rdlong	local04, local01
	sub	local01, #8
	test	local04, #128 wz
 if_e	jmp	#LR__0088
	add	local01, #44
	rdlong	local04, local01
	sub	local01, #44
	rdlong	local05, local04
	add	local04, #4
	rdlong	local04, local04
	mov	arg01, local01
	mov	arg02, #0
	mov	arg03, #2
	mov	local06, objptr
	mov	objptr, local05
	call	local04
	mov	objptr, local06
	add	local01, #8
	rdlong	local04, local01
	andn	local04, #128
	wrlong	local04, local01
	sub	local01, #8
LR__0088
LR__0089
	add	local01, #20
	rdlong	local04, local01
	sub	local01, #20
	rdlong	local05, local04
	add	local04, #4
	rdlong	local07, local04
	add	local02, #12
	mov	arg02, local02
	sub	local02, #12
	mov	arg01, local01
	mov	arg03, local03
	mov	local06, objptr
	mov	objptr, local05
	call	local07
	mov	objptr, local06
	jmp	#LR__0092
LR__0090
	add	local02, #8
	rdlong	local04, local02
	sub	local02, #8
	test	local04, #1 wz
 if_e	jmp	#LR__0091
	cmp	local03, #0 wz
 if_e	jmp	#LR__0091
	add	local01, #44
	rdlong	local08, local01
	sub	local01, #44
	mov	local04, local08
	rdlong	local05, local04
	add	local04, #4
	rdlong	local09, local04
	mov	local07, local09
	mov	local10, local01
	neg	local11, local03
	mov	local12, #1
	mov	arg01, local10
	mov	arg02, local11
	mov	arg03, #1
	mov	local06, objptr
	mov	objptr, local05
	call	local07
	mov	objptr, local06
	mov	local04, result1
	mov	local13, local04
	cmps	local13, #0 wc
 if_ae	mov	local13, local03
LR__0091
LR__0092
	wrlong	#0, local02
	add	local02, #4
	wrlong	#0, local02
	add	local02, #4
	wrlong	#0, local02
	mov	result1, #0
	mov	ptra, fp
	call	#popregs_
___default_flush_ret
	ret

_main
	mov	COUNT_, #1
	call	#pushregs_
	mov	local01, ##@LR__1240
	mov	arg01, #61
	mov	arg02, #60
	mov	arg03, #59
	mov	arg04, #58
	call	#__vfs_open_sdcardx
	mov	arg02, result1
	mov	arg01, local01
	call	#__system___mount
	call	#_mad_begin
LR__0093
	jmp	#LR__0093
	mov	ptra, fp
	call	#popregs_
_main_ret
	ret

_move_servo_0124
	mov	_var01, arg01
	mov	_var02, arg02
	mov	_var03, arg03
	mov	_var04, _var02
	fle	_var04, #4
	jmprel	_var04
LR__0094
	jmp	#LR__0095
	jmp	#LR__0096
	jmp	#LR__0097
	jmp	#LR__0098
	jmp	#LR__0098
	jmp	#LR__0098
LR__0095
	add	_var01, #4
	rdlong	_var04, _var01
	mov	_var02, _var04
	add	_var02, #24
	rdlong	_var02, _var02
	add	_var02, _var03
	add	_var04, #24
	wrlong	_var02, _var04
	jmp	#LR__0098
LR__0096
	add	_var01, #4
	rdlong	_var05, _var01
	add	_var05, #24
	wrlong	_var03, _var05
	jmp	#LR__0098
LR__0097
LR__0098
	mov	result1, #1
_move_servo_0124_ret
	ret

_control_cog_0137
	mov	COUNT_, #19
	call	#pushregs_
	add	ptra, #244
	mov	local01, arg01
LR__0099
	add	ptr__dat__, ##97284
	mov	arg01, ptr__dat__
	sub	ptr__dat__, ##97284
	mov	arg02, #0
	mov	arg03, #26
	mov	arg04, #0
	call	#_mcp23017_begin
	cmp	result1, #0 wz
 if_ne	jmp	#LR__0100
	mov	arg01, #100
	call	#__system___waitms
	jmp	#LR__0099
LR__0100
	add	ptr__dat__, ##97164
	mov	arg01, ptr__dat__
	sub	ptr__dat__, ##97164
	mov	arg02, #29
	mov	arg03, #28
	mov	arg04, #36
	mov	arg05, #0
	call	#_navkey_begin
	add	ptr__dat__, ##97164
	mov	arg01, ptr__dat__
	sub	ptr__dat__, ##97164
	mov	arg03, #0
	mov	arg02, #10
	call	#_writeNavKey32_0065
	add	ptr__dat__, ##97164
	mov	arg01, ptr__dat__
	sub	ptr__dat__, ##97164
	mov	arg02, ##100000
	call	#_navkey_write_max
	add	ptr__dat__, ##97164
	mov	arg01, ptr__dat__
	sub	ptr__dat__, ##97164
	mov	arg02, ##-100000
	call	#_navkey_write_min
	add	ptr__dat__, ##97164
	mov	arg01, ptr__dat__
	sub	ptr__dat__, ##97164
	mov	arg03, #1
	mov	arg02, #22
	call	#_writeNavKey32_0065
	add	ptr__dat__, ##97164
	mov	arg01, ptr__dat__
	sub	ptr__dat__, ##97164
	mov	arg03, #300
	mov	arg02, #29
	call	#_writeNavKey8_0064
	add	ptr__dat__, ##97164
	mov	arg01, ptr__dat__
	sub	ptr__dat__, ##97164
	mov	arg03, #0
	mov	arg02, #10
	call	#_writeNavKey32_0065
	add	fp, #4
	mov	arg01, fp
	sub	fp, #4
	add	local01, #8
	rdlong	arg02, local01
	mov	arg03, #48
	call	#__system____builtin_memmove
	mov	arg01, ##1000
	call	#__system___waitms
	mov	local02, #0
	mov	local03, #0
	mov	local04, #0
	mov	local05, #0
	mov	local06, #1
	mov	local07, #0
	add	fp, #76
	mov	arg01, fp
	sub	fp, #76
	sub	local01, #4
	rdlong	arg02, local01
	sub	local01, #4
	mov	arg03, #40
	call	#__system____builtin_memmove
LR__0101
	add	fp, #116
	mov	arg01, fp
	sub	fp, #116
	add	local01, #8
	rdlong	arg02, local01
	mov	arg03, #48
	call	#__system____builtin_memmove
	add	fp, #164
	mov	arg01, fp
	sub	fp, #164
	sub	local01, #4
	rdlong	local08, local01
	mov	arg02, local08
	mov	arg03, #40
	call	#__system____builtin_memmove
	rdlong	local09, local01
	rdlong	arg01, local09
	sub	local01, #4
	rdlong	arg02, local01
	add	arg02, #20
	call	#_raw_to_force
	mov	local10, result1
	add	fp, #208
	mov	arg01, fp
	sub	fp, #208
	rdlong	arg02, local01
	add	arg02, #120
	mov	arg03, #28
	call	#__system____builtin_memmove
	add	ptr__dat__, ##97284
	mov	arg01, ptr__dat__
	sub	ptr__dat__, ##97284
	call	#_mcp_update_register
	add	ptr__dat__, ##97284
	mov	arg01, ptr__dat__
	sub	ptr__dat__, ##97284
	mov	arg03, dira
	mov	arg02, #6
	mov	arg04, #0
	call	#_mcp_set_pin
	add	fp, #120
	rdbyte	local11, fp wz
	sub	fp, #120
 if_e	jmp	#LR__0102
	add	ptr__dat__, ##97284
	mov	arg01, ptr__dat__
	sub	ptr__dat__, ##97284
	mov	arg03, dira
	mov	arg02, #4
	mov	arg04, #0
	call	#_mcp_set_pin
	jmp	#LR__0103
LR__0102
	add	ptr__dat__, ##97284
	mov	arg01, ptr__dat__
	sub	ptr__dat__, ##97284
	mov	arg03, dira
	mov	arg02, #4
	mov	arg04, #0
	call	#_mcp_set_pin
LR__0103
	add	ptr__dat__, ##97284
	mov	arg01, ptr__dat__
	sub	ptr__dat__, ##97284
	mov	arg03, dira
	mov	arg02, #3
	call	#_mcp_get_pin
	zerox	result1, #7 wz
 if_ne	jmp	#LR__0104
	add	local01, #8
	rdlong	arg01, local01
	sub	local01, #8
	mov	arg02, #1
	mov	arg03, #1
	call	#_state_machine_set
	jmp	#LR__0105
LR__0104
	add	local01, #8
	rdlong	arg01, local01
	sub	local01, #8
	mov	arg02, #1
	mov	arg03, #0
	call	#_state_machine_set
LR__0105
	add	ptr__dat__, ##97284
	mov	arg01, ptr__dat__
	sub	ptr__dat__, ##97284
	mov	arg03, dira
	mov	arg02, #1
	call	#_mcp_get_pin
	zerox	result1, #7 wz
 if_ne	jmp	#LR__0106
	add	local01, #8
	rdlong	arg01, local01
	sub	local01, #8
	mov	arg02, #2
	mov	arg03, #2
	call	#_state_machine_set
	jmp	#LR__0109
LR__0106
	add	ptr__dat__, ##97284
	mov	arg01, ptr__dat__
	sub	ptr__dat__, ##97284
	mov	arg03, dira
	mov	arg02, #0
	call	#_mcp_get_pin
	zerox	result1, #7 wz
 if_ne	jmp	#LR__0107
	add	local01, #8
	rdlong	arg01, local01
	sub	local01, #8
	mov	arg02, #2
	mov	arg03, #1
	call	#_state_machine_set
	jmp	#LR__0108
LR__0107
	add	local01, #8
	rdlong	arg01, local01
	sub	local01, #8
	mov	arg02, #2
	mov	arg03, #0
	call	#_state_machine_set
LR__0108
LR__0109
	add	ptr__dat__, ##97284
	mov	arg01, ptr__dat__
	sub	ptr__dat__, ##97284
	mov	arg03, dirb
	mov	arg02, #3
	call	#_mcp_get_pin
	getbyte	result1, result1, #0
	cmp	result1, #1 wz
 if_ne	jmp	#LR__0110
	add	local01, #8
	rdlong	arg01, local01
	sub	local01, #8
	mov	arg02, #3
	mov	arg03, #1
	call	#_state_machine_set
	jmp	#LR__0111
LR__0110
	add	local01, #8
	rdlong	arg01, local01
	sub	local01, #8
	mov	arg02, #3
	mov	arg03, #0
	call	#_state_machine_set
LR__0111
	add	ptr__dat__, ##97284
	mov	arg01, ptr__dat__
	sub	ptr__dat__, ##97284
	mov	local12, dira
	mov	arg02, #2
	mov	arg03, local12
	call	#_mcp_get_pin
	getbyte	result1, result1, #0
	cmp	result1, #1 wz
 if_ne	jmp	#LR__0112
	add	local01, #8
	rdlong	arg01, local01
	sub	local01, #8
	mov	arg02, #4
	mov	arg03, #1
	call	#_state_machine_set
	jmp	#LR__0113
LR__0112
	add	local01, #8
	rdlong	arg01, local01
	sub	local01, #8
	mov	arg02, #4
	mov	arg03, #0
	call	#_state_machine_set
LR__0113
	cmps	local10, #0 wc
 if_b	jmp	#LR__0114
	mov	arg01, local10
	call	#__system___float_fromint
	mov	local11, result1
	add	fp, #224
	rdlong	arg01, fp
	sub	fp, #224
	mov	arg02, ##1148846080
	call	#__system___float_mul
	mov	arg02, result1
	mov	arg01, local11
	neg	arg03, #1
	call	#__system___float_cmp
	cmps	result1, #1 wc
 if_b	jmp	#LR__0114
	add	local01, #8
	rdlong	arg01, local01
	sub	local01, #8
	mov	local13, #2
	mov	arg02, #9
	mov	arg03, #2
	call	#_state_machine_set
	jmp	#LR__0125
LR__0114
	cmps	local10, #0 wc
 if_ae	jmp	#LR__0115
	mov	arg01, local10
	call	#__system___float_fromint
	mov	local11, result1
	add	fp, #228
	rdlong	arg01, fp
	sub	fp, #228
	bitnot	arg01, #31
	mov	arg02, ##1148846080
	call	#__system___float_mul
	mov	arg02, result1
	mov	arg01, local11
	mov	arg03, #1
	call	#__system___float_cmp
	cmps	result1, #0 wc
 if_ae	jmp	#LR__0115
	add	local01, #8
	rdlong	arg01, local01
	sub	local01, #8
	mov	local13, #3
	mov	arg02, #9
	mov	arg03, #3
	call	#_state_machine_set
	jmp	#LR__0124
LR__0115
	add	ptr__dat__, ##97284
	mov	arg01, ptr__dat__
	sub	ptr__dat__, ##97284
	mov	local12, dirb
	mov	arg02, #4
	mov	arg03, local12
	call	#_mcp_get_pin
	getbyte	result1, result1, #0
	cmp	result1, #1 wz
 if_ne	jmp	#LR__0116
	add	local01, #8
	rdlong	arg01, local01
	sub	local01, #8
	mov	local13, #4
	mov	arg02, #9
	mov	arg03, #4
	call	#_state_machine_set
	jmp	#LR__0123
LR__0116
	add	ptr__dat__, ##97284
	mov	arg01, ptr__dat__
	sub	ptr__dat__, ##97284
	mov	local12, dirb
	mov	arg02, #5
	mov	arg03, local12
	call	#_mcp_get_pin
	getbyte	result1, result1, #0
	cmp	result1, #1 wz
 if_ne	jmp	#LR__0117
	add	local01, #8
	rdlong	arg01, local01
	sub	local01, #8
	mov	local13, #5
	mov	arg02, #9
	mov	arg03, #5
	call	#_state_machine_set
	jmp	#LR__0122
LR__0117
	add	ptr__dat__, ##97284
	mov	arg01, ptr__dat__
	sub	ptr__dat__, ##97284
	mov	local12, dirb
	mov	arg02, #6
	mov	arg03, local12
	call	#_mcp_get_pin
	getbyte	result1, result1, #0
	cmp	result1, #1 wz
 if_ne	jmp	#LR__0118
	add	local01, #8
	rdlong	arg01, local01
	sub	local01, #8
	mov	local13, #6
	mov	arg02, #9
	mov	arg03, #6
	call	#_state_machine_set
	jmp	#LR__0121
LR__0118
	mov	local11, local05
	add	local01, #4
	rdlong	local09, local01
	sub	local01, #4
	add	local09, #4
	rdlong	local08, local09
	mov	local12, local08
	sub	local11, local12
	abs	local11, local11
	cmps	local11, #2 wc
 if_ae	jmp	#LR__0119
	add	local01, #8
	rdlong	arg01, local01
	sub	local01, #8
	mov	local13, #7
	mov	arg02, #9
	mov	arg03, #7
	call	#_state_machine_set
	jmp	#LR__0120
LR__0119
	add	local01, #8
	rdlong	arg01, local01
	sub	local01, #8
	mov	local13, #8
	mov	arg02, #9
	mov	arg03, #8
	call	#_state_machine_set
LR__0120
LR__0121
LR__0122
LR__0123
LR__0124
LR__0125
	add	fp, #116
	rdlong	local11, fp
	sub	fp, #116
	cmp	local11, #2 wz
 if_ne	jmp	#LR__0172
	add	fp, #4
	rdlong	local11, fp
	cmp	local11, #2 wz
 if_e	cmp	local06, #0 wz
	add	fp, #136
	rdlong	local11, fp wz
	sub	fp, #140
 if_e	add	ptr__dat__, ##240468
 if_e	wrbyte	#0, ptr__dat__
 if_e	sub	ptr__dat__, ##240468
 if_e	jmp	#LR__0173
	add	ptr__dat__, ##240468
	wrbyte	#1, ptr__dat__
	sub	ptr__dat__, ##240468
	add	fp, #28
	rdlong	local09, fp
	cmp	local09, #1 wz
 if_e	cmp	local06, #0 wz
	add	fp, #120
	rdlong	local11, fp wz
	sub	fp, #148
 if_ne	jmp	#LR__0171
	add	fp, #36
	rdlong	local09, fp wz
	sub	fp, #36
 if_e	cmp	local06, #0 wz
	add	ptr__dat__, ##97164
	mov	arg01, ptr__dat__
	sub	ptr__dat__, ##97164
	call	#_navkey_update_status
	add	ptr__dat__, ##97216
	rdlong	local11, ptr__dat__
	sub	ptr__dat__, ##97216
	cmps	local11, #1 wc
 if_b	jmp	#LR__0135
	add	fp, #144
	rdlong	local11, fp
	sub	fp, #144
	cmp	local11, #7 wz
 if_ne	jmp	#LR__0133
	add	fp, #152
	rdlong	local14, fp
	sub	fp, #152
	fle	local14, #7
	jmprel	local14
LR__0126
	jmp	#LR__0127
	jmp	#LR__0128
	jmp	#LR__0129
	jmp	#LR__0130
	jmp	#LR__0131
	jmp	#LR__0134
	jmp	#LR__0134
	jmp	#LR__0132
LR__0127
	add	local01, #8
	rdlong	local09, local01
	sub	local01, #8
	mov	local12, #1
	add	local09, #36
	wrlong	#1, local09
	jmp	#LR__0134
LR__0128
	add	local01, #8
	rdlong	local09, local01
	sub	local01, #8
	mov	local12, #2
	add	local09, #36
	wrlong	#2, local09
	jmp	#LR__0134
LR__0129
	add	local01, #8
	rdlong	local09, local01
	sub	local01, #8
	mov	local12, #3
	add	local09, #36
	wrlong	#3, local09
	jmp	#LR__0134
LR__0130
	add	local01, #8
	rdlong	local09, local01
	sub	local01, #8
	mov	local12, #4
	add	local09, #36
	wrlong	#4, local09
	jmp	#LR__0134
LR__0131
	add	local01, #8
	rdlong	local09, local01
	sub	local01, #8
	mov	local12, #0
	add	local09, #36
	wrlong	#0, local09
	jmp	#LR__0134
LR__0132
	add	local01, #8
	rdlong	local13, local01
	sub	local01, #8
	mov	local09, local13
	mov	local12, #0
	add	local09, #36
	wrlong	#0, local09
	jmp	#LR__0134
LR__0133
	add	local01, #8
	rdlong	local11, local01
	sub	local01, #8
	add	local11, #28
	rdlong	local12, local11
	cmp	local12, #8 wz
 if_e	add	local01, #8
 if_e	rdlong	local11, local01
 if_e	sub	local01, #8
 if_e	add	local11, #36
 if_e	wrlong	#0, local11
LR__0134
LR__0135
	add	fp, #152
	rdlong	local11, fp
	sub	fp, #152
	mov	local15, local11
	fle	local15, #7
	jmprel	local15
LR__0136
	jmp	#LR__0137
	jmp	#LR__0138
	jmp	#LR__0145
	jmp	#LR__0151
	jmp	#LR__0156
	jmp	#LR__0164
	jmp	#LR__0165
	jmp	#LR__0173
LR__0137
	mov	local12, #0
	mov	arg01, local01
	mov	arg02, #3
	mov	arg03, #0
	call	#_move_servo_0124
	jmp	#LR__0173
LR__0138
	add	fp, #40
	rdlong	local09, fp
	sub	fp, #40
	cmp	local09, #1 wz
 if_e	cmp	local06, #0 wz
 if_e	jmp	#LR__0139
	mov	arg01, local01
	mov	arg02, #3
	mov	arg03, #0
	call	#_move_servo_0124
	add	local01, #8
	rdlong	local09, local01
	sub	local01, #8
	mov	local12, ##1000
	add	local09, #40
	wrlong	##1000, local09
LR__0139
	add	ptr__dat__, ##97208
	rdlong	local09, ptr__dat__
	sub	ptr__dat__, ##97208
	cmps	local09, #1 wc
 if_b	jmp	#LR__0141
	add	local01, #8
	rdlong	local09, local01
	sub	local01, #8
	add	local09, #40
	rdlong	local12, local09
	cmps	local12, ##10000 wc
 if_ae	jmp	#LR__0140
	add	local01, #8
	rdlong	local12, local01
	mov	local09, local12
	add	local12, #40
	rdlong	local16, local12
	mov	local17, local16
	abs	local13, local17 wc
	qdiv	local13, #10
	sub	local01, #8
	sub	local12, #40
	add	local09, #40
	getqx	local18
	negc	local18, local18
	wrlong	local18, local09
LR__0140
LR__0141
	add	ptr__dat__, ##97200
	rdlong	local09, ptr__dat__
	sub	ptr__dat__, ##97200
	cmps	local09, #1 wc
 if_b	jmp	#LR__0143
	add	local01, #8
	rdlong	local09, local01
	sub	local01, #8
	add	local09, #40
	rdlong	local12, local09
	cmps	local12, #11 wc
 if_b	jmp	#LR__0142
	add	local01, #8
	rdlong	local12, local01
	mov	local09, local12
	sub	local01, #8
	add	local12, #40
	rdlong	local16, local12
	mov	local17, local16
	mov	local18, local17
	shl	local18, #2
	add	local18, local17
	shl	local18, #1
	add	local09, #40
	wrlong	local18, local09
LR__0142
LR__0143
	add	ptr__dat__, ##97184
	rdlong	local09, ptr__dat__
	sub	ptr__dat__, ##97184
	cmps	local09, #1 wc
 if_b	jmp	#LR__0144
	mov	arg01, local01
	add	local01, #8
	rdlong	local18, local01
	sub	local01, #8
	mov	local08, local18
	add	local08, #40
	rdlong	local17, local08
	mov	local12, local17
	mov	arg02, #0
	mov	arg03, local12
	call	#_move_servo_0124
LR__0144
	add	ptr__dat__, ##97192
	rdlong	local09, ptr__dat__
	sub	ptr__dat__, ##97192
	cmps	local09, #1 wc
 if_b	jmp	#LR__0173
	mov	arg01, local01
	add	local01, #8
	rdlong	local18, local01
	sub	local01, #8
	mov	local08, local18
	add	local08, #40
	rdlong	local19, local08
	mov	local16, local19
	neg	local17, local16
	mov	local12, local17
	mov	arg02, #0
	mov	arg03, local12
	call	#_move_servo_0124
	jmp	#LR__0173
LR__0145
	add	fp, #40
	rdlong	local13, fp
	sub	fp, #40
	cmp	local13, #2 wz
 if_e	cmp	local06, #0 wz
 if_e	jmp	#LR__0146
	mov	arg01, local01
	mov	arg02, #3
	mov	arg03, #0
	call	#_move_servo_0124
	add	local01, #8
	rdlong	local09, local01
	sub	local01, #8
	mov	local12, ##10000
	add	local09, #40
	wrlong	##10000, local09
LR__0146
	add	ptr__dat__, ##97208
	rdlong	local09, ptr__dat__
	sub	ptr__dat__, ##97208
	cmps	local09, #1 wc
 if_b	jmp	#LR__0147
	add	local01, #8
	rdlong	local18, local01
	mov	local09, local18
	sub	local01, #8
	mov	local08, local18
	add	local08, #40
	rdlong	local17, local08
	mov	local12, local17
	sub	local12, ##1000
	add	local09, #40
	wrlong	local12, local09
LR__0147
	add	ptr__dat__, ##97200
	rdlong	local09, ptr__dat__
	sub	ptr__dat__, ##97200
	cmps	local09, #1 wc
 if_b	jmp	#LR__0148
	add	local01, #8
	rdlong	local18, local01
	mov	local09, local18
	sub	local01, #8
	mov	local08, local18
	add	local08, #40
	rdlong	local17, local08
	mov	local12, local17
	add	local12, ##1000
	add	local09, #40
	wrlong	local12, local09
LR__0148
	add	ptr__dat__, ##97188
	rdlong	local09, ptr__dat__
	sub	ptr__dat__, ##97188
	cmps	local09, #1 wc
 if_b	jmp	#LR__0149
	mov	arg01, local01
	add	local01, #8
	rdlong	local18, local01
	sub	local01, #8
	mov	local08, local18
	add	local08, #40
	rdlong	local17, local08
	mov	local12, local17
	mov	arg02, #2
	mov	arg03, local12
	call	#_move_servo_0124
LR__0149
	add	ptr__dat__, ##97196
	rdlong	local09, ptr__dat__
	sub	ptr__dat__, ##97196
	cmps	local09, #1 wc
 if_b	jmp	#LR__0150
	mov	arg01, local01
	add	local01, #8
	rdlong	local18, local01
	sub	local01, #8
	mov	local08, local18
	add	local08, #40
	rdlong	local19, local08
	mov	local16, local19
	neg	local17, local16
	mov	local12, local17
	mov	arg02, #2
	mov	arg03, local12
	call	#_move_servo_0124
LR__0150
	add	ptr__dat__, ##97184
	rdlong	local09, ptr__dat__
	sub	ptr__dat__, ##97184
	cmps	local09, #1 wc
 if_ae	mov	local12, #0
 if_ae	mov	arg01, local01
 if_ae	mov	arg02, #3
 if_ae	mov	arg03, #0
 if_ae	call	#_move_servo_0124
	add	ptr__dat__, ##97192
	rdlong	local09, ptr__dat__
	sub	ptr__dat__, ##97192
	cmps	local09, #1 wc
 if_ae	mov	local12, #0
 if_ae	mov	arg01, local01
 if_ae	mov	arg02, #3
 if_ae	mov	arg03, #0
 if_ae	call	#_move_servo_0124
	jmp	#LR__0173
LR__0151
	add	fp, #40
	rdlong	local09, fp
	sub	fp, #40
	cmp	local09, #3 wz
 if_e	cmp	local06, #0 wz
 if_e	jmp	#LR__0152
	mov	arg01, local01
	mov	arg02, #3
	mov	arg03, #0
	call	#_move_servo_0124
	add	local01, #8
	rdlong	local09, local01
	sub	local01, #4
	rdlong	local08, local01
	sub	local01, #4
	add	local08, #4
	rdlong	arg01, local08
	rdlong	local18, local01
	add	local18, #20
	mov	local17, local18
	mov	arg02, local17
	sub	local18, #20
	call	#_steps_to_mm
	mov	arg01, result1
	mov	arg02, ##1148846080
	call	#__system___float_div
	mov	arg01, result1
	mov	arg02, #1
	call	#__system___float_tointeger
	mov	local12, result1
	qmul	local12, ##1000
	add	local09, #40
	getqx	local08
	wrlong	local08, local09
LR__0152
	add	ptr__dat__, ##97208
	rdlong	local09, ptr__dat__
	sub	ptr__dat__, ##97208
	cmps	local09, #1 wc
 if_b	jmp	#LR__0153
	add	local01, #8
	rdlong	local18, local01
	mov	local09, local18
	sub	local01, #8
	mov	local08, local18
	add	local08, #40
	rdlong	local17, local08
	mov	local12, local17
	sub	local12, ##1000
	add	local09, #40
	wrlong	local12, local09
LR__0153
	add	ptr__dat__, ##97200
	rdlong	local09, ptr__dat__
	sub	ptr__dat__, ##97200
	cmps	local09, #1 wc
 if_b	jmp	#LR__0154
	add	local01, #8
	rdlong	local18, local01
	mov	local09, local18
	sub	local01, #8
	mov	local08, local18
	add	local08, #40
	rdlong	local17, local08
	mov	local12, local17
	add	local12, ##1000
	add	local09, #40
	wrlong	local12, local09
LR__0154
	add	ptr__dat__, ##97184
	rdlong	local09, ptr__dat__
	sub	ptr__dat__, ##97184
	cmps	local09, #1 wc
 if_b	jmp	#LR__0155
	mov	arg01, local01
	add	local01, #8
	rdlong	local18, local01
	sub	local01, #8
	mov	local08, local18
	add	local08, #40
	rdlong	local17, local08
	mov	local12, local17
	mov	arg02, #1
	mov	arg03, local12
	call	#_move_servo_0124
LR__0155
	add	ptr__dat__, ##97192
	rdlong	local09, ptr__dat__
	sub	ptr__dat__, ##97192
	cmps	local09, #1 wc
 if_b	jmp	#LR__0173
	mov	arg01, local01
	add	local01, #8
	rdlong	local18, local01
	sub	local01, #8
	mov	local08, local18
	add	local08, #40
	rdlong	local17, local08
	mov	arg02, #1
	mov	arg03, local17
	call	#_move_servo_0124
	jmp	#LR__0173
LR__0156
	add	fp, #40
	rdlong	local13, fp
	sub	fp, #40
	cmp	local13, #4 wz
 if_e	cmp	local06, #0 wz
 if_e	jmp	#LR__0157
	mov	arg01, local01
	mov	arg02, #3
	mov	arg03, #0
	call	#_move_servo_0124
	add	local01, #8
	rdlong	local09, local01
	sub	local01, #8
	add	local09, #40
	wrlong	#0, local09
LR__0157
	add	ptr__dat__, ##97284
	mov	arg01, ptr__dat__
	sub	ptr__dat__, ##97284
	mov	arg03, dirb
	mov	arg02, #5
	call	#_mcp_get_pin
	getbyte	result1, result1, #0
	cmp	result1, #1 wz
 if_ne	jmp	#LR__0158
	add	local01, #8
	rdlong	local12, local01
	sub	local01, #8
	add	local12, #40
	rdlong	local17, local12
	mov	local18, local17
	cmp	local18, #2 wz
 if_ne	jmp	#LR__0158
	mov	arg01, local01
	mov	arg02, #3
	mov	arg03, #0
	call	#_move_servo_0124
	mov	arg01, #100
	call	#__system___waitms
	mov	arg01, local01
	mov	arg02, #2
	mov	arg03, ##-1500
	call	#_move_servo_0124
	add	local01, #8
	rdlong	local09, local01
	sub	local01, #8
	mov	local12, #3
	add	local09, #40
	wrlong	#3, local09
	jmp	#LR__0162
LR__0158
	add	ptr__dat__, ##97284
	mov	arg01, ptr__dat__
	sub	ptr__dat__, ##97284
	mov	arg03, dirb
	mov	arg02, #5
	call	#_mcp_get_pin
	zerox	result1, #7 wz
 if_ne	jmp	#LR__0159
	add	local01, #8
	rdlong	local12, local01
	sub	local01, #8
	add	local12, #40
	rdlong	local17, local12
	mov	local18, local17
	cmp	local18, #3 wz
 if_ne	jmp	#LR__0159
	mov	arg01, local01
	mov	arg02, #3
	mov	arg03, #0
	call	#_move_servo_0124
	mov	arg01, #100
	call	#__system___waitms
	mov	arg01, local01
	mov	arg02, #2
	mov	arg03, ##1500
	call	#_move_servo_0124
	add	local01, #8
	rdlong	local09, local01
	sub	local01, #8
	mov	local12, #4
	add	local09, #40
	wrlong	#4, local09
	jmp	#LR__0161
LR__0159
	add	ptr__dat__, ##97284
	mov	arg01, ptr__dat__
	sub	ptr__dat__, ##97284
	mov	local12, #5
	mov	arg03, dirb
	mov	arg02, #5
	call	#_mcp_get_pin
	getbyte	result1, result1, #0
	cmp	result1, #1 wz
 if_ne	jmp	#LR__0160
	add	local01, #8
	rdlong	local08, local01
	sub	local01, #8
	mov	local12, local08
	add	local12, #40
	rdlong	local17, local12
	sub	local12, #40
	mov	local18, local17
	cmp	local18, #4 wz
 if_ne	jmp	#LR__0160
	mov	arg01, local01
	mov	arg02, #3
	mov	arg03, #0
	call	#_move_servo_0124
	mov	arg01, ##1000
	call	#__system___waitms
	add	local01, #8
	rdlong	local13, local01
	sub	local01, #8
	mov	local09, local13
	mov	local12, #1
	add	local09, #40
	wrlong	#1, local09
	sub	local09, #40
LR__0160
LR__0161
LR__0162
	add	ptr__dat__, ##97184
	rdlong	local09, ptr__dat__
	sub	ptr__dat__, ##97184
	cmps	local09, #1 wc
 if_b	jmp	#LR__0163
	add	local01, #8
	rdlong	local09, local01
	sub	local01, #8
	add	local09, #40
	wrlong	#2, local09
	mov	local12, ##10000
	mov	arg01, local01
	mov	arg02, #2
	mov	arg03, ##10000
	call	#_move_servo_0124
LR__0163
	add	ptr__dat__, ##97192
	rdlong	local09, ptr__dat__
	sub	ptr__dat__, ##97192
	cmps	local09, #1 wc
 if_b	jmp	#LR__0173
	add	local01, #8
	rdlong	local09, local01
	sub	local01, #8
	add	local09, #40
	wrlong	#2, local09
	mov	local12, ##10000
	mov	arg01, local01
	mov	arg02, #2
	mov	arg03, ##10000
	call	#_move_servo_0124
	jmp	#LR__0173
LR__0164
	mov	local12, #0
	mov	arg01, local01
	mov	arg02, #3
	mov	arg03, #0
	call	#_move_servo_0124
	jmp	#LR__0173
LR__0165
	add	fp, #40
	rdlong	local09, fp
	sub	fp, #40
	cmp	local09, #6 wz
 if_e	cmp	local06, #0 wz
 if_ne	add	local01, #8
 if_ne	rdlong	local09, local01
 if_ne	sub	local01, #8
 if_ne	add	local09, #40
 if_ne	wrlong	#0, local09
	add	ptr__dat__, ##97208
	rdlong	local09, ptr__dat__
	sub	ptr__dat__, ##97208
	cmps	local09, #1 wc
 if_b	jmp	#LR__0166
	add	local01, #8
	rdlong	local08, local01
	mov	local09, local08
	sub	local01, #8
	add	local08, #40
	rdlong	local17, local08
	mov	local12, local17
	add	local12, #100
	add	local09, #40
	wrlong	local12, local09
LR__0166
	add	ptr__dat__, ##97200
	rdlong	local09, ptr__dat__
	sub	ptr__dat__, ##97200
	cmps	local09, #1 wc
 if_b	jmp	#LR__0168
	add	local01, #8
	rdlong	local09, local01
	sub	local01, #8
	add	local09, #40
	rdlong	local12, local09
	cmps	local12, #101 wc
 if_b	jmp	#LR__0167
	add	local01, #8
	rdlong	local08, local01
	mov	local09, local08
	sub	local01, #8
	add	local08, #40
	rdlong	local17, local08
	mov	local12, local17
	sub	local12, #100
	add	local09, #40
	wrlong	local12, local09
LR__0167
LR__0168
	qmul	local10, ##1000
	add	local01, #8
	rdlong	local12, local01
	sub	local01, #8
	mov	local13, local12
	add	local13, #40
	rdlong	local18, local13
	getqx	local09
	cmps	local09, local18 wc
 if_ae	jmp	#LR__0169
	add	ptr__dat__, ##97188
	rdlong	local09, ptr__dat__
	sub	ptr__dat__, ##97188
	cmps	local09, #1 wc
 if_ae	mov	local12, #100
 if_ae	mov	arg01, local01
 if_ae	mov	arg02, #2
 if_ae	mov	arg03, #100
 if_ae	call	#_move_servo_0124
	add	ptr__dat__, ##97196
	rdlong	local09, ptr__dat__
	sub	ptr__dat__, ##97196
	cmps	local09, #1 wc
 if_ae	mov	local12, #100
 if_ae	mov	arg01, local01
 if_ae	mov	arg02, #2
 if_ae	mov	arg03, #100
 if_ae	call	#_move_servo_0124
	jmp	#LR__0170
LR__0169
	mov	local12, #0
	mov	arg01, local01
	mov	arg02, #3
	mov	arg03, #0
	call	#_move_servo_0124
LR__0170
	add	ptr__dat__, ##97184
	rdlong	local09, ptr__dat__
	sub	ptr__dat__, ##97184
	cmps	local09, #1 wc
 if_ae	mov	local12, #0
 if_ae	mov	arg01, local01
 if_ae	mov	arg02, #3
 if_ae	mov	arg03, #0
 if_ae	call	#_move_servo_0124
	add	ptr__dat__, ##97192
	rdlong	local09, ptr__dat__
	sub	ptr__dat__, ##97192
	cmps	local09, #1 wc
 if_b	jmp	#LR__0173
	mov	local12, #0
	mov	arg01, local01
	mov	arg02, #3
	mov	arg03, #0
	call	#_move_servo_0124
	jmp	#LR__0173
LR__0171
	add	fp, #148
	rdlong	local11, fp
	sub	fp, #148
	cmp	local11, #1 wz
 if_e	jmp	#LR__0173
	add	fp, #148
	rdlong	local11, fp
	sub	fp, #148
	cmp	local11, #2 wz
 if_ne	jmp	#LR__0173
	add	fp, #36
	rdlong	local11, fp
	sub	fp, #36
	cmp	local11, #2 wz
 if_ne	add	ptr__dat__, ##241856
 if_ne	wrbyte	#1, ptr__dat__
 if_ne	sub	ptr__dat__, ##144696
 if_ne	wrbyte	#1, ptr__dat__
 if_ne	sub	ptr__dat__, ##97160
	add	ptr__dat__, ##241828
	mov	arg01, ptr__dat__
	sub	ptr__dat__, ##241828
	call	#_queue_isempty
	cmp	result1, #0 wz
 if_e	jmp	#LR__0173
	add	ptr__dat__, ##97160
	wrbyte	#0, ptr__dat__
	add	ptr__dat__, ##144696
	wrbyte	#0, ptr__dat__
	sub	ptr__dat__, ##241856
	add	local01, #8
	rdlong	arg01, local01
	sub	local01, #8
	mov	arg02, #10
	mov	arg03, #1
	call	#_state_machine_set
	jmp	#LR__0173
LR__0172
	add	ptr__dat__, ##240468
	wrbyte	#0, ptr__dat__
	sub	ptr__dat__, ##240468
LR__0173
	add	local01, #4
	rdlong	local11, local01
	sub	local01, #4
	add	local11, #4
	rdlong	local05, local11
	add	fp, #4
	mov	arg01, fp
	add	fp, #112
	mov	arg02, fp
	sub	fp, #116
	mov	arg03, #48
	call	#__system____builtin_memmove
	add	fp, #76
	mov	arg01, fp
	add	fp, #88
	mov	arg02, fp
	sub	fp, #164
	mov	local13, #40
	mov	arg03, #40
	call	#__system____builtin_memmove
	mov	local06, #0
	jmp	#LR__0101
	mov	ptra, fp
	call	#popregs_
_control_cog_0137_ret
	ret

_control_begin
	wrlong	arg02, arg01
	add	arg01, #4
	wrlong	arg04, arg01
	add	arg01, #4
	wrlong	arg03, arg01
	sub	arg01, #8
	add	ptr__dat__, ##17160
	mov	arg04, ptr__dat__
	wrlong	objptr, arg04
	add	arg04, #4
	wrlong	ptr__control_cog_0137_, arg04
	add	arg04, #4
	wrlong	arg01, arg04
	mov	arg03, ptr__dat__
	sub	ptr__dat__, ##17160
	mov	result1, #30
	setq	arg03
	coginit	result1, entryptr__ wc
 if_b	neg	result1, #1
	add	arg01, #12
	wrlong	result1, arg01
	cmp	result1, ##-1 wz
 if_ne	mov	result1, #1
 if_e	mov	result1, #0
_control_begin_ret
	ret

_count
	mov	COUNT_, #3
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, #0
	cmps	arg03, #0 wc
 if_b	jmp	#LR__0174
	sub	arg03, local01
	mov	local03, arg03
	abs	arg04, local03
	cmps	arg04, #4 wc
 if_ae	neg	result1, #1
 if_ae	jmp	#LR__0175
	cmps	local03, #0 wc
 if_b	and	local03, #3
 if_b	or	local03, #4
 if_ae	and	local03, #3
LR__0174
	mov	arg02, #28
	shl	local03, #28
	or	arg02, local03
	dirl	local01
	wrpin	arg02, local01
	wxpin	#0, local01
	wypin	#0, local01
	dirh	local01
	mov	arg01, local02
	call	#__system___waitms
	mov	result1, #0
	rdpin	result1, local01
	fltl	local01
	wrpin	#0, local01
LR__0175
	mov	ptra, fp
	call	#popregs_
_count_ret
	ret

_open
	mov	COUNT_, #5
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	add	ptr__dat__, ##241864
	mov	local04, ptr__dat__
	mov	local05, #0
	sub	ptr__dat__, ##241864
	loc	pa,	#(@LR__0177-@LR__0176)
	call	#FCACHE_LOAD_
LR__0176
	cmps	local05, #10 wc
 if_ae	jmp	#LR__0178
	mov	result1, local05
	shl	result1, #1
	add	result1, local05
	shl	result1, #4
	add	result1, local04
	add	result1, #8
	rdlong	result1, result1 wz
 if_ne	add	local05, #1
 if_ne	jmp	#LR__0176
LR__0177
LR__0178
	cmp	local05, #10 wz
 if_e	add	ptr___system__dat__, #24
 if_e	wrlong	#11, ptr___system__dat__
 if_e	sub	ptr___system__dat__, #24
 if_e	neg	result1, #1
 if_e	jmp	#LR__0179
	mov	arg01, local05
	shl	arg01, #1
	add	arg01, local05
	shl	arg01, #4
	add	arg01, local04
	mov	arg02, local01
	mov	arg03, local02
	mov	arg04, local03
	call	#__openraw
	cmps	result1, #0 wz
 if_e	mov	result1, local05
LR__0179
	mov	ptra, fp
	call	#popregs_
_open_ret
	ret

_write
	mov	COUNT_, #1
	call	#pushregs_
	mov	local01, arg01
	cmp	local01, #10 wc
 if_ae	add	ptr___system__dat__, #24
 if_ae	wrlong	#5, ptr___system__dat__
 if_ae	sub	ptr___system__dat__, #24
 if_ae	neg	result1, #1
 if_ae	jmp	#LR__0180
	mov	arg01, local01
	shl	arg01, #1
	add	arg01, local01
	shl	arg01, #4
	add	ptr__dat__, ##241864
	add	arg01, ptr__dat__
	sub	ptr__dat__, ##241864
	call	#__vfswrite
LR__0180
	mov	ptra, fp
	call	#popregs_
_write_ret
	ret

_read
	mov	COUNT_, #1
	call	#pushregs_
	mov	local01, arg01
	cmp	local01, #10 wc
 if_ae	add	ptr___system__dat__, #24
 if_ae	wrlong	#5, ptr___system__dat__
 if_ae	sub	ptr___system__dat__, #24
 if_ae	neg	result1, #1
 if_ae	jmp	#LR__0181
	mov	arg01, local01
	shl	arg01, #1
	add	arg01, local01
	shl	arg01, #4
	add	ptr__dat__, ##241864
	add	arg01, ptr__dat__
	sub	ptr__dat__, ##241864
	call	#__vfsread
LR__0181
	mov	ptra, fp
	call	#popregs_
_read_ret
	ret

_close
	mov	COUNT_, #1
	call	#pushregs_
	mov	local01, arg01
	cmp	local01, #10 wc
 if_ae	add	ptr___system__dat__, #24
 if_ae	wrlong	#5, ptr___system__dat__
 if_ae	sub	ptr___system__dat__, #24
 if_ae	neg	result1, #1
 if_ae	jmp	#LR__0182
	mov	arg01, local01
	shl	arg01, #1
	add	arg01, local01
	shl	arg01, #4
	add	ptr__dat__, ##241864
	add	arg01, ptr__dat__
	sub	ptr__dat__, ##241864
	call	#__closeraw
LR__0182
	mov	ptra, fp
	call	#popregs_
_close_ret
	ret

_lseek
	mov	COUNT_, #6
	call	#pushregs_
	cmp	arg01, #10 wc
 if_ae	add	ptr___system__dat__, #24
 if_ae	wrlong	#5, ptr___system__dat__
 if_ae	sub	ptr___system__dat__, #24
 if_ae	neg	result1, #1
 if_ae	jmp	#LR__0184
	mov	local01, arg01
	shl	local01, #1
	add	local01, arg01
	shl	local01, #4
	add	ptr__dat__, ##241864
	add	local01, ptr__dat__
	add	local01, #44
	rdlong	arg01, local01 wz
	sub	local01, #44
	sub	ptr__dat__, ##241864
 if_e	add	ptr___system__dat__, #24
 if_e	wrlong	#16, ptr___system__dat__
 if_e	sub	ptr___system__dat__, #24
 if_e	neg	result1, #1
 if_e	jmp	#LR__0184
	add	local01, #8
	rdlong	local02, local01
	sub	local01, #8
	test	local02, #64 wz
 if_ne	add	local01, #8
 if_ne	rdlong	local02, local01
 if_ne	or	local02, #128
 if_ne	wrlong	local02, local01
 if_ne	sub	local01, #8
	add	local01, #44
	rdlong	local02, local01
	sub	local01, #44
	rdlong	local03, local02
	add	local02, #4
	rdlong	local04, local02
	mov	arg01, local01
	mov	local05, objptr
	mov	objptr, local03
	call	local04
	mov	objptr, local05
	mov	local06, result1
	cmps	local06, #0 wc
 if_ae	jmp	#LR__0183
	neg	arg01, local06 wz
	add	ptr___system__dat__, #24
	wrlong	arg01, ptr___system__dat__
	sub	ptr___system__dat__, #24
 if_ne	neg	result1, #1
 if_e	mov	result1, #0
	jmp	#LR__0184
LR__0183
	mov	result1, local06
LR__0184
	mov	ptra, fp
	call	#popregs_
_lseek_ret
	ret

_ioctl
	mov	COUNT_, #4
	call	#pushregs_
	call	#___getftab
	mov	local01, result1 wz
 if_e	add	ptr___system__dat__, #24
 if_e	wrlong	#5, ptr___system__dat__
 if_e	sub	ptr___system__dat__, #24
 if_e	neg	result1, #1
 if_e	jmp	#LR__0186
	add	local01, #36
	rdlong	arg01, local01
	sub	local01, #36
	rdlong	local02, arg01
	add	arg01, #4
	rdlong	local03, arg01
	mov	arg01, local01
	mov	local04, objptr
	mov	objptr, local02
	call	local03
	mov	objptr, local04
	mov	arg01, result1 wz
 if_e	jmp	#LR__0185
	add	ptr___system__dat__, #24
	wrlong	arg01, ptr___system__dat__
	sub	ptr___system__dat__, #24
	cmp	arg01, #0 wz
 if_ne	neg	result1, #1
 if_e	mov	result1, #0
	jmp	#LR__0186
LR__0185
	mov	result1, #0
LR__0186
	mov	ptra, fp
	call	#popregs_
_ioctl_ret
	ret

_isatty
	mov	COUNT_, #0
	call	#pushregs_
	add	ptra, #12
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	mov	arg03, fp
	sub	fp, #8
	mov	arg02, #256
	call	#_ioctl
	cmp	result1, #0 wz
 if_e	mov	result1, #1
 if_ne	mov	result1, #0
	mov	ptra, fp
	call	#popregs_
_isatty_ret
	ret

___getftab
	cmp	arg01, #10 wc
 if_ae	mov	result1, #0
 if_ae	jmp	#___getftab_ret
	mov	result1, arg01
	shl	result1, #1
	add	result1, arg01
	shl	result1, #4
	add	ptr__dat__, ##241864
	add	result1, ptr__dat__
	sub	ptr__dat__, ##241864
___getftab_ret
	ret

_fgetc
	mov	COUNT_, #3
	call	#pushregs_
	add	arg01, #28
	rdlong	local01, arg01
	sub	arg01, #28
	rdlong	local02, local01
	add	local01, #4
	rdlong	local01, local01
	mov	local03, objptr
	mov	objptr, local02
	call	local01
	mov	objptr, local03
	mov	ptra, fp
	call	#popregs_
_fgetc_ret
	ret

_printf
	mov	COUNT_, #0
	call	#pushregs_
	add	ptra, #24
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	sub	fp, #8
	mov	arg01, #1
	call	#___getftab
	add	fp, #16
	wrlong	result1, fp
	sub	fp, #8
	rdlong	result1, fp
	wrlong	result1, fp
	add	fp, #8
	mov	arg01, fp
	sub	fp, #16
	mov	arg02, ptr___struct___fmtfile_putchar_
	call	#__system___make_methodptr
	mov	arg01, result1
	add	fp, #4
	rdlong	arg02, fp
	add	fp, #4
	mov	arg03, fp
	sub	fp, #8
	call	#__dofmt
	add	fp, #12
	wrlong	result1, fp
	sub	fp, #12
	mov	ptra, fp
	call	#popregs_
_printf_ret
	ret

_fopen
	mov	COUNT_, #16
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, #0
	mov	local04, #0
	mov	local05, #0
	mov	local06, #0
	mov	local07, #0
	mov	local08, #0
LR__0187
	mov	local09, local02
	mov	local10, local02
	add	local10, #1
	mov	local02, local10
	rdbyte	local11, local09
	mov	local12, local11 wz
 if_e	jmp	#LR__0194
	mov	local13, local12
	cmp	local13, #114 wz
 if_e	jmp	#LR__0188
	cmp	local13, #119 wz
 if_e	jmp	#LR__0189
	cmp	local13, #97 wz
 if_e	jmp	#LR__0190
	cmp	local13, #98 wz
 if_e	jmp	#LR__0191
	cmp	local13, #43 wz
 if_e	jmp	#LR__0192
	jmp	#LR__0193
LR__0188
	mov	local03, #1
	jmp	#LR__0187
LR__0189
	mov	local07, #1
	mov	local08, #1
	mov	local04, #1
	jmp	#LR__0187
LR__0190
	mov	local04, #1
	mov	local07, #1
	mov	local05, #1
	jmp	#LR__0187
LR__0191
	mov	local06, #1
	jmp	#LR__0187
LR__0192
	cmp	local03, #0 wz
 if_ne	mov	local04, #1
 if_ne	jmp	#LR__0187
	cmp	local04, #0 wz
 if_ne	mov	local03, #1
 if_ne	jmp	#LR__0187
	add	ptr___system__dat__, #24
	wrlong	#10, ptr___system__dat__
	sub	ptr___system__dat__, #24
	mov	result1, #0
	jmp	#LR__0197
LR__0193
	add	ptr___system__dat__, #24
	wrlong	#10, ptr___system__dat__
	sub	ptr___system__dat__, #24
	mov	result1, #0
	jmp	#LR__0197
LR__0194
	cmp	local03, #0 wz
 if_e	jmp	#LR__0195
	cmp	local04, #0 wz
 if_ne	mov	local14, #2
 if_ne	jmp	#LR__0196
	mov	local14, #0
	jmp	#LR__0196
LR__0195
	cmp	local04, #0 wz
 if_ne	mov	local14, #1
 if_e	add	ptr___system__dat__, #24
 if_e	wrlong	#10, ptr___system__dat__
 if_e	sub	ptr___system__dat__, #24
 if_e	mov	result1, #0
 if_e	jmp	#LR__0197
LR__0196
	cmp	local05, #0 wz
 if_ne	or	local14, #32
	cmp	local07, #0 wz
 if_ne	or	local14, #4
	cmp	local08, #0 wz
 if_ne	or	local14, #8
	mov	arg02, local14
	mov	arg01, local01
	mov	arg03, #438
	call	#_open
	mov	local15, result1
	cmps	local15, #0 wc
 if_b	mov	result1, #0
 if_b	jmp	#LR__0197
	mov	arg01, local15
	call	#___getftab
	mov	local16, result1
	mov	arg01, local15
	call	#_isatty
	cmp	result1, #0 wz
 if_ne	add	local16, #8
 if_ne	rdlong	local11, local16
 if_ne	or	local11, #256
 if_ne	wrlong	local11, local16
 if_ne	sub	local16, #8
	mov	result1, local16
LR__0197
	mov	ptra, fp
	call	#popregs_
_fopen_ret
	ret

_fflush
	mov	COUNT_, #3
	call	#pushregs_
	mov	local01, #0
	add	arg01, #40
	rdlong	result1, arg01 wz
	sub	arg01, #40
 if_e	jmp	#LR__0198
	add	arg01, #40
	rdlong	local01, arg01
	sub	arg01, #40
	rdlong	local02, local01
	add	local01, #4
	rdlong	local01, local01
	mov	local03, objptr
	mov	objptr, local02
	call	local01
	mov	objptr, local03
	mov	local01, result1
LR__0198
	mov	result1, local01
	mov	ptra, fp
	call	#popregs_
_fflush_ret
	ret

_fwrite
	mov	COUNT_, #3
	call	#pushregs_
	qmul	arg02, arg03
	mov	local01, arg01
	mov	local02, arg04
	mov	arg01, local02
	getqx	local03
	call	#_fflush
	mov	arg01, local02
	mov	arg02, local01
	mov	arg03, local03
	call	#__vfswrite
	mov	ptra, fp
	call	#popregs_
_fwrite_ret
	ret

_fread
	mov	COUNT_, #5
	call	#pushregs_
	qmul	arg02, arg03
	mov	local01, arg01
	mov	local02, arg04
	mov	local03, #0
	add	local02, #8
	rdlong	result1, local02
	sub	local02, #8
	test	result1, #256 wz
	getqx	local04
 if_e	jmp	#LR__0201
	mov	local05, local01
LR__0199
	cmp	local04, #1 wc
 if_b	jmp	#LR__0200
	mov	arg01, local02
	call	#_fgetc
	cmps	result1, #0 wc
 if_ae	wrbyte	result1, local05
 if_ae	add	local03, #1
 if_ae	add	local05, #1
 if_ae	jmp	#LR__0199
LR__0200
	mov	result1, local03
	jmp	#LR__0202
LR__0201
	mov	arg01, local02
	call	#_fflush
	mov	arg02, local01
	mov	arg03, local04
	mov	arg01, local02
	call	#__vfsread
LR__0202
	mov	ptra, fp
	call	#popregs_
_fread_ret
	ret

_fseek
	mov	COUNT_, #4
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	mov	local04, local01
	mov	arg01, #0
	call	#___getftab
	sub	local04, result1
	qdiv	local04, #48
	mov	arg01, local01
	getqx	local04
	call	#_fflush
	mov	arg01, local04
	mov	arg02, local02
	mov	arg03, local03
	call	#_lseek
	cmp	result1, ##-1 wz
 if_ne	mov	result1, #0
	mov	ptra, fp
	call	#popregs_
_fseek_ret
	ret

_ftell
	mov	COUNT_, #2
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg01
	mov	arg01, #0
	call	#___getftab
	sub	local02, result1
	qdiv	local02, #48
	mov	arg01, local01
	getqx	local02
	call	#_fflush
	mov	arg01, local02
	mov	arg02, #0
	mov	arg03, #1
	call	#_lseek
	mov	ptra, fp
	call	#popregs_
_ftell_ret
	ret

_get_force_0142
	mov	COUNT_, #3
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	add	local01, ##756
	rdbyte	result1, local01 wz
	sub	local01, ##756
 if_e	jmp	#LR__0203
	mov	result1, #0
	rdlong	local02, local01
	cmp	local02, local03 wz
 if_ne	mov	result1, #1
	jmp	#LR__0206
LR__0203
	mov	arg01, local01
	call	#_force_gauge_stop
	mov	arg01, local01
	mov	arg02, #15
	mov	arg03, #16
	call	#_force_gauge_begin
	cmp	result1, #0 wz
 if_e	jmp	#LR__0204
	mov	arg01, local02
	mov	arg02, #5
	mov	arg03, #1
	call	#_state_machine_set
	jmp	#LR__0205
LR__0204
	mov	arg01, local02
	mov	arg02, #5
	mov	arg03, #0
	call	#_state_machine_set
LR__0205
	mov	result1, #0
LR__0206
	mov	ptra, fp
	call	#popregs_
_get_force_0142_ret
	ret

_read_sd_0151
	mov	COUNT_, #6
	call	#pushregs_
	add	ptr__dat__, ##120460
	rdlong	local01, ptr__dat__
	sub	ptr__dat__, ##120460
	cmp	local01, ##-1 wz
 if_e	jmp	#LR__0207
	mov	arg01, ##@LR__1241
	mov	arg02, ##@LR__1242
	call	#_fopen
	mov	local01, result1 wz
 if_e	jmp	#LR__0218
	add	ptr__dat__, ##120460
	rdlong	arg03, ptr__dat__
	sub	ptr__dat__, ##120460
	mov	arg02, arg03
	shl	arg02, #2
	add	arg02, arg03
	shl	arg02, #3
	mov	arg01, local01
	mov	arg03, #0
	call	#_fseek
	add	ptr__dat__, ##110260
	mov	arg01, ptr__dat__
	add	ptr__dat__, ##10204
	rdlong	arg03, ptr__dat__
	sub	ptr__dat__, ##120464
	mov	arg02, #40
	mov	arg04, local01
	call	#_fread
	mov	local02, result1
	mov	arg01, #0
	call	#__system___getiolock_0724
	mov	arg01, result1
	call	#__system___lockmem
	mov	arg02, ##@LR__1243
	mov	arg01, #0
	mov	arg03, #0
	call	#__system___basic_print_string
	add	ptr__dat__, ##110296
	rdlong	arg02, ptr__dat__
	sub	ptr__dat__, ##110296
	mov	arg01, #0
	mov	arg03, #0
	mov	arg04, #10
	call	#__system___basic_print_integer
	mov	arg01, #0
	mov	arg02, #10
	mov	arg03, #0
	call	#__system___basic_print_char
	mov	arg01, #0
	call	#__system___getiolock_0724
	wrlong	#0, result1
	mov	arg01, local01
	call	#__closeraw
	abs	local01, local02 wc
	qdiv	local01, #40
	add	ptr__dat__, ##120464
	getqx	local01
	negc	local01, local01 wz
	wrlong	local01, ptr__dat__
	sub	ptr__dat__, #4
	wrlong	##-1, ptr__dat__
	sub	ptr__dat__, ##120460
	jmp	#LR__0218
LR__0207
	add	ptr__dat__, ##120464
	rdlong	local01, ptr__dat__
	sub	ptr__dat__, ##120464
	cmp	local01, ##-1 wz
 if_ne	jmp	#LR__0209
	mov	arg01, ##@LR__1244
	mov	arg02, ##@LR__1245
	call	#_fopen
	mov	local03, result1 wz
 if_e	jmp	#LR__0208
	mov	arg01, local03
	mov	arg02, #0
	mov	arg03, #2
	call	#_fseek
	mov	arg01, local03
	call	#_ftell
	abs	local01, result1 wc
	qdiv	local01, #40
	add	ptr__dat__, ##120464
	mov	arg01, local03
	getqx	local01
	negc	local01, local01
	wrlong	local01, ptr__dat__
	sub	ptr__dat__, ##120464
	call	#__closeraw
	jmp	#LR__0217
LR__0208
	add	ptr__dat__, ##120464
	wrlong	#0, ptr__dat__
	sub	ptr__dat__, ##120464
	jmp	#LR__0217
LR__0209
	add	ptr__dat__, ##110256
	rdlong	local01, ptr__dat__
	sub	ptr__dat__, ##110256
	cmp	local01, #1 wz
 if_ne	jmp	#LR__0212
	mov	arg01, ##@LR__1246
	mov	arg02, ##@LR__1247
	call	#_fopen
	mov	local04, result1 wz
 if_e	jmp	#LR__0210
	add	ptr__dat__, ##110108
	mov	arg01, ptr__dat__
	sub	ptr__dat__, ##110108
	mov	arg04, local04
	mov	arg02, #148
	mov	arg03, #1
	call	#_fread
	mov	local05, result1
	mov	arg01, local04
	call	#__closeraw
	cmp	local05, #148 wz
 if_ne	add	ptr__dat__, ##110256
 if_ne	wrlong	##-1, ptr__dat__
 if_ne	sub	ptr__dat__, ##110256
 if_ne	jmp	#LR__0211
	add	ptr__dat__, ##110256
	wrlong	#0, ptr__dat__
	sub	ptr__dat__, ##110256
	jmp	#LR__0211
LR__0210
	add	ptr__dat__, ##110256
	wrlong	##-1, ptr__dat__
	sub	ptr__dat__, ##110256
LR__0211
	mov	arg01, #0
	call	#__system___getiolock_0724
	mov	arg01, result1
	call	#__system___lockmem
	mov	arg02, ##@LR__1248
	mov	arg01, #0
	mov	arg03, #0
	call	#__system___basic_print_string
	add	ptr__dat__, ##110108
	mov	arg02, ptr__dat__
	sub	ptr__dat__, ##110108
	mov	arg01, #0
	mov	arg03, #0
	call	#__system___basic_print_string
	mov	arg01, #0
	mov	arg02, #10
	mov	arg03, #0
	call	#__system___basic_print_char
	mov	arg01, #0
	call	#__system___getiolock_0724
	wrlong	#0, result1
	mov	result1, #0
	jmp	#LR__0216
LR__0212
	add	ptr__dat__, ##110256
	rdlong	local01, ptr__dat__
	sub	ptr__dat__, ##110256
	cmp	local01, #2 wz
 if_ne	jmp	#LR__0215
	mov	arg01, ##@LR__1249
	mov	arg02, ##@LR__1250
	call	#_fopen
	mov	local06, result1 wz
 if_e	jmp	#LR__0213
	add	ptr__dat__, ##110108
	mov	arg01, ptr__dat__
	sub	ptr__dat__, ##110108
	mov	arg04, local06
	mov	arg02, #148
	mov	arg03, #1
	call	#_fwrite
	cmp	result1, #148 wz
 if_ne	add	ptr__dat__, ##110256
 if_ne	wrlong	##-1, ptr__dat__
 if_ne	sub	ptr__dat__, ##110256
 if_e	add	ptr__dat__, ##110256
 if_e	wrlong	#0, ptr__dat__
 if_e	sub	ptr__dat__, ##110256
	mov	arg01, local06
	call	#__closeraw
	jmp	#LR__0214
LR__0213
	add	ptr__dat__, ##110256
	wrlong	##-1, ptr__dat__
	sub	ptr__dat__, ##110256
LR__0214
LR__0215
LR__0216
LR__0217
LR__0218
	mov	ptra, fp
	call	#popregs_
_read_sd_0151_ret
	ret

_monitor_cog_0158
	mov	COUNT_, #16
	call	#pushregs_
	mov	local01, arg01
	mov	local02, #0
	add	local01, #36
	wrlong	#0, local01
	sub	local01, #36
	add	ptr__dat__, ##110080
	mov	local03, #0
	mov	local04, #0
	mov	local05, ##-100000
	mov	local06, ##100000
	mov	arg01, #20
	mov	arg02, #19
	neg	arg03, #1
	mov	arg04, #0
	mov	arg05, #0
	mov	arg06, ##-100000
	mov	arg07, ##100000
	mov	local07, objptr
	mov	objptr, ptr__dat__
	sub	ptr__dat__, ##110080
	call	#_jm_quadrature_spin2_start
	mov	objptr, local07
	call	#__system___getms
	mov	local08, result1
LR__0219
	call	#__system___getus
	mov	local09, result1
	mov	local10, #0
	add	ptr__dat__, ##109316
	mov	arg01, ptr__dat__
	sub	ptr__dat__, ##109316
	add	local01, #40
	rdlong	arg02, local01
	sub	local01, #4
	rdlong	arg03, local01
	sub	local01, #36
	call	#_get_force_0142
	cmp	result1, #0 wz
 if_e	jmp	#LR__0220
	add	ptr__dat__, ##109316
	rdlong	local10, ptr__dat__
	add	local01, #36
	wrlong	local10, local01
	sub	local01, #36
	add	ptr__dat__, ##752
	rdlong	local10, ptr__dat__
	sub	ptr__dat__, ##110068
	wrlong	local10, local01
	mov	local10, #1
	jmp	#LR__0221
LR__0220
	wrlong	#0, local01
LR__0221
	call	#__system___getus
	sub	result1, local09
	mov	local11, result1
	add	ptr__dat__, ##110080
	mov	local12, objptr
	mov	objptr, ptr__dat__
	sub	ptr__dat__, ##110080
	call	#_jm_quadrature_spin2_value
	mov	objptr, local12
	mov	arg02, result1
	add	local01, #4
	wrlong	arg02, local01
	call	#__system___getms
	mov	arg02, result1
	add	local01, #24
	wrlong	arg02, local01
	call	#__system___getus
	add	local01, #4
	wrlong	result1, local01
	sub	local01, #32
	rdlong	arg01, local01
	add	local01, #44
	rdlong	arg02, local01
	call	#_raw_to_force
	sub	local01, #36
	wrlong	result1, local01
	sub	local01, #4
	rdlong	arg01, local01
	add	local01, #40
	rdlong	arg02, local01
	call	#_steps_to_um
	sub	local01, #32
	wrlong	result1, local01
	sub	local01, #12
	rdlong	arg01, local01
	add	local01, #44
	rdlong	arg02, local01
	call	#_raw_to_force
	mov	arg01, result1
	call	#__system___float_fromint
	mov	arg01, result1
	mov	arg02, ##1148846080
	call	#__system___float_div
	sub	local01, #28
	wrlong	result1, local01
	sub	local01, #12
	rdlong	arg01, local01
	add	local01, #40
	rdlong	arg02, local01
	call	#_steps_to_mm
	sub	local01, #24
	wrlong	result1, local01
	add	ptr__dat__, ##109312
	rdlong	local13, ptr__dat__
	sub	ptr__dat__, ##109312
	add	local01, #4
	wrlong	local13, local01
	sub	local01, #24
	call	#__system___getus
	sub	result1, local09
	sub	result1, local11
	mov	local14, result1
	add	ptr__dat__, ##97160
	rdbyte	local13, ptr__dat__ wz
	sub	ptr__dat__, ##97160
 if_e	jmp	#LR__0223
	cmp	local02, #0 wz
 if_ne	jmp	#LR__0222
	mov	arg01, ##@LR__1251
	mov	arg02, ##@LR__1252
	call	#_fopen
	mov	local02, result1
LR__0222
	cmp	local10, #0 wz
 if_e	jmp	#LR__0226
	cmp	local02, #0 wz
 if_e	jmp	#LR__0226
	mov	local15, #1
	mov	local16, local02
	mov	arg01, local01
	mov	arg02, #40
	mov	arg03, #1
	mov	arg04, local16
	call	#_fwrite
	jmp	#LR__0226
LR__0223
	cmp	local02, #0 wz
 if_e	jmp	#LR__0224
	mov	arg01, local02
	call	#__closeraw
	mov	local02, #0
	jmp	#LR__0225
LR__0224
	call	#_read_sd_0151
LR__0225
LR__0226
	mov	arg01, #1
	call	#__system___waitms
	jmp	#LR__0219
	mov	ptra, fp
	call	#popregs_
_monitor_cog_0158_ret
	ret

_read_sd_profile
	mov	COUNT_, #2
	call	#pushregs_
	mov	local01, arg01
	call	#__system___getms
	mov	local02, result1
	add	ptr__dat__, ##97160
	rdbyte	arg03, ptr__dat__ wz
	sub	ptr__dat__, ##97160
 if_ne	mov	result1, #0
 if_ne	jmp	#LR__0229
	add	ptr__dat__, ##110256
	wrlong	#1, ptr__dat__
	sub	ptr__dat__, ##110256
LR__0227
	add	ptr__dat__, ##110256
	rdlong	arg03, ptr__dat__ wz
	sub	ptr__dat__, ##110256
 if_e	jmp	#LR__0228
	add	ptr__dat__, ##110256
	rdlong	arg03, ptr__dat__
	sub	ptr__dat__, ##110256
	cmp	arg03, ##-1 wz
 if_e	mov	result1, #0
 if_e	jmp	#LR__0229
	call	#__system___getms
	sub	result1, local02
	cmp	result1, ##5001 wc
 if_ae	mov	result1, #0
 if_ae	jmp	#LR__0229
	jmp	#LR__0227
LR__0228
	mov	arg01, local01
	add	ptr__dat__, ##110108
	mov	arg02, ptr__dat__
	sub	ptr__dat__, ##110108
	mov	arg03, #148
	call	#_memcpy
	mov	result1, #1
LR__0229
	mov	ptra, fp
	call	#popregs_
_read_sd_profile_ret
	ret

_write_sd_profile
	mov	COUNT_, #1
	call	#pushregs_
	mov	arg03, arg01
	call	#__system___getms
	mov	local01, result1
	add	ptr__dat__, ##97160
	rdbyte	arg02, ptr__dat__ wz
	sub	ptr__dat__, ##97160
 if_ne	mov	result1, #0
 if_ne	jmp	#LR__0232
	add	ptr__dat__, ##110108
	mov	arg01, ptr__dat__
	sub	ptr__dat__, ##110108
	mov	arg02, arg03
	mov	arg03, #148
	call	#_memcpy
	add	ptr__dat__, ##110256
	wrlong	#2, ptr__dat__
	sub	ptr__dat__, ##110256
LR__0230
	add	ptr__dat__, ##110256
	rdlong	arg03, ptr__dat__ wz
	sub	ptr__dat__, ##110256
 if_e	jmp	#LR__0231
	add	ptr__dat__, ##110256
	rdlong	arg03, ptr__dat__
	sub	ptr__dat__, ##110256
	cmp	arg03, ##-1 wz
 if_e	mov	result1, #0
 if_e	jmp	#LR__0232
	call	#__system___getms
	sub	result1, local01
	cmp	result1, ##1001 wc
 if_ae	mov	result1, #0
 if_ae	jmp	#LR__0232
	jmp	#LR__0230
LR__0231
	mov	result1, #1
LR__0232
	mov	ptra, fp
	call	#popregs_
_write_sd_profile_ret
	ret

_read_sd_card_data
	mov	COUNT_, #4
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	call	#__system___getms
	mov	local04, result1
	add	ptr__dat__, ##97160
	rdbyte	arg03, ptr__dat__ wz
	sub	ptr__dat__, ##97160
 if_ne	mov	result1, #0
 if_ne	jmp	#LR__0235
	add	ptr__dat__, ##120464
	wrlong	local03, ptr__dat__
	sub	ptr__dat__, #4
	wrlong	local02, ptr__dat__
	sub	ptr__dat__, ##120460
LR__0233
	add	ptr__dat__, ##120460
	rdlong	local03, ptr__dat__
	sub	ptr__dat__, ##120460
	cmp	local03, ##-1 wz
 if_e	jmp	#LR__0234
	add	ptr__dat__, ##120460
	rdlong	local03, ptr__dat__
	sub	ptr__dat__, ##120460
	cmp	local03, ##-2 wz
 if_e	mov	result1, #0
 if_e	jmp	#LR__0235
	call	#__system___getms
	sub	result1, local04
	cmp	result1, ##1001 wc
 if_ae	mov	result1, #0
 if_ae	jmp	#LR__0235
	jmp	#LR__0233
LR__0234
	add	ptr__dat__, ##110260
	mov	arg02, ptr__dat__
	add	ptr__dat__, ##10204
	rdlong	arg01, ptr__dat__
	sub	ptr__dat__, ##120464
	mov	arg03, arg01
	shl	arg03, #2
	add	arg03, arg01
	shl	arg03, #3
	mov	arg01, local01
	call	#_memcpy
	add	ptr__dat__, ##120464
	rdlong	result1, ptr__dat__
	sub	ptr__dat__, ##120464
LR__0235
	mov	ptra, fp
	call	#popregs_
_read_sd_card_data_ret
	ret

_read_data_size
	mov	COUNT_, #2
	call	#pushregs_
	call	#__system___getms
	mov	local01, result1
	add	ptr__dat__, ##97160
	rdbyte	local02, ptr__dat__ wz
	sub	ptr__dat__, ##97160
 if_ne	mov	result1, #0
 if_ne	jmp	#LR__0238
	add	ptr__dat__, ##120464
	wrlong	##-1, ptr__dat__
	sub	ptr__dat__, ##120464
LR__0236
	add	ptr__dat__, ##120464
	rdlong	local02, ptr__dat__
	sub	ptr__dat__, ##120464
	cmp	local02, ##-1 wz
 if_ne	jmp	#LR__0237
	call	#__system___getms
	sub	result1, local01
	cmp	result1, ##1001 wc
 if_ae	mov	result1, #0
 if_ae	jmp	#LR__0238
	jmp	#LR__0236
LR__0237
	add	ptr__dat__, ##120464
	rdlong	result1, ptr__dat__
	sub	ptr__dat__, ##120464
LR__0238
	mov	ptra, fp
	call	#popregs_
_read_data_size_ret
	ret

_monitor_begin
	mov	COUNT_, #1
	call	#pushregs_
	mov	local01, arg01
	add	local01, #44
	wrlong	arg03, local01
	add	local01, #4
	wrlong	arg04, local01
	sub	local01, #8
	wrlong	arg02, local01
	sub	local01, #40
	mov	arg01, local01
	call	#_monitor_cog_0158
	add	ptr__dat__, ##97312
	mov	arg04, ptr__dat__
	wrlong	objptr, arg04
	add	arg04, #4
	wrlong	ptr__monitor_cog_0158_, arg04
	add	arg04, #4
	wrlong	local01, arg04
	mov	arg03, ptr__dat__
	sub	ptr__dat__, ##97312
	mov	result1, #30
	setq	arg03
	coginit	result1, entryptr__ wc
 if_b	neg	result1, #1
	add	local01, #52
	wrlong	result1, local01
	mov	ptra, fp
	call	#popregs_
_monitor_begin_ret
	ret

_motion_cog_0176
	mov	COUNT_, #4
	call	#pushregs_
	add	ptra, #24
	wrlong	arg01, fp
	add	ptr__dat__, ##241856
	wrbyte	#0, ptr__dat__
	sub	ptr__dat__, #56
	mov	arg01, ptr__dat__
	sub	ptr__dat__, ##1320
	mov	arg02, ptr__dat__
	sub	ptr__dat__, ##240480
	mov	arg03, #100
	mov	arg04, #12
	call	#_queue_init
	add	ptr__dat__, ##241828
	mov	arg01, ptr__dat__
	sub	ptr__dat__, #148
	mov	local01, ptr__dat__
	mov	local02, #10
	mov	local03, #12
	mov	arg02, local01
	mov	arg03, #10
	mov	arg04, #12
	sub	ptr__dat__, ##241680
	call	#_queue_init
	mov	local04, #1
	add	ptr__dat__, ##240468
	wrbyte	#1, ptr__dat__
	sub	ptr__dat__, ##240468
LR__0239
	add	ptr__dat__, ##241800
	add	fp, #16
	wrlong	ptr__dat__, fp
	sub	fp, #16
	add	ptr__dat__, #56
	rdbyte	local04, ptr__dat__ wz
	sub	ptr__dat__, ##241856
 if_ne	add	ptr__dat__, ##241828
 if_ne	add	fp, #16
 if_ne	wrlong	ptr__dat__, fp
 if_ne	sub	fp, #16
 if_ne	sub	ptr__dat__, ##241828
	add	fp, #16
	rdlong	arg01, fp
	sub	fp, #16
	call	#_queue_isempty
	cmp	result1, #0 wz
 if_ne	jmp	#LR__0239
	add	fp, #16
	rdlong	arg01, fp
	sub	fp, #12
	mov	arg02, fp
	sub	fp, #4
	call	#_queue_pop
	cmp	result1, #0 wz
 if_e	jmp	#LR__0239
	add	fp, #8
	rdlong	local01, fp
	abs	local04, local01 wc
	qdiv	##1000000, local04
	add	fp, #12
	add	ptr__dat__, ##240472
	getqx	local04
	negc	local04, local04
	wrlong	local04, fp
	rdlong	local04, ptr__dat__
	sub	fp, #16
	rdlong	local02, fp
	sub	fp, #4
	add	local04, local02
	wrlong	local04, ptr__dat__
	sub	ptr__dat__, ##240472
LR__0240
	add	ptr__dat__, ##109312
	rdlong	local04, ptr__dat__
	add	ptr__dat__, ##131160
	rdlong	local03, ptr__dat__
	sub	ptr__dat__, ##240472
	cmp	local04, local03 wz
 if_e	jmp	#LR__0239
	add	ptr__dat__, ##240468
	rdbyte	local04, ptr__dat__ wz
	sub	ptr__dat__, ##240468
 if_e	jmp	#LR__0244
	add	ptr__dat__, ##240472
	rdlong	local04, ptr__dat__
	sub	ptr__dat__, ##131160
	rdlong	local02, ptr__dat__
	sub	ptr__dat__, ##109312
	cmps	local04, local02 wcz
 if_be	jmp	#LR__0241
	drvl	#12
	add	ptr__dat__, ##109312
	rdlong	local02, ptr__dat__
	add	local02, #1
	wrlong	local02, ptr__dat__
	sub	ptr__dat__, ##109312
	jmp	#LR__0243
LR__0241
	add	ptr__dat__, ##240472
	rdlong	local04, ptr__dat__
	sub	ptr__dat__, ##131160
	rdlong	local02, ptr__dat__
	sub	ptr__dat__, ##109312
	cmps	local04, local02 wc
 if_ae	jmp	#LR__0242
	drvh	#12
	add	ptr__dat__, ##109312
	rdlong	local02, ptr__dat__
	sub	local02, #1
	wrlong	local02, ptr__dat__
	sub	ptr__dat__, ##109312
LR__0242
LR__0243
	drvl	#13
	add	fp, #20
	rdlong	local02, fp
	sub	fp, #20
	abs	local01, local02 wc
	shr	local01, #1
	negc	arg01, local01
	call	#__system___waitus
	drvh	#13
	add	fp, #20
	rdlong	local02, fp
	sub	fp, #20
	abs	local01, local02 wc
	shr	local01, #1
	negc	arg01, local01
	call	#__system___waitus
	jmp	#LR__0240
LR__0244
	add	ptr__dat__, ##109312
	rdlong	local04, ptr__dat__
	add	ptr__dat__, ##131160
	wrlong	local04, ptr__dat__
	add	ptr__dat__, ##1328
	mov	arg01, ptr__dat__
	sub	ptr__dat__, ##241800
	call	#_queue_empty
	jmp	#LR__0239
	mov	ptra, fp
	call	#popregs_
_motion_cog_0176_ret
	ret

_motion_begin
	add	ptr__dat__, ##120468
	mov	arg03, ptr__dat__
	wrlong	objptr, arg03
	add	arg03, #4
	wrlong	ptr__motion_cog_0176_, arg03
	add	arg03, #4
	wrlong	#0, arg03
	mov	arg03, ptr__dat__
	sub	ptr__dat__, ##120468
	mov	result1, #30
	setq	arg03
	coginit	result1, entryptr__ wc
 if_b	neg	result1, #1
	cmp	result1, ##-1 wz
 if_ne	mov	result1, #1
 if_e	mov	result1, #0
_motion_begin_ret
	ret

_state_machine_check_0182
	mov	COUNT_, #7
	call	#pushregs_
	add	ptra, #28
	mov	local01, arg01
	add	arg01, #4
	wrbyte	#1, arg01
	rdbyte	arg01, arg01 wz
 if_ne	mov	result1, #1
 if_e	mov	result1, #0
	cmp	result1, #1 wz
 if_ne	jmp	#LR__0246
	add	fp, #12
	mov	arg01, fp
	sub	fp, #12
	add	local01, #8
	mov	arg02, local01
	mov	arg03, #16
	call	#__system____builtin_memmove
	add	fp, #12
	rdbyte	local02, fp wz
	sub	fp, #12
 if_e	jmp	#LR__0245
	add	fp, #16
	rdlong	local03, fp wz
	sub	fp, #16
 if_ne	jmp	#LR__0245
	add	fp, #20
	rdbyte	local04, fp wz
	sub	fp, #20
 if_e	jmp	#LR__0245
	add	fp, #21
	rdbyte	local05, fp wz
	sub	fp, #21
 if_e	jmp	#LR__0245
	add	fp, #22
	rdbyte	local06, fp wz
	sub	fp, #22
 if_e	jmp	#LR__0245
	add	fp, #24
	rdbyte	local07, fp wz
	sub	fp, #24
 if_ne	mov	result1, #2
 if_ne	jmp	#LR__0246
LR__0245
	mov	result1, #1
LR__0246
	mov	ptra, fp
	call	#popregs_
_state_machine_check_0182_ret
	ret

_state_machine_motion_0184
	mov	COUNT_, #4
	call	#pushregs_
	mov	local01, arg01
	call	#_state_machine_check_0182
	mov	local02, result1
	cmp	local02, #2 wz
 if_e	jmp	#LR__0250
	rdlong	result1, local01
	cmp	result1, #2 wz
 if_ne	jmp	#LR__0248
	add	local01, #12
	rdlong	result1, local01 wz
	sub	local01, #12
 if_ne	jmp	#LR__0247
	add	local01, #16
	rdbyte	result1, local01 wz
	sub	local01, #16
 if_ne	jmp	#LR__0248
LR__0247
	add	local01, #24
	wrlong	#4, local01
	sub	local01, #24
	jmp	#LR__0249
LR__0248
	add	local01, #24
	wrlong	#0, local01
	sub	local01, #24
LR__0249
	add	local01, #32
	wrlong	#0, local01
	mov	result1, local02
	jmp	#LR__0263
LR__0250
	add	local01, #24
	rdlong	local03, local01 wz
	sub	local01, #24
 if_e	jmp	#LR__0261
	add	local01, #28
	rdlong	local04, local01
	sub	local01, #28
	fle	local04, #9
	jmprel	local04
LR__0251
	jmp	#LR__0252
	jmp	#LR__0253
	jmp	#LR__0254
	jmp	#LR__0255
	jmp	#LR__0256
	jmp	#LR__0257
	jmp	#LR__0258
	jmp	#LR__0259
	jmp	#LR__0260
	jmp	#LR__0262
LR__0252
	add	local01, #24
	wrlong	#2, local01
	jmp	#LR__0262
LR__0253
	add	local01, #24
	wrlong	#2, local01
	jmp	#LR__0262
LR__0254
	add	local01, #24
	wrlong	#3, local01
	jmp	#LR__0262
LR__0255
	add	local01, #24
	wrlong	#3, local01
	jmp	#LR__0262
LR__0256
	add	local01, #24
	wrlong	#3, local01
	jmp	#LR__0262
LR__0257
	add	local01, #24
	wrlong	#3, local01
	jmp	#LR__0262
LR__0258
	add	local01, #24
	wrlong	#3, local01
	jmp	#LR__0262
LR__0259
	add	local01, #24
	rdlong	local04, local01
	sub	local01, #24
	cmp	local04, #1 wz
 if_e	jmp	#LR__0262
	add	local01, #24
	rdlong	local04, local01 wz
	sub	local01, #24
 if_ne	add	local01, #24
 if_ne	wrlong	#1, local01
	jmp	#LR__0262
LR__0260
	add	local01, #24
	rdlong	local04, local01
	sub	local01, #24
	cmp	local04, #1 wz
 if_e	jmp	#LR__0262
	add	local01, #24
	rdlong	local04, local01 wz
	sub	local01, #24
 if_ne	add	local01, #24
 if_ne	wrlong	#1, local01
	jmp	#LR__0262
LR__0261
	add	local01, #32
	wrlong	#0, local01
LR__0262
	mov	result1, #2
LR__0263
	mov	ptra, fp
	call	#popregs_
_state_machine_motion_0184_ret
	ret

_state_machine_update_0185
	mov	COUNT_, #1
	call	#pushregs_
	mov	local01, arg01
	add	local01, #44
LR__0264
	rdlong	arg01, local01
	locktry	arg01 wc
 if_ae	jmp	#LR__0264
	sub	local01, #44
	mov	arg01, local01
	call	#_state_machine_motion_0184
	wrlong	result1, local01
	add	local01, #44
	rdlong	arg01, local01
	lockrel	arg01 wc
	mov	ptra, fp
	call	#popregs_
_state_machine_update_0185_ret
	ret

_state_machine_set
	mov	COUNT_, #4
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	fle	local02, #12
	jmprel	local02
LR__0265
	jmp	#LR__0266
	jmp	#LR__0267
	jmp	#LR__0268
	jmp	#LR__0269
	jmp	#LR__0270
	jmp	#LR__0271
	jmp	#LR__0272
	jmp	#LR__0273
	jmp	#LR__0274
	jmp	#LR__0275
	jmp	#LR__0276
	jmp	#LR__0279
	jmp	#LR__0280
LR__0266
	add	local01, #4
	rdbyte	local02, local01
	sub	local01, #4
	cmp	local02, local03 wz
 if_ne	add	local01, #4
 if_ne	wrbyte	local03, local01
 if_ne	sub	local01, #4
 if_ne	mov	arg01, local01
 if_ne	call	#_state_machine_update_0185
	jmp	#LR__0280
LR__0267
	add	local01, #8
	rdbyte	local02, local01
	sub	local01, #8
	cmp	local02, local03 wz
 if_ne	add	local01, #8
 if_ne	wrbyte	local03, local01
 if_ne	sub	local01, #8
 if_ne	mov	arg01, local01
 if_ne	call	#_state_machine_update_0185
	jmp	#LR__0280
LR__0268
	add	local01, #12
	rdlong	local02, local01
	sub	local01, #12
	cmp	local02, local03 wz
 if_ne	add	local01, #12
 if_ne	wrlong	local03, local01
 if_ne	sub	local01, #12
 if_ne	mov	arg01, local01
 if_ne	call	#_state_machine_update_0185
	jmp	#LR__0280
LR__0269
	add	local01, #16
	rdbyte	local02, local01
	sub	local01, #16
	cmp	local02, local03 wz
 if_ne	add	local01, #16
 if_ne	wrbyte	local03, local01
 if_ne	sub	local01, #16
 if_ne	mov	arg01, local01
 if_ne	call	#_state_machine_update_0185
	jmp	#LR__0280
LR__0270
	add	local01, #17
	rdbyte	local02, local01
	sub	local01, #17
	cmp	local02, local03 wz
 if_ne	add	local01, #17
 if_ne	wrbyte	local03, local01
 if_ne	sub	local01, #17
 if_ne	mov	arg01, local01
 if_ne	call	#_state_machine_update_0185
	jmp	#LR__0280
LR__0271
	add	local01, #18
	rdbyte	local02, local01
	sub	local01, #18
	cmp	local02, local03 wz
 if_ne	add	local01, #18
 if_ne	wrbyte	local03, local01
 if_ne	sub	local01, #18
 if_ne	mov	arg01, local01
 if_ne	call	#_state_machine_update_0185
	jmp	#LR__0280
LR__0272
	add	local01, #19
	rdbyte	local02, local01
	sub	local01, #19
	cmp	local02, local03 wz
 if_ne	add	local01, #19
 if_ne	wrbyte	local03, local01
 if_ne	sub	local01, #19
 if_ne	mov	arg01, local01
 if_ne	call	#_state_machine_update_0185
	jmp	#LR__0280
LR__0273
	add	local01, #20
	rdbyte	local02, local01
	sub	local01, #20
	cmp	local02, local03 wz
 if_ne	add	local01, #20
 if_ne	wrbyte	local03, local01
 if_ne	sub	local01, #20
 if_ne	mov	arg01, local01
 if_ne	call	#_state_machine_update_0185
	jmp	#LR__0280
LR__0274
	add	local01, #24
	rdlong	local02, local01
	sub	local01, #24
	cmp	local02, local03 wz
 if_ne	add	local01, #24
 if_ne	wrlong	local03, local01
 if_ne	sub	local01, #24
 if_ne	mov	arg01, local01
 if_ne	call	#_state_machine_update_0185
	jmp	#LR__0280
LR__0275
	add	local01, #28
	rdlong	local02, local01
	sub	local01, #28
	cmp	local02, local03 wz
 if_ne	add	local01, #28
 if_ne	wrlong	local03, local01
 if_ne	sub	local01, #28
 if_ne	mov	arg01, local01
 if_ne	call	#_state_machine_update_0185
	jmp	#LR__0280
LR__0276
	add	local01, #32
	rdlong	local02, local01
	sub	local01, #32
	cmp	local02, local03 wz
 if_e	jmp	#LR__0278
	add	local01, #32
	rdlong	arg01, local01
	sub	local01, #32
	cmp	arg01, #1 wz
 if_e	jmp	#LR__0277
	cmp	local03, #2 wz
 if_ne	jmp	#LR__0277
	mov	arg01, ##@LR__1253
	call	#_printf
	jmp	#LR__0280
LR__0277
	add	local01, #32
	wrlong	local03, local01
	sub	local01, #32
	mov	arg01, local01
	call	#_state_machine_update_0185
LR__0278
LR__0279
	add	local01, #36
	rdlong	local04, local01
	sub	local01, #36
	cmp	local04, local03 wz
 if_ne	add	local01, #36
 if_ne	wrlong	local03, local01
 if_ne	sub	local01, #36
 if_ne	mov	arg01, local01
 if_ne	call	#_state_machine_update_0185
LR__0280
	mov	ptra, fp
	call	#popregs_
_state_machine_set_ret
	ret

_machine_state_init
	wrlong	#0, arg01
	add	arg01, #4
	wrbyte	#0, arg01
	add	arg01, #4
	wrbyte	#0, arg01
	add	arg01, #4
	wrlong	#0, arg01
	add	arg01, #4
	wrbyte	#0, arg01
	add	arg01, #1
	wrbyte	#0, arg01
	add	arg01, #1
	wrbyte	#0, arg01
	add	arg01, #1
	wrbyte	#0, arg01
	add	arg01, #1
	wrbyte	#1, arg01
	add	arg01, #8
	wrlong	#7, arg01
	add	arg01, #4
	wrlong	#0, arg01
	sub	arg01, #8
	wrlong	#0, arg01
	add	arg01, #12
	wrlong	#0, arg01
	mov	result1, #0
	locknew	result1
	add	arg01, #8
	wrlong	result1, arg01
_machine_state_init_ret
	ret

__dofmt
	mov	COUNT_, #13
	call	#pushregs_
	add	ptra, #92
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	add	fp, #4
	wrlong	arg03, fp
	mov	local03, #0
	add	fp, #16
	wrlong	#0, fp
	add	fp, #8
	wrlong	#0, fp
	add	fp, #4
	wrlong	#0, fp
	add	fp, #8
	wrlong	#0, fp
	sub	fp, #48
LR__0281
	add	fp, #64
	wrlong	#0, fp
	sub	fp, #56
	rdlong	local03, fp
	mov	arg01, local03
	add	arg01, #1
	wrlong	arg01, fp
	rdbyte	local03, local03 wz
	add	fp, #8
	wrlong	local03, fp
	sub	fp, #16
 if_e	jmp	#LR__0310
	add	fp, #16
	rdlong	local03, fp
	sub	fp, #16
	cmp	local03, #37 wz
 if_e	jmp	#LR__0282
	add	fp, #4
	rdlong	local03, fp
	rdlong	local04, local03
	add	local03, #4
	rdlong	local03, local03
	add	fp, #12
	rdlong	local05, fp
	sub	fp, #16
	mov	arg01, local05
	mov	local06, objptr
	mov	objptr, local04
	call	local03
	mov	objptr, local06
	add	fp, #20
	wrlong	result1, fp
	sub	fp, #20
	cmps	result1, #0 wc
 if_b	add	fp, #20
 if_b	rdlong	result1, fp
 if_b	sub	fp, #20
 if_b	jmp	#LR__0311
	add	fp, #28
	rdlong	local04, fp
	add	local04, #1
	wrlong	local04, fp
	sub	fp, #28
	jmp	#LR__0281
LR__0282
	add	fp, #8
	rdlong	arg01, fp
	add	fp, #24
	mov	arg02, fp
	sub	fp, #32
	call	#_parseflags_1001
	add	fp, #8
	wrlong	result1, fp
	add	fp, #24
	rdlong	local03, fp
	shr	local03, #24
	and	local03, #3
	add	fp, #16
	wrlong	local03, fp
	sub	fp, #40
	mov	arg01, fp
	add	fp, #4
	rdlong	arg02, fp
	sub	fp, #12
	call	#_parseint_0994
	add	fp, #36
	wrlong	result1, fp
	sub	fp, #28
	rdlong	local04, fp
	rdbyte	local03, local04 wz
	add	fp, #8
	wrlong	local03, fp
	sub	fp, #16
 if_e	jmp	#LR__0310
	add	fp, #16
	rdlong	local03, fp
	sub	fp, #16
	cmp	local03, #46 wz
 if_ne	jmp	#LR__0283
	add	fp, #8
	rdlong	local07, fp
	add	local07, #1
	wrlong	local07, fp
	mov	arg01, fp
	add	fp, #4
	rdlong	arg02, fp
	sub	fp, #12
	call	#_parseint_0994
	add	result1, #1
	add	fp, #40
	wrlong	result1, fp
	sub	fp, #32
	rdlong	local04, fp
	rdbyte	local03, local04 wz
	add	fp, #8
	wrlong	local03, fp
	sub	fp, #16
 if_e	jmp	#LR__0310
	jmp	#LR__0284
LR__0283
	add	fp, #40
	wrlong	#0, fp
	sub	fp, #40
LR__0284
	add	fp, #8
	rdlong	arg01, fp
	add	fp, #36
	mov	arg02, fp
	sub	fp, #44
	call	#_parsesize_1005
	add	fp, #8
	wrlong	result1, fp
	mov	local08, result1
	add	local08, #1
	wrlong	local08, fp
	rdbyte	local03, result1 wz
	add	fp, #8
	wrlong	local03, fp
	sub	fp, #16
 if_e	jmp	#LR__0310
	add	fp, #16
	rdlong	local03, fp
	sub	fp, #16
	cmp	local03, #37 wz
 if_ne	jmp	#LR__0285
	add	fp, #4
	rdlong	arg01, fp
	add	fp, #28
	rdlong	arg02, fp
	sub	fp, #32
	mov	arg03, #37
	call	#__system___fmtchar
	add	fp, #20
	wrlong	result1, fp
	sub	fp, #20
	jmp	#LR__0281
LR__0285
	add	fp, #20
	wrlong	#0, fp
	add	fp, #24
	rdlong	local03, fp
	sub	fp, #44
	cmp	local03, #8 wz
 if_ne	jmp	#LR__0286
	add	fp, #12
	rdlong	local09, fp
	rdlong	local08, local09
	rdlong	local01, local08
	mov	local06, local08
	add	local06, #4
	rdlong	local02, local06
	mov	local03, local09
	mov	local07, local08
	add	local07, #8
	wrlong	local07, local03
	mov	local05, local01
	mov	local06, local02
	add	fp, #44
	wrlong	local05, fp
	add	fp, #4
	wrlong	local06, fp
	sub	fp, #4
	rdlong	local03, fp
	sub	fp, #4
	wrlong	local03, fp
	add	fp, #12
	wrlong	#1, fp
	sub	fp, #64
	jmp	#LR__0287
LR__0286
	add	fp, #12
	rdlong	local03, fp
	rdlong	local07, local03
	rdlong	local10, local07
	mov	local09, local03
	rdlong	local07, local09
	add	local07, #4
	wrlong	local07, local03
	add	fp, #40
	wrlong	local10, fp
	sub	fp, #52
LR__0287
	add	fp, #16
	rdlong	local03, fp
	sub	fp, #16
	cmps	local03, #65 wc
 if_b	jmp	#LR__0288
	add	fp, #16
	rdlong	local08, fp
	sub	fp, #16
	mov	local07, local08
	cmps	local07, #91 wc
 if_ae	jmp	#LR__0288
	add	fp, #32
	rdlong	local03, fp
	bith	local03, #29
	wrlong	local03, fp
	sub	fp, #16
	rdlong	local04, fp
	sub	local04, #65
	wrlong	local04, fp
	mov	local03, local04
	add	local03, #97
	wrlong	local03, fp
	sub	fp, #16
LR__0288
	add	fp, #40
	rdlong	local03, fp
	sub	fp, #40
	cmps	local03, #0 wc
 if_b	add	fp, #40
 if_b	wrlong	#0, fp
 if_b	sub	fp, #40
	add	fp, #40
	rdlong	local03, fp
	sub	fp, #40
	cmps	local03, #64 wc
 if_ae	add	fp, #40
 if_ae	wrlong	#63, fp
 if_ae	sub	fp, #40
	add	fp, #36
	rdlong	local03, fp
	sub	fp, #36
	cmps	local03, #0 wc
 if_ae	jmp	#LR__0289
	add	fp, #36
	rdlong	local03, fp
	neg	local03, local03
	wrlong	local03, fp
	sub	fp, #4
	rdlong	local03, fp
	bitl	local03, #54
	wrlong	local03, fp
	bith	local03, #22
	wrlong	local03, fp
	add	fp, #16
	wrlong	#1, fp
	sub	fp, #48
LR__0289
	add	fp, #32
	rdlong	local03, fp
	add	fp, #4
	rdlong	local07, fp
	shl	local07, #8
	or	local03, local07
	sub	fp, #4
	wrlong	local03, fp
	add	fp, #8
	rdlong	local07, fp
	shl	local07, #16
	or	local03, local07
	sub	fp, #8
	wrlong	local03, fp
	sub	fp, #16
	rdlong	local11, fp
	sub	fp, #16
	cmp	local11, #99 wz
 if_e	jmp	#LR__0290
	cmp	local11, #115 wz
 if_e	jmp	#LR__0291
	cmp	local11, #100 wz
 if_e	jmp	#LR__0293
	cmp	local11, #105 wz
 if_e	jmp	#LR__0294
	cmp	local11, #117 wz
 if_e	jmp	#LR__0295
	cmp	local11, #111 wz
 if_e	jmp	#LR__0298
	cmp	local11, #120 wz
 if_e	jmp	#LR__0301
	cmp	local11, #97 wz
 if_e	jmp	#LR__0304
	cmp	local11, #101 wz
 if_e	jmp	#LR__0305
	cmp	local11, #102 wz
 if_e	jmp	#LR__0306
	cmp	local11, #103 wz
 if_e	jmp	#LR__0307
	jmp	#LR__0308
LR__0290
	add	fp, #4
	rdlong	arg01, fp
	add	fp, #28
	rdlong	arg02, fp
	add	fp, #20
	rdlong	arg03, fp
	sub	fp, #52
	call	#__system___fmtchar
	add	fp, #20
	wrlong	result1, fp
	sub	fp, #20
	jmp	#LR__0309
LR__0291
	add	fp, #40
	rdlong	local03, fp wz
	sub	fp, #40
 if_e	jmp	#LR__0292
	add	fp, #32
	rdlong	local03, fp
	add	fp, #8
	rdlong	local07, fp
	sub	local07, #1
	or	local03, local07
	sub	fp, #8
	wrlong	local03, fp
	sub	fp, #32
LR__0292
	add	fp, #4
	rdlong	arg01, fp
	add	fp, #28
	rdlong	arg02, fp
	add	fp, #20
	rdlong	arg03, fp
	sub	fp, #52
	call	#__system___fmtstr
	add	fp, #20
	wrlong	result1, fp
	sub	fp, #20
	jmp	#LR__0309
LR__0293
LR__0294
LR__0295
	add	fp, #16
	rdlong	local03, fp
	sub	fp, #16
	cmp	local03, #117 wz
 if_e	add	fp, #32
 if_e	rdlong	local03, fp
 if_e	bith	local03, #58
 if_e	wrlong	local03, fp
 if_e	sub	fp, #32
	add	fp, #40
	rdlong	local03, fp wz
	sub	fp, #40
 if_ne	jmp	#LR__0296
	add	fp, #48
	rdlong	local07, fp
	sub	fp, #48
	cmp	local07, #2 wz
 if_ne	jmp	#LR__0296
	add	fp, #32
	rdlong	local04, fp
	mov	local03, local04
	add	fp, #4
	rdlong	local08, fp
	mov	local07, local08
	add	local07, #1
	shl	local07, #16
	or	local03, local07
	sub	fp, #4
	wrlong	local03, fp
	sub	fp, #32
LR__0296
	add	fp, #64
	rdlong	local03, fp wz
	sub	fp, #64
 if_ne	jmp	#LR__0297
	add	fp, #4
	rdlong	arg01, fp
	add	fp, #28
	rdlong	arg02, fp
	add	fp, #20
	rdlong	arg03, fp
	sub	fp, #52
	mov	arg04, #10
	call	#__system___fmtnum
	add	fp, #20
	wrlong	result1, fp
	sub	fp, #20
	jmp	#LR__0309
LR__0297
	add	fp, #56
	rdlong	local12, fp
	add	fp, #4
	rdlong	local13, fp
	sub	fp, #56
	rdlong	arg01, fp
	add	fp, #28
	rdlong	arg02, fp
	sub	fp, #32
	mov	local09, #10
	mov	arg03, local12
	mov	arg04, local13
	mov	arg05, #10
	call	#__system___fmtnumlong
	add	fp, #20
	wrlong	result1, fp
	sub	fp, #20
	jmp	#LR__0309
LR__0298
	add	fp, #32
	rdlong	local03, fp
	bith	local03, #58
	wrlong	local03, fp
	add	fp, #8
	rdlong	local03, fp wz
	sub	fp, #40
 if_ne	jmp	#LR__0299
	add	fp, #48
	rdlong	local07, fp
	sub	fp, #48
	cmp	local07, #2 wz
 if_ne	jmp	#LR__0299
	add	fp, #32
	rdlong	local04, fp
	mov	local03, local04
	add	fp, #4
	rdlong	local08, fp
	mov	local07, local08
	add	local07, #1
	shl	local07, #16
	or	local03, local07
	sub	fp, #4
	wrlong	local03, fp
	sub	fp, #32
LR__0299
	add	fp, #64
	rdlong	local03, fp wz
	sub	fp, #64
 if_ne	jmp	#LR__0300
	add	fp, #4
	rdlong	arg01, fp
	add	fp, #28
	rdlong	arg02, fp
	add	fp, #20
	rdlong	arg03, fp
	sub	fp, #52
	mov	arg04, #8
	call	#__system___fmtnum
	add	fp, #20
	wrlong	result1, fp
	sub	fp, #20
	jmp	#LR__0309
LR__0300
	add	fp, #56
	rdlong	local12, fp
	add	fp, #4
	rdlong	local13, fp
	sub	fp, #56
	rdlong	arg01, fp
	add	fp, #28
	rdlong	arg02, fp
	sub	fp, #32
	mov	local09, #8
	mov	arg03, local12
	mov	arg04, local13
	mov	arg05, #8
	call	#__system___fmtnumlong
	add	fp, #20
	wrlong	result1, fp
	sub	fp, #20
	jmp	#LR__0309
LR__0301
	add	fp, #40
	rdlong	local03, fp wz
	sub	fp, #40
 if_ne	jmp	#LR__0302
	add	fp, #48
	rdlong	local07, fp
	sub	fp, #48
	cmp	local07, #2 wz
 if_ne	jmp	#LR__0302
	add	fp, #32
	rdlong	local04, fp
	mov	local03, local04
	add	fp, #4
	rdlong	local08, fp
	mov	local07, local08
	add	local07, #1
	shl	local07, #16
	or	local03, local07
	sub	fp, #4
	wrlong	local03, fp
	sub	fp, #32
LR__0302
	add	fp, #32
	rdlong	local03, fp
	bith	local03, #58
	wrlong	local03, fp
	add	fp, #32
	rdlong	local03, fp wz
	sub	fp, #64
 if_ne	jmp	#LR__0303
	add	fp, #4
	rdlong	arg01, fp
	add	fp, #28
	rdlong	arg02, fp
	add	fp, #20
	rdlong	arg03, fp
	sub	fp, #52
	mov	arg04, #16
	call	#__system___fmtnum
	add	fp, #20
	wrlong	result1, fp
	sub	fp, #20
	jmp	#LR__0309
LR__0303
	add	fp, #56
	rdlong	local12, fp
	add	fp, #4
	rdlong	local13, fp
	sub	fp, #56
	rdlong	arg01, fp
	add	fp, #28
	rdlong	arg02, fp
	sub	fp, #32
	mov	local09, #16
	mov	arg03, local12
	mov	arg04, local13
	mov	arg05, #16
	call	#__system___fmtnumlong
	add	fp, #20
	wrlong	result1, fp
	sub	fp, #20
	jmp	#LR__0309
LR__0304
LR__0305
LR__0306
LR__0307
	add	fp, #4
	rdlong	arg01, fp
	add	fp, #28
	rdlong	arg02, fp
	add	fp, #20
	rdlong	arg03, fp
	sub	fp, #36
	rdlong	local09, fp
	sub	fp, #16
	mov	arg04, local09
	call	#__system___fmtfloat
	add	fp, #20
	wrlong	result1, fp
	sub	fp, #20
	jmp	#LR__0309
LR__0308
	add	fp, #4
	rdlong	arg01, fp
	add	fp, #28
	rdlong	local04, fp
	sub	fp, #32
	mov	local08, ##@LR__1254
	mov	local07, local08
	mov	arg02, local04
	mov	arg03, local07
	call	#__system___fmtstr
	mov	local03, result1
	add	fp, #20
	wrlong	local03, fp
	sub	fp, #20
LR__0309
	add	fp, #20
	rdlong	local03, fp
	sub	fp, #20
	cmps	local03, #0 wc
 if_b	add	fp, #20
 if_b	rdlong	result1, fp
 if_b	sub	fp, #20
 if_b	jmp	#LR__0311
	add	fp, #28
	rdlong	local03, fp
	sub	fp, #8
	rdlong	local08, fp
	add	local03, local08
	add	fp, #8
	wrlong	local03, fp
	sub	fp, #28
	jmp	#LR__0281
LR__0310
	add	fp, #28
	rdlong	result1, fp
	sub	fp, #28
LR__0311
	mov	ptra, fp
	call	#popregs_
__dofmt_ret
	ret

_memcpy
	mov	_var01, arg01
	mov	_var02, arg02
	mov	_var03, arg03
	mov	_var04, _var01
	test	_var01, #3 wz
 if_ne	jmp	#LR__0314
	test	_var02, #3 wz
 if_ne	jmp	#LR__0314
	cmp	_var03, #9 wc
 if_b	jmp	#LR__0314
	mov	_var05, _var01
	mov	_var06, _var02
	loc	pa,	#(@LR__0313-@LR__0312)
	call	#FCACHE_LOAD_
LR__0312
	mov	_var07, _var06
	rdlong	_var06, _var06
	add	_var07, #4
	wrlong	_var06, _var05
	add	_var05, #4
	mov	_var02, _var05
	mov	_var08, _var05
	add	_var08, #4
	mov	_var05, _var08
	mov	_var09, _var07
	rdlong	_var10, _var09
	add	_var07, #4
	mov	_var06, _var07
	wrlong	_var10, _var02
	mov	_var11, _var03
	sub	_var11, #8
	mov	_var03, _var11
	cmp	_var03, #9 wc
 if_ae	jmp	#LR__0312
LR__0313
	mov	_var01, _var05
	mov	_var02, _var06
LR__0314
	loc	pa,	#(@LR__0316-@LR__0315)
	call	#FCACHE_LOAD_
LR__0315
	cmp	_var03, #1 wc
 if_b	jmp	#LR__0317
	mov	_var07, _var02
	add	_var07, #1
	rdbyte	_var10, _var02
	mov	_var02, _var07
	wrbyte	_var10, _var01
	sub	_var03, #1
	add	_var01, #1
	jmp	#LR__0315
LR__0316
LR__0317
	mov	result1, _var04
_memcpy_ret
	ret

__rxtxioctl_0903
	mov	_var01, arg02
	mov	_var02, arg03
	cmp	_var01, #256 wz
 if_e	jmp	#LR__0318
	cmp	_var01, #257 wz
 if_e	jmp	#LR__0319
	jmp	#LR__0320
LR__0318
	add	ptr___system__dat__, #8
	rdlong	result1, ptr___system__dat__
	sub	ptr___system__dat__, #8
	wrlong	result1, _var02
	mov	result1, #0
	jmp	#LR__0321
LR__0319
	rdlong	arg01, _var02
	add	ptr___system__dat__, #8
	wrlong	arg01, ptr___system__dat__
	sub	ptr___system__dat__, #8
	mov	result1, #0
	jmp	#LR__0321
LR__0320
	add	ptr___system__dat__, #24
	wrlong	#10, ptr___system__dat__
	sub	ptr___system__dat__, #24
	neg	result1, #1
LR__0321
__rxtxioctl_0903_ret
	ret

___dummy_flush_0904
	mov	result1, #0
___dummy_flush_0904_ret
	ret

__vfswrite
	mov	COUNT_, #9
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	mov	local04, local02
	add	local01, #8
	rdlong	arg01, local01
	sub	local01, #8
	test	arg01, #2 wz
 if_e	add	ptr___system__dat__, #24
 if_e	wrlong	#6, ptr___system__dat__
 if_e	sub	ptr___system__dat__, #24
 if_e	neg	result1, #1
 if_e	jmp	#LR__0328
	add	local01, #8
	rdlong	result1, local01
	sub	local01, #8
	test	result1, #64 wz
 if_e	jmp	#LR__0323
	add	local01, #8
	rdlong	result1, local01
	sub	local01, #8
	test	result1, #128 wz
 if_e	jmp	#LR__0322
	add	local01, #44
	rdlong	arg03, local01
	sub	local01, #44
	rdlong	local05, arg03
	add	arg03, #4
	rdlong	local06, arg03
	mov	arg01, local01
	mov	arg02, #0
	mov	arg03, #2
	mov	local07, objptr
	mov	objptr, local05
	call	local06
	mov	objptr, local07
	add	local01, #8
	rdlong	local07, local01
	andn	local07, #128
	wrlong	local07, local01
	sub	local01, #8
LR__0322
LR__0323
	add	local01, #20
	rdlong	local07, local01 wz
	sub	local01, #20
 if_e	jmp	#LR__0325
	add	local01, #20
	rdlong	local07, local01
	sub	local01, #20
	rdlong	local05, local07
	add	local07, #4
	rdlong	local06, local07
	mov	arg02, local02
	mov	arg03, local03
	mov	arg01, local01
	mov	local07, objptr
	mov	objptr, local05
	call	local06
	mov	objptr, local07
	mov	local08, result1
	cmps	local08, #0 wc
 if_ae	jmp	#LR__0324
	add	local01, #8
	rdlong	local07, local01
	or	local07, #32
	wrlong	local07, local01
	add	ptr___system__dat__, #24
	wrlong	local08, ptr___system__dat__
	sub	ptr___system__dat__, #24
	cmp	local08, #0 wz
 if_ne	neg	result1, #1
 if_e	mov	result1, #0
	jmp	#LR__0328
LR__0324
	mov	result1, local08
	jmp	#LR__0328
LR__0325
	add	local01, #24
	rdlong	local09, local01 wz
	sub	local01, #24
 if_e	add	ptr___system__dat__, #24
 if_e	wrlong	#6, ptr___system__dat__
 if_e	sub	ptr___system__dat__, #24
 if_e	neg	result1, #1
 if_e	jmp	#LR__0328
	mov	local08, #0
LR__0326
	cmp	local03, #1 wc
 if_b	jmp	#LR__0327
	mov	local07, local09
	rdlong	local05, local07
	add	local07, #4
	rdlong	local06, local07
	rdbyte	arg01, local04
	mov	arg02, local01
	mov	local07, objptr
	mov	objptr, local05
	add	local04, #1
	call	local06
	mov	objptr, local07
	add	local08, result1
	sub	local03, #1
	jmp	#LR__0326
LR__0327
	mov	result1, local08
LR__0328
	mov	ptra, fp
	call	#popregs_
__vfswrite_ret
	ret

__vfsread
	mov	COUNT_, #11
	call	#pushregs_
	add	ptra, #40
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	add	fp, #4
	wrlong	arg03, fp
	sub	fp, #4
	rdlong	local01, fp
	add	fp, #20
	wrlong	local01, fp
	add	fp, #4
	wrlong	#0, fp
	sub	fp, #28
	rdlong	local02, fp
	sub	fp, #4
	add	local02, #8
	rdlong	local01, local02
	test	local01, #1 wz
 if_e	add	ptr___system__dat__, #24
 if_e	wrlong	#6, ptr___system__dat__
 if_e	sub	ptr___system__dat__, #24
 if_e	neg	result1, #1
 if_e	jmp	#LR__0335
	add	fp, #4
	rdlong	local01, fp
	sub	fp, #4
	add	local01, #16
	rdlong	local01, local01 wz
 if_e	jmp	#LR__0330
	add	fp, #4
	rdlong	arg01, fp
	mov	local02, arg01
	add	local02, #16
	rdlong	local01, local02
	rdlong	local02, local01
	add	local01, #4
	rdlong	local01, local01
	add	fp, #4
	rdlong	arg02, fp
	add	fp, #4
	rdlong	arg03, fp
	sub	fp, #12
	mov	local03, objptr
	mov	objptr, local02
	call	local01
	mov	objptr, local03
	add	fp, #16
	wrlong	result1, fp
	sub	fp, #16
	cmps	result1, #0 wc
 if_ae	jmp	#LR__0329
	add	fp, #4
	rdlong	local03, fp
	mov	local01, local03
	add	local03, #8
	rdlong	local03, local03
	or	local03, #32
	add	local01, #8
	wrlong	local03, local01
	add	fp, #12
	rdlong	arg01, fp wz
	sub	fp, #16
	add	ptr___system__dat__, #24
	wrlong	arg01, ptr___system__dat__
	sub	ptr___system__dat__, #24
 if_ne	neg	result1, #1
 if_e	mov	result1, #0
	jmp	#LR__0335
LR__0329
	add	fp, #16
	rdlong	result1, fp
	sub	fp, #16
	jmp	#LR__0335
LR__0330
	add	fp, #4
	rdlong	local01, fp
	add	local01, #28
	rdlong	local01, local01 wz
	add	fp, #20
	wrlong	local01, fp
	sub	fp, #24
 if_e	add	ptr___system__dat__, #24
 if_e	wrlong	#6, ptr___system__dat__
 if_e	sub	ptr___system__dat__, #24
 if_e	neg	result1, #1
 if_e	jmp	#LR__0335
	add	fp, #4
	rdlong	local01, fp
	sub	fp, #4
	add	local01, #36
	rdlong	local04, local01 wz
 if_e	jmp	#LR__0332
	add	fp, #4
	rdlong	local05, fp
	mov	local06, local05
	add	local06, #36
	rdlong	local07, local06
	mov	local01, local07
	rdlong	local02, local01
	add	local01, #4
	rdlong	local08, local01
	mov	local04, local08
	mov	local09, local05
	mov	local10, #256
	add	fp, #32
	mov	local11, fp
	mov	arg01, local09
	mov	arg02, #256
	mov	arg03, local11
	mov	local03, objptr
	mov	objptr, local02
	sub	fp, #36
	call	local04
	mov	objptr, local03
	add	fp, #16
	wrlong	result1, fp
	mov	local02, result1 wz
	sub	fp, #16
 if_ne	jmp	#LR__0331
	add	fp, #36
	rdlong	local06, fp
	sub	fp, #36
	mov	local04, local06
	and	local04, #2 wz
 if_ne	mov	local01, #1
 if_ne	add	fp, #32
 if_ne	wrlong	#1, fp
 if_ne	sub	fp, #32
LR__0331
LR__0332
	add	fp, #16
	wrlong	#0, fp
	sub	fp, #16
LR__0333
	add	fp, #12
	rdlong	local01, fp
	sub	fp, #12
	cmp	local01, #1 wc
 if_b	jmp	#LR__0334
	add	fp, #24
	rdlong	local01, fp
	rdlong	local02, local01
	add	local01, #4
	rdlong	local04, local01
	sub	fp, #20
	rdlong	arg01, fp
	sub	fp, #4
	mov	local08, objptr
	mov	objptr, local02
	call	local04
	mov	objptr, local08
	add	fp, #20
	wrlong	result1, fp
	sub	fp, #20
	cmps	result1, #0 wc
 if_b	jmp	#LR__0334
	add	fp, #28
	rdlong	local02, fp
	mov	local04, local02
	add	local04, #1
	wrlong	local04, fp
	sub	fp, #8
	rdlong	local05, fp
	wrbyte	local05, local02
	sub	fp, #4
	rdlong	local01, fp
	add	local01, #1
	wrlong	local01, fp
	sub	fp, #4
	rdlong	local01, fp
	sub	local01, #1
	wrlong	local01, fp
	add	fp, #20
	rdlong	local01, fp wz
	sub	fp, #32
 if_e	jmp	#LR__0333
	add	fp, #20
	rdlong	local04, fp
	sub	fp, #20
	cmp	local04, #10 wz
 if_ne	jmp	#LR__0333
LR__0334
	add	fp, #16
	rdlong	result1, fp
	sub	fp, #16
LR__0335
	mov	ptra, fp
	call	#popregs_
__vfsread_ret
	ret

___default_filbuf
	mov	COUNT_, #4
	call	#pushregs_
	rdlong	local01, arg01
	add	arg01, #16
	rdlong	arg03, arg01
	sub	arg01, #16
	rdlong	local02, arg03
	add	arg03, #4
	rdlong	local03, arg03
	add	local01, #12
	mov	arg02, local01
	sub	local01, #12
	decod	arg03, #10
	mov	local04, objptr
	mov	objptr, local02
	call	local03
	mov	objptr, local04
	mov	local04, result1
	cmps	local04, #0 wc
 if_b	neg	result1, #1
 if_b	jmp	#LR__0336
	wrlong	local04, local01
	add	local01, #12
	mov	local03, local01
	sub	local01, #8
	wrlong	local03, local01
	add	local01, #4
	rdlong	local03, local01
	or	local03, #1
	wrlong	local03, local01
	mov	result1, local04
LR__0336
	mov	ptra, fp
	call	#popregs_
___default_filbuf_ret
	ret

_parseint_0994
	mov	_var01, arg01
	mov	_var02, arg02
	rdlong	_var03, _var01
	mov	_var04, #0
	rdbyte	_var05, _var03
	cmp	_var05, #42 wz
 if_ne	jmp	#LR__0337
	rdlong	_var05, _var02
	rdlong	_var04, _var05
	add	_var05, #4
	wrlong	_var05, _var02
	add	_var03, #1
	jmp	#LR__0340
LR__0337
LR__0338
	cmps	_var05, #48 wc
 if_b	jmp	#LR__0339
	cmps	_var05, #58 wc
 if_ae	jmp	#LR__0339
	mov	_var06, _var04
	shl	_var06, #2
	add	_var06, _var04
	shl	_var06, #1
	sub	_var05, #48
	add	_var06, _var05
	mov	_var04, _var06
	add	_var03, #1
	rdbyte	_var05, _var03
	jmp	#LR__0338
LR__0339
LR__0340
	wrlong	_var03, _var01
	mov	result1, _var04
_parseint_0994_ret
	ret

_parseflags_1001
	mov	_var01, arg01
	mov	_var02, arg02
	mov	_var03, #0
	mov	_var04, #1
	mov	_var05, #0
	mov	_var06, #2
	mov	_var07, #0
LR__0341
	cmp	_var07, #0 wz
 if_ne	jmp	#LR__0348
	rdbyte	_var08, _var01
	cmp	_var08, #45 wz
	add	_var01, #1
 if_e	jmp	#LR__0342
	cmp	_var08, #35 wz
 if_e	jmp	#LR__0343
	cmp	_var08, #43 wz
 if_e	jmp	#LR__0344
	cmp	_var08, #48 wz
 if_e	jmp	#LR__0345
	cmp	_var08, #32 wz
 if_e	jmp	#LR__0346
	jmp	#LR__0347
LR__0342
	mov	_var06, #1
	jmp	#LR__0341
LR__0343
	or	_var03, #28
	jmp	#LR__0341
LR__0344
	mov	_var05, #1
	jmp	#LR__0341
LR__0345
	mov	_var04, #2
	jmp	#LR__0341
LR__0346
	mov	_var04, #1
	jmp	#LR__0341
LR__0347
	mov	_var07, #1
	jmp	#LR__0341
LR__0348
	shl	_var04, #24
	or	_var03, _var04
	shl	_var05, #26
	or	_var03, _var05
	shl	_var06, #22
	or	_var03, _var06
	wrlong	_var03, _var02
	sub	_var01, #1
	mov	result1, _var01
_parseflags_1001_ret
	ret

_parsesize_1005
	mov	_var01, arg02
	mov	_var02, #4
	mov	_var03, #0
	mov	_var04, arg01
	mov	_var05, arg01
	add	_var05, #1
	mov	_var06, _var05
	rdbyte	_var07, _var04
	mov	_var08, _var07
	cmp	_var08, #108 wz
 if_e	jmp	#LR__0349
	cmp	_var08, #104 wz
 if_e	jmp	#LR__0350
	cmp	_var08, #106 wz
 if_e	jmp	#LR__0351
	cmp	_var08, #122 wz
 if_e	jmp	#LR__0352
	cmp	_var08, #116 wz
 if_e	jmp	#LR__0353
	cmp	_var08, #76 wz
 if_e	jmp	#LR__0354
	jmp	#LR__0355
LR__0349
	mov	_var02, #4
	rdbyte	_var09, _var06
	cmp	_var09, #108 wz
 if_e	mov	_var02, #8
 if_e	add	_var06, #1
	jmp	#LR__0356
LR__0350
	mov	_var02, #2
	rdbyte	_var09, _var06
	cmp	_var09, #104 wz
 if_e	mov	_var02, #1
 if_e	add	_var06, #1
	jmp	#LR__0356
LR__0351
	mov	_var02, #8
	jmp	#LR__0356
LR__0352
LR__0353
	mov	_var02, #4
	jmp	#LR__0356
LR__0354
	mov	_var02, #8
	jmp	#LR__0356
LR__0355
	mov	_var09, _var06
	sub	_var09, #1
	mov	_var06, _var09
LR__0356
	wrlong	_var02, _var01
	mov	result1, _var06
_parsesize_1005_ret
	ret

_jm_fullduplexserial_spin2_start
	mov	COUNT_, #11
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	mov	local04, arg04
	call	#_jm_fullduplexserial_spin2_stop
	cmp	local01, local02 wz
 if_e	mov	result1, #0
 if_e	jmp	#LR__0364
	add	objptr, #4
	wrlong	local01, objptr
	add	objptr, #4
	wrlong	local02, objptr
	add	objptr, #36
	mov	muldiva_, objptr
	sub	objptr, #32
	wrlong	muldiva_, objptr
	add	objptr, #288
	mov	muldiva_, objptr
	sub	objptr, #284
	wrlong	muldiva_, objptr
	rdlong	muldiva_, #20
	abs	muldiva_, muldiva_ wc
	qdiv	muldiva_, ##1000
	add	objptr, #20
	mov	muldivb_, local04
	getqx	muldiva_
	negc	muldiva_, muldiva_
	wrlong	muldiva_, objptr
	sub	objptr, #36
	rdlong	muldiva_, #20
	call	#divide_
	qmul	muldivb_, #11
	add	objptr, #40
	decod	local05, #16
	mov	local06, local04
	decod	arg02, #16
	mov	arg03, local06
	getqx	result1
	wrlong	result1, objptr
	rdlong	arg01, #20
	qmul	arg01, ##65536
	getqy	result1
	getqx	arg01
	setq	result1
	qdiv	arg01, arg03
	sub	objptr, #36
	rdlong	result1, objptr
	sub	objptr, #4
	cmps	result1, #0 wc
	getqx	result1
	mov	local07, result1
	bitl	local07, #288
	or	local07, #7
 if_b	jmp	#LR__0357
	mov	arg02, #62
	test	local03, #1 wz
 if_ne	mov	arg02, ##32830
	add	objptr, #4
	rdlong	arg01, objptr
	sub	objptr, #4
	mov	local05, local07
	mov	local06, #0
	mov	arg03, local05
	mov	arg04, #0
	dirl	arg01
	wrpin	arg02, arg01
	wxpin	arg03, arg01
	wypin	#0, arg01
	dirh	arg01
LR__0357
	add	objptr, #8
	rdlong	local08, objptr
	sub	objptr, #8
	cmps	local08, #0 wc
 if_b	jmp	#LR__0363
	mov	local09, #124
	mov	local08, local03
	shr	local08, #1
	and	local08, #3
	sub	local08, #1
	fle	local08, #3
	mov	local10, local08
	jmprel	local10
LR__0358
	jmp	#LR__0359
	jmp	#LR__0360
	jmp	#LR__0361
	jmp	#LR__0362
LR__0359
	bith	local09, #14
	jmp	#LR__0362
LR__0360
	bith	local09, #75
	jmp	#LR__0362
LR__0361
	mov	local11, local09
	or	local11, ##18176
	mov	local09, local11
LR__0362
	add	objptr, #8
	rdlong	arg01, objptr
	sub	objptr, #8
	dirl	arg01
	wrpin	local09, arg01
	wxpin	local07, arg01
	wypin	#0, arg01
	dirh	arg01
LR__0363
	add	objptr, #4
	mov	arg03, objptr
	sub	objptr, #4
	mov	result1, #16
	setq	arg03
	coginit	result1, ptr__jm_fullduplexserial_spin2_dat__ wc
 if_b	neg	result1, #1
	add	result1, #1
	wrlong	result1, objptr
LR__0364
	mov	ptra, fp
	call	#popregs_
_jm_fullduplexserial_spin2_start_ret
	ret

_jm_fullduplexserial_spin2_stop
	rdlong	arg01, objptr wz
 if_ne	rdlong	arg01, objptr
 if_ne	sub	arg01, #1
 if_ne	cogstop	arg01
 if_ne	wrlong	#0, objptr
	add	objptr, #4
	mov	arg01, objptr
	sub	objptr, #4
	neg	arg02, #1
	mov	arg03, #2
	call	#\builtin_longfill_
	add	objptr, #12
	mov	arg01, objptr
	sub	objptr, #12
	mov	arg02, #0
	mov	arg03, #7
	call	#\builtin_longfill_
_jm_fullduplexserial_spin2_stop_ret
	ret

_jm_fullduplexserial_spin2_rxcheck
	add	objptr, #24
	rdlong	result1, objptr
	sub	objptr, #4
	rdlong	_var01, objptr
	sub	objptr, #20
	cmp	result1, _var01 wz
 if_e	jmp	#LR__0365
	add	objptr, #24
	rdlong	_var01, objptr
	mov	result1, _var01
	add	objptr, #20
	add	result1, objptr
	rdbyte	_var02, result1
	add	_var01, #1
	sub	objptr, #20
	wrlong	_var01, objptr
	sub	objptr, #24
	cmp	_var01, #256 wz
 if_e	add	objptr, #24
 if_e	wrlong	#0, objptr
 if_e	sub	objptr, #24
	jmp	#LR__0366
LR__0365
	neg	_var02, #1
LR__0366
	mov	result1, _var02
_jm_fullduplexserial_spin2_rxcheck_ret
	ret

_jm_fullduplexserial_spin2_rxtime
	mov	COUNT_, #5
	call	#pushregs_
	getct	local01
LR__0367
	mov	local02, #0
	mov	local03, #0
	call	#_jm_fullduplexserial_spin2_rxcheck
	mov	local04, result1
	cmps	local04, #0 wc
 if_ae	not	local03, #0
	cmp	local03, #0 wz
 if_ne	not	local02, #0
	mov	local03, #0
	mov	local05, #0
	getct	muldiva_
	sub	muldiva_, local01
	add	objptr, #36
	rdlong	muldivb_, objptr
	sub	objptr, #36
	call	#divide_
	cmps	muldivb_, arg01 wc
 if_ae	not	local05, #0
	cmp	local05, #0 wz
 if_ne	not	local03, #0
	or	local02, local03 wz
 if_e	jmp	#LR__0367
	mov	result1, local04
	mov	ptra, fp
	call	#popregs_
_jm_fullduplexserial_spin2_rxtime_ret
	ret

_jm_fullduplexserial_spin2_tx
	loc	pa,	#(@LR__0369-@LR__0368)
	call	#FCACHE_LOAD_
LR__0368
	add	objptr, #28
	rdlong	_var01, objptr
	add	objptr, #4
	rdlong	_var02, objptr
	sub	objptr, #32
	sub	_var01, _var02
	cmps	_var01, #0 wc
 if_b	mov	_var03, #128
 if_ae	mov	_var03, #0
	add	_var01, _var03
	cmps	_var01, #127 wc
 if_ae	jmp	#LR__0368
LR__0369
	add	objptr, #28
	rdlong	_var01, objptr
	add	objptr, #272
	add	_var01, objptr
	wrbyte	arg01, _var01
	sub	objptr, #272
	rdlong	_var02, objptr
	add	_var02, #1
	wrlong	_var02, objptr
	sub	objptr, #28
	cmp	_var02, #128 wz
 if_e	add	objptr, #28
 if_e	wrlong	#0, objptr
 if_e	sub	objptr, #28
_jm_fullduplexserial_spin2_tx_ret
	ret

_jm_i2c_spin2_setup
	mov	_var01, arg03
	qmul	_var01, ##1000
	mov	_var02, arg01
	mov	_var03, arg02
	mov	_var04, arg04
	wrlong	_var02, objptr
	add	objptr, #4
	wrlong	_var03, objptr
	sub	objptr, #4
	rdlong	muldiva_, #20
	getqx	_var05
	mov	muldivb_, _var05
	call	#divide_
	mov	_var06, muldivb_
	shr	_var06, #2
	mov	_var07, _var06
	add	objptr, #8
	wrlong	_var06, objptr
	sub	objptr, #8
	fle	_var04, #3
	mov	_var08, _var04
	jmprel	_var08
LR__0370
	jmp	#LR__0371
	jmp	#LR__0372
	jmp	#LR__0373
	jmp	#LR__0374
LR__0371
	mov	_var09, ##14336
	jmp	#LR__0375
LR__0372
	decod	_var09, #11
	jmp	#LR__0375
LR__0373
	decod	_var09, #13
	jmp	#LR__0375
LR__0374
	decod	_var09, #12
LR__0375
	loc	pa,	#(@LR__0378-@LR__0376)
	call	#FCACHE_LOAD_
LR__0376
	org	0
	wrpin	_var09, _var02
	wrpin	_var09, _var03
	drvh	_var02
	drvh	_var03
	waitx	_var07
	waitx	_var07
	rep	#8, #9
	testp	_var03 wc
 if_b	jmp	#LR__0377
	drvl	_var02
	waitx	_var07
	waitx	_var07
	drvh	_var02
	waitx	_var07
	waitx	_var07
LR__0377
LR__0378
	orgh
_jm_i2c_spin2_setup_ret
	ret

_jm_i2c_spin2_start
	rdlong	_var01, objptr
	add	objptr, #4
	rdlong	_var02, objptr
	add	objptr, #4
	rdlong	_var03, objptr
	sub	objptr, #8
	loc	pa,	#(@LR__0381-@LR__0379)
	call	#FCACHE_LOAD_
LR__0379
	org	0
	drvh	_var02
	drvh	_var01
	waitx	_var03
LR__0380
	testp	_var01 wc
 if_ae	jmp	#LR__0380
	drvl	_var02
	waitx	_var03
	drvl	_var01
	waitx	_var03
LR__0381
	orgh
_jm_i2c_spin2_start_ret
	ret

_jm_i2c_spin2_write
	mov	_var01, arg01
	mov	_var02, #0
	rdlong	_var03, objptr
	add	objptr, #4
	rdlong	_var04, objptr
	add	objptr, #4
	rdlong	_var05, objptr
	sub	objptr, #8
	mov	_var06, _var05
	loc	pa,	#(@LR__0385-@LR__0382)
	call	#FCACHE_LOAD_
LR__0382
	org	0
	shl	_var01, #24
LR__0383
	rep	#8, #8
	shl	_var01, #1 wc
	drvc	_var04
	waitx	_var06
	drvh	_var03
	waitx	_var06
	waitx	_var06
	drvl	_var03
	waitx	_var06
LR__0384
	drvh	_var04
	waitx	_var06
	drvh	_var03
	waitx	_var06
	testp	_var04 wc
	muxc	_var02, #1
	waitx	_var06
	drvl	_var03
	waitx	_var06
	waitx	_var06
LR__0385
	orgh
	mov	result1, _var02
_jm_i2c_spin2_write_ret
	ret

_jm_i2c_spin2_read
	mov	_var01, arg01
	mov	_var02, #0
	rdlong	_var03, objptr
	add	objptr, #4
	rdlong	_var04, objptr
	add	objptr, #4
	rdlong	_var05, objptr
	sub	objptr, #8
	mov	_var06, _var05
	loc	pa,	#(@LR__0389-@LR__0386)
	call	#FCACHE_LOAD_
LR__0386
	org	0
	drvh	_var04
LR__0387
	rep	#9, #8
	waitx	_var06
	drvh	_var03
	waitx	_var06
	testp	_var04 wc
	shl	_var02, #1
	muxc	_var02, #1
	waitx	_var06
	drvl	_var03
	waitx	_var06
LR__0388
	testb	_var01, #0 wc
	drvc	_var04
	waitx	_var06
	drvh	_var03
	waitx	_var06
	waitx	_var06
	drvl	_var03
	waitx	_var06
	waitx	_var06
LR__0389
	orgh
	mov	result1, _var02
_jm_i2c_spin2_read_ret
	ret

_jm_i2c_spin2_stop
	rdlong	_var01, objptr
	add	objptr, #4
	rdlong	_var02, objptr
	add	objptr, #4
	rdlong	_var03, objptr
	sub	objptr, #8
	loc	pa,	#(@LR__0392-@LR__0390)
	call	#FCACHE_LOAD_
LR__0390
	org	0
	drvl	_var02
	drvh	_var01
	waitx	_var03
LR__0391
	testp	_var01 wc
 if_ae	jmp	#LR__0391
	waitx	_var03
	drvh	_var02
LR__0392
	orgh
_jm_i2c_spin2_stop_ret
	ret

_jm_quadrature_spin2_start
	mov	COUNT_, #9
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	mov	local04, arg04
	mov	local05, arg05
	mov	local06, arg06
	mov	local07, arg07
	call	#_jm_quadrature_spin2_stop
	sub	local02, local01 wz
 if_ne	abs	result1, local02
 if_ne	cmps	result1, #4 wc
 if_nc_or_z	mov	local08, #0
 if_nc_or_z	jmp	#LR__0393
	wrlong	local01, objptr
	add	objptr, #4
	wrlong	local03, objptr
	add	objptr, #4
	wrlong	local04, objptr
	add	objptr, #4
	wrlong	local05, objptr
	add	objptr, #4
	wrlong	local06, objptr
	add	objptr, #4
	wrlong	local07, objptr
	cmp	local04, #0 wz
 if_ne	mov	local09, #2
 if_e	mov	local09, #0
	sub	objptr, #12
	wrlong	local09, objptr
	sub	objptr, #8
	rdlong	arg01, objptr
	mov	arg02, #22
	and	local02, #7
	shl	local02, #24
	or	arg02, local02
	mov	arg03, #0
	mov	arg04, #0
	dirl	arg01
	wrpin	arg02, arg01
	wxpin	#0, arg01
	wypin	#0, arg01
	dirh	arg01
	mov	arg01, local05
	call	#_jm_quadrature_spin2_set
	add	objptr, #24
	wrlong	##-1, objptr
	sub	objptr, #24
	neg	local08, #1
LR__0393
	mov	result1, local08
	mov	ptra, fp
	call	#popregs_
_jm_quadrature_spin2_start_ret
	ret

_jm_quadrature_spin2_stop
	add	objptr, #24
	rdlong	arg03, objptr wz
	sub	objptr, #24
 if_e	jmp	#LR__0394
	rdlong	arg01, objptr
	fltl	arg01
	wrpin	#0, arg01
	mov	arg01, objptr
	mov	arg02, #0
	mov	arg03, #7
	call	#\builtin_longfill_
LR__0394
_jm_quadrature_spin2_stop_ret
	ret

_jm_quadrature_spin2_set
	mov	result1, arg01
	rdlong	arg01, objptr
	fltl	arg01
	drvl	arg01
	add	objptr, #12
	wrlong	result1, objptr
	sub	objptr, #12
_jm_quadrature_spin2_set_ret
	ret

_jm_quadrature_spin2_value
	mov	COUNT_, #1
	call	#pushregs_
	rdlong	arg01, objptr
	mov	local01, #0
	rdpin	local01, arg01
	add	objptr, #8
	rdlong	arg01, objptr
	sar	local01, arg01
	add	objptr, #4
	rdlong	arg01, objptr
	add	local01, arg01
	add	objptr, #4
	rdlong	arg01, objptr
	sub	objptr, #16
	cmps	local01, arg01 wc
 if_ae	jmp	#LR__0395
	add	objptr, #16
	rdlong	arg01, objptr
	sub	objptr, #16
	call	#_jm_quadrature_spin2_set
	mov	local01, result1
	jmp	#LR__0397
LR__0395
	add	objptr, #20
	rdlong	arg01, objptr
	sub	objptr, #20
	cmps	local01, arg01 wcz
 if_be	jmp	#LR__0396
	add	objptr, #20
	rdlong	arg01, objptr
	sub	objptr, #20
	call	#_jm_quadrature_spin2_set
	mov	local01, result1
LR__0396
LR__0397
	mov	result1, local01
	mov	ptra, fp
	call	#popregs_
_jm_quadrature_spin2_value_ret
	ret

_fatfs_cc_memcmp
LR__0398
	cmp	arg03, #1 wc
 if_b	jmp	#LR__0399
	rdbyte	_var01, arg01
	rdbyte	_var02, arg02
	cmp	_var01, _var02 wz
 if_e	add	arg01, #1
 if_e	add	arg02, #1
 if_ne	rdbyte	result1, arg01
 if_ne	rdbyte	_var02, arg02
 if_ne	sub	result1, _var02
 if_ne	jmp	#_fatfs_cc_memcmp_ret
	sub	arg03, #1
	jmp	#LR__0398
LR__0399
	mov	result1, #0
_fatfs_cc_memcmp_ret
	ret

_fatfs_cc_strncmp
	mov	_var01, arg01 wz
 if_ne	jmp	#LR__0400
	cmp	arg02, #0 wz
 if_ne	neg	_var02, #1
 if_e	mov	_var02, #0
	mov	result1, _var02
	jmp	#_fatfs_cc_strncmp_ret
LR__0400
	cmp	arg02, #0 wz
 if_e	mov	result1, #1
 if_e	jmp	#_fatfs_cc_strncmp_ret
	mov	_var03, arg03
	loc	pa,	#(@LR__0402-@LR__0401)
	call	#FCACHE_LOAD_
LR__0401
	rdbyte	_var04, _var01
	mov	_var05, arg02
	mov	_var06, arg02
	add	_var06, #1
	mov	arg02, _var06
	rdbyte	_var07, _var05
	mov	_var02, _var03
	sub	_var02, #1
	mov	_var03, _var02
	cmps	_var03, #0 wc
	add	_var01, #1
 if_ae	cmp	_var04, #0 wz
 if_nc_and_z	jmp	#LR__0403
 if_ae	cmp	_var04, _var07 wz
 if_nc_and_z	jmp	#LR__0401
LR__0402
LR__0403
	cmps	_var03, #0 wc
 if_b	mov	result1, #0
 if_b	jmp	#_fatfs_cc_strncmp_ret
	cmp	_var04, _var07 wz
 if_e	mov	result1, #0
 if_e	jmp	#_fatfs_cc_strncmp_ret
	cmp	_var04, #0 wz
 if_e	neg	result1, #1
 if_e	jmp	#_fatfs_cc_strncmp_ret
	cmp	_var07, #0 wz
 if_e	mov	result1, #1
 if_ne	mov	result1, _var04
 if_ne	sub	result1, _var07
_fatfs_cc_strncmp_ret
	ret

_fatfs_cc_strchr
LR__0404
	mov	_var01, arg01
	rdbyte	_var02, _var01
	getbyte	_var03, _var02, #0
	getbyte	_var04, arg02, #0
	cmp	_var03, _var04 wz
	add	arg01, #1
 if_e	jmp	#LR__0405
	mov	_var03, _var02
	zerox	_var03, #7 wz
 if_e	mov	result1, #0
 if_e	jmp	#_fatfs_cc_strchr_ret
	jmp	#LR__0404
LR__0405
	sub	arg01, #1
	mov	result1, arg01
_fatfs_cc_strchr_ret
	ret

_fatfs_cc_disk_initialize
	mov	COUNT_, #7
	call	#pushregs_
	add	ptra, #64
	add	fp, #4
	wrbyte	arg01, fp
	add	objptr, #12
	rdlong	arg01, objptr
	add	fp, #44
	wrlong	arg01, fp
	sub	objptr, #4
	rdlong	arg01, objptr
	add	fp, #4
	wrlong	arg01, fp
	add	objptr, #8
	rdlong	arg01, objptr
	add	fp, #4
	wrlong	arg01, fp
	add	objptr, #4
	rdlong	arg01, objptr
	add	fp, #4
	wrlong	arg01, fp
	add	objptr, #4
	wrbyte	#1, objptr
	sub	objptr, #24
	sub	fp, #56
	rdbyte	arg01, fp wz
	sub	fp, #4
 if_ne	mov	result1, #3
 if_ne	jmp	#LR__0424
	mov	arg01, ##10000
	call	#__system___waitus
	add	fp, #48
	rdlong	arg01, fp
	wrpin	#0, arg01
	add	fp, #4
	rdlong	arg01, fp
	wrpin	#0, arg01
	add	fp, #4
	rdlong	arg01, fp
	wrpin	#0, arg01
	add	fp, #4
	rdlong	arg01, fp
	wrpin	##4608, arg01
	sub	fp, #12
	rdlong	arg01, fp
	drvh	arg01
	add	fp, #4
	rdlong	arg01, fp
	drvh	arg01
	add	fp, #4
	rdlong	arg01, fp
	drvh	arg01
	add	fp, #4
	rdlong	arg01, fp
	drvh	arg01
	sub	fp, #32
	wrlong	##524304, fp
	add	fp, #4
	wrlong	##409672, fp
	add	fp, #20
	rdlong	arg04, fp
	mov	arg02, ##409672
	bith	arg02, #16
	sub	fp, #24
	rdlong	arg03, fp
	dirl	arg04
	wrpin	arg02, arg04
	wxpin	arg03, arg04
	wypin	#0, arg04
	dirh	arg04
	add	fp, #28
	rdlong	local01, fp
	sub	arg04, local01
	and	arg04, #7
	shl	arg04, #24
	mov	arg02, #120
	or	arg02, arg04
	sub	fp, #20
	wrlong	arg02, fp
	add	fp, #20
	rdlong	arg01, fp
	bith	arg02, #16
	dirl	arg01
	wrpin	arg02, arg01
	wxpin	#31, arg01
	wypin	##-1, arg01
	dirh	arg01
	sub	fp, #4
	rdlong	arg02, fp
	add	fp, #8
	rdlong	arg04, fp
	sub	arg02, arg04
	and	arg02, #7
	shl	arg02, #24
	sub	fp, #20
	wrlong	arg02, fp
	or	arg02, ##21114
	wrlong	arg02, fp
	add	fp, #20
	rdlong	arg01, fp
	mov	local02, #0
	mov	arg03, #39
	mov	arg04, #0
	dirl	arg01
	wrpin	arg02, arg01
	wxpin	#39, arg01
	wypin	#0, arg01
	dirh	arg01
	sub	fp, #40
	mov	arg01, fp
	sub	fp, #20
	mov	arg02, #10
	call	#_fatfs_cc_rcvr_mmc_0825
	mov	arg01, #0
	mov	arg02, #0
	call	#_fatfs_cc_send_cmd_0849
	call	#_fatfs_cc_deselect_0835
	mov	arg01, #100
	call	#__system___waitus
	add	fp, #20
	mov	arg01, fp
	sub	fp, #20
	mov	arg02, #10
	call	#_fatfs_cc_rcvr_mmc_0825
	add	fp, #12
	wrbyte	#0, fp
	sub	fp, #12
	mov	arg01, #0
	mov	arg02, #0
	call	#_fatfs_cc_send_cmd_0849
	getbyte	result1, result1, #0
	cmp	result1, #1 wz
 if_ne	jmp	#LR__0423
	mov	arg01, #8
	mov	arg02, #426
	call	#_fatfs_cc_send_cmd_0849
	getbyte	result1, result1, #0
	cmp	result1, #1 wz
 if_ne	jmp	#LR__0409
	add	fp, #20
	mov	arg01, fp
	sub	fp, #20
	mov	arg02, #4
	call	#_fatfs_cc_rcvr_mmc_0825
	add	fp, #22
	rdbyte	local03, fp
	sub	fp, #22
	cmp	local03, #1 wz
 if_ne	jmp	#LR__0422
	add	fp, #23
	rdbyte	local04, fp
	sub	fp, #23
	cmp	local04, #170 wz
 if_ne	jmp	#LR__0422
	add	fp, #24
	wrlong	##1000, fp
	sub	fp, #24
LR__0406
	add	fp, #24
	rdlong	local04, fp wz
	sub	fp, #24
 if_e	jmp	#LR__0407
	decod	local05, #30
	mov	arg01, #169
	decod	arg02, #30
	call	#_fatfs_cc_send_cmd_0849
	mov	local02, result1
	zerox	local02, #7 wz
 if_e	jmp	#LR__0407
	mov	arg01, ##1000
	call	#__system___waitus
	add	fp, #24
	rdlong	local06, fp
	mov	local05, local06
	sub	local05, #1
	wrlong	local05, fp
	sub	fp, #24
	jmp	#LR__0406
LR__0407
	add	fp, #24
	rdlong	local03, fp wz
	sub	fp, #24
 if_e	jmp	#LR__0408
	mov	local01, #0
	mov	arg01, #58
	mov	arg02, #0
	call	#_fatfs_cc_send_cmd_0849
	mov	local02, result1
	mov	local04, local02
	zerox	local04, #7 wz
 if_ne	jmp	#LR__0408
	add	fp, #20
	mov	arg01, fp
	sub	fp, #20
	mov	arg02, #4
	call	#_fatfs_cc_rcvr_mmc_0825
	add	fp, #20
	rdbyte	local04, fp
	getbyte	local07, local04, #0
	and	local07, #64 wz
 if_ne	mov	local03, #12
 if_e	mov	local03, #4
	sub	fp, #8
	wrbyte	local03, fp
	sub	fp, #12
LR__0408
	rdlong	local03, #20
	add	fp, #24
	wrlong	local03, fp
	add	fp, #12
	rdlong	local03, fp
	bith	local03, #27
	wrlong	local03, fp
	sub	fp, #12
	rdlong	local07, fp
	sub	fp, #24
	cmp	local07, ##150000001 wc
 if_b	add	fp, #28
 if_b	wrlong	##131076, fp
 if_b	sub	fp, #28
 if_b	jmp	#LR__0422
	add	fp, #24
	rdlong	local07, fp
	sub	fp, #24
	cmp	local07, ##200000001 wc
 if_b	add	fp, #28
 if_b	wrlong	##131077, fp
 if_b	sub	fp, #28
 if_b	jmp	#LR__0422
	add	fp, #24
	rdlong	local07, fp
	sub	fp, #24
	cmp	local07, ##280000001 wc
 if_b	add	fp, #28
 if_b	wrlong	##131078, fp
 if_b	sub	fp, #28
 if_b	jmp	#LR__0422
	add	fp, #28
	wrlong	##196616, fp
	sub	fp, #28
	jmp	#LR__0422
LR__0409
	mov	arg01, #169
	mov	arg02, #0
	call	#_fatfs_cc_send_cmd_0849
	getbyte	local03, result1, #0
	cmp	local03, #2 wc
 if_ae	jmp	#LR__0410
	add	fp, #12
	wrbyte	#2, fp
	add	fp, #4
	wrbyte	#169, fp
	sub	fp, #16
	jmp	#LR__0411
LR__0410
	add	fp, #12
	wrbyte	#1, fp
	add	fp, #4
	wrbyte	#1, fp
	sub	fp, #16
LR__0411
	add	fp, #24
	wrlong	##1000, fp
	sub	fp, #24
LR__0412
	add	fp, #24
	rdlong	local04, fp wz
	sub	fp, #24
 if_e	jmp	#LR__0413
	add	fp, #16
	rdbyte	arg01, fp
	sub	fp, #16
	mov	local05, #0
	mov	arg02, #0
	call	#_fatfs_cc_send_cmd_0849
	mov	local01, result1
	mov	local02, local01
	zerox	local02, #7 wz
 if_e	jmp	#LR__0413
	mov	arg01, ##1000
	call	#__system___waitus
	add	fp, #24
	rdlong	local01, fp
	mov	local02, local01
	mov	local06, local01
	mov	local05, local06
	sub	local05, #1
	wrlong	local05, fp
	sub	fp, #24
	jmp	#LR__0412
LR__0413
	add	fp, #24
	rdlong	local07, fp wz
	sub	fp, #24
 if_e	jmp	#LR__0414
	decod	local01, #9
	mov	arg01, #16
	decod	arg02, #9
	call	#_fatfs_cc_send_cmd_0849
	mov	local02, result1
	mov	local04, local02
	zerox	local04, #7 wz
 if_e	jmp	#LR__0415
LR__0414
	add	fp, #12
	wrbyte	#0, fp
	sub	fp, #12
LR__0415
	rdlong	local03, #20
	add	fp, #24
	wrlong	local03, fp
	sub	fp, #24
	cmp	local03, ##100000001 wc
 if_ae	jmp	#LR__0416
	add	fp, #36
	rdlong	local03, fp
	bith	local03, #27
	wrlong	local03, fp
	sub	fp, #36
	jmp	#LR__0417
LR__0416
	add	fp, #24
	rdlong	local03, fp
	sub	fp, #24
	cmp	local03, ##200000001 wc
 if_b	add	fp, #36
 if_b	rdlong	local03, fp
 if_b	or	local03, ##134283264
 if_b	wrlong	local03, fp
 if_b	sub	fp, #36
LR__0417
	add	fp, #24
	rdlong	local03, fp
	sub	fp, #24
	cmp	local03, ##100000001 wc
 if_b	add	fp, #28
 if_b	wrlong	##131076, fp
 if_b	sub	fp, #28
 if_b	jmp	#LR__0421
	add	fp, #24
	rdlong	local03, fp
	sub	fp, #24
	cmp	local03, ##150000001 wc
 if_b	add	fp, #28
 if_b	wrlong	##196614, fp
 if_b	sub	fp, #28
 if_b	jmp	#LR__0420
	add	fp, #24
	rdlong	local03, fp
	sub	fp, #24
	cmp	local03, ##200000001 wc
 if_b	add	fp, #28
 if_b	wrlong	##262152, fp
 if_b	sub	fp, #28
 if_b	jmp	#LR__0419
	add	fp, #24
	rdlong	local03, fp
	sub	fp, #24
	cmp	local03, ##250000001 wc
 if_b	add	fp, #28
 if_b	wrlong	##327690, fp
 if_b	sub	fp, #28
 if_b	jmp	#LR__0418
	add	fp, #24
	rdlong	local03, fp
	sub	fp, #24
	cmp	local03, ##300000001 wc
 if_b	add	fp, #28
 if_b	wrlong	##393228, fp
 if_b	sub	fp, #28
 if_ae	add	fp, #28
 if_ae	wrlong	##458766, fp
 if_ae	sub	fp, #28
LR__0418
LR__0419
LR__0420
LR__0421
LR__0422
LR__0423
	add	fp, #12
	rdbyte	local03, fp
	add	objptr, #25
	wrbyte	local03, objptr
	rdbyte	local07, fp wz
 if_ne	mov	local03, #0
 if_e	mov	local03, #1
	add	fp, #32
	wrbyte	local03, fp
	rdbyte	local03, fp
	sub	fp, #44
	sub	objptr, #1
	wrbyte	local03, objptr
	sub	objptr, #24
	call	#_fatfs_cc_deselect_0835
	add	fp, #52
	rdlong	arg01, fp
	sub	fp, #24
	rdlong	arg02, fp
	wxpin	arg02, arg01
	add	fp, #28
	rdlong	arg01, fp
	sub	fp, #20
	rdlong	arg02, fp
	wrpin	arg02, arg01
	add	fp, #8
	rdbyte	result1, fp
	sub	fp, #44
LR__0424
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_disk_initialize_ret
	ret

_fatfs_cc_disk_read
	mov	COUNT_, #5
	call	#pushregs_
	mov	local01, arg02
	mov	local02, arg03
	mov	local03, arg04
	cmp	arg01, #0 wz
 if_ne	mov	result1, #1
 if_e	add	objptr, #24
 if_e	rdbyte	result1, objptr
 if_e	sub	objptr, #24
	test	result1, #1 wz
 if_ne	mov	result1, #3
 if_ne	jmp	#LR__0427
	add	objptr, #25
	rdbyte	local04, objptr
	sub	objptr, #25
	test	local04, #8 wz
 if_e	shl	local02, #9
	cmp	local03, #2 wc
 if_ae	mov	local04, #18
 if_b	mov	local04, #17
	mov	arg02, local02
	mov	arg01, local04
	call	#_fatfs_cc_send_cmd_0849
	mov	local05, result1
	zerox	local05, #7 wz
 if_ne	jmp	#LR__0426
LR__0425
	mov	arg01, local01
	decod	arg02, #9
	call	#_fatfs_cc_rcvr_datablock_0843
	cmp	result1, #0 wz
 if_ne	add	local01, ##512
 if_ne	djnz	local03, #LR__0425
	getbyte	local04, local04, #0
	cmp	local04, #18 wz
 if_e	mov	arg01, #12
 if_e	mov	arg02, #0
 if_e	call	#_fatfs_cc_send_cmd_0849
LR__0426
	call	#_fatfs_cc_deselect_0835
	cmp	local03, #0 wz
 if_ne	mov	local05, #1
 if_e	mov	local05, #0
	mov	result1, local05
LR__0427
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_disk_read_ret
	ret

_fatfs_cc_disk_write
	mov	COUNT_, #6
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	mov	local04, arg04
	mov	local05, local03
	mov	arg01, local01 wz
 if_ne	mov	result1, #1
 if_e	add	objptr, #24
 if_e	rdbyte	result1, objptr
 if_e	sub	objptr, #24
	test	result1, #1 wz
 if_ne	mov	result1, #3
 if_ne	jmp	#LR__0432
	add	objptr, #25
	rdbyte	local06, objptr
	sub	objptr, #25
	test	local06, #8 wz
 if_e	shl	local05, #9
	cmp	local04, #1 wz
 if_ne	jmp	#LR__0428
	mov	arg01, #24
	mov	arg02, local05
	call	#_fatfs_cc_send_cmd_0849
	mov	local06, result1
	zerox	local06, #7 wz
 if_ne	jmp	#LR__0431
	mov	arg01, local02
	mov	arg02, #254
	call	#_fatfs_cc_xmit_datablock_0845
	cmps	result1, #0 wz
 if_ne	mov	local04, #0
	jmp	#LR__0431
LR__0428
	add	objptr, #25
	rdbyte	local06, objptr
	sub	objptr, #25
	test	local06, #6 wz
 if_ne	mov	arg01, #151
 if_ne	mov	arg02, local04
 if_ne	call	#_fatfs_cc_send_cmd_0849
	mov	arg02, local05
	mov	arg01, #25
	call	#_fatfs_cc_send_cmd_0849
	mov	local06, result1
	zerox	local06, #7 wz
 if_ne	jmp	#LR__0430
LR__0429
	mov	arg01, local02
	mov	arg02, #252
	call	#_fatfs_cc_xmit_datablock_0845
	cmp	result1, #0 wz
 if_ne	add	local02, ##512
 if_ne	djnz	local04, #LR__0429
	mov	arg01, #0
	mov	arg02, #253
	call	#_fatfs_cc_xmit_datablock_0845
	cmp	result1, #0 wz
 if_e	mov	local04, #1
LR__0430
LR__0431
	call	#_fatfs_cc_deselect_0835
	cmp	local04, #0 wz
 if_ne	mov	local06, #1
 if_e	mov	local06, #0
	mov	result1, local06
LR__0432
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_disk_write_ret
	ret

_fatfs_cc_disk_ioctl
	mov	COUNT_, #4
	call	#pushregs_
	add	ptra, #48
	add	fp, #4
	wrbyte	arg01, fp
	add	fp, #4
	wrbyte	arg02, fp
	add	fp, #4
	wrlong	arg03, fp
	sub	fp, #8
	rdbyte	local01, fp
	sub	fp, #4
	mov	arg01, local01 wz
 if_ne	mov	result1, #1
 if_e	add	objptr, #24
 if_e	rdbyte	result1, objptr
 if_e	sub	objptr, #24
	getbyte	local02, result1, #0
	test	local02, #1 wz
 if_ne	mov	result1, #3
 if_ne	jmp	#LR__0441
	add	fp, #16
	wrlong	#1, fp
	sub	fp, #8
	rdbyte	local02, fp
	sub	fp, #8
	getbyte	local03, local02, #0
	fle	local03, #4
	jmprel	local03
LR__0433
	jmp	#LR__0434
	jmp	#LR__0435
	jmp	#LR__0439
	jmp	#LR__0438
	jmp	#LR__0439
LR__0434
	call	#_fatfs_cc_select_0839
	cmp	result1, #0 wz
 if_ne	add	fp, #16
 if_ne	wrlong	#0, fp
 if_ne	sub	fp, #16
	jmp	#LR__0440
LR__0435
	mov	arg01, #9
	mov	arg02, #0
	call	#_fatfs_cc_send_cmd_0849
	mov	local03, result1
	zerox	local03, #7 wz
 if_ne	jmp	#LR__0440
	add	fp, #24
	mov	arg01, fp
	sub	fp, #24
	mov	arg02, #16
	call	#_fatfs_cc_rcvr_datablock_0843
	cmp	result1, #0 wz
 if_e	jmp	#LR__0440
	add	fp, #24
	rdbyte	local01, fp
	sub	fp, #24
	shr	local01, #6
	cmp	local01, #1 wz
 if_ne	jmp	#LR__0436
	add	fp, #33
	rdbyte	local03, fp
	sub	fp, #1
	rdbyte	local02, fp
	getword	local02, local02, #0
	shl	local02, #8
	add	local03, local02
	sub	fp, #1
	rdbyte	local02, fp
	and	local02, #63
	shl	local02, #16
	add	local03, local02
	add	local03, #1
	add	fp, #9
	wrlong	local03, fp
	sub	fp, #28
	rdlong	local01, fp
	sub	fp, #12
	shl	local03, #10
	wrlong	local03, local01
	jmp	#LR__0437
LR__0436
	add	fp, #29
	rdbyte	local03, fp
	getnib	local03, local03, #0
	add	fp, #5
	rdbyte	local02, fp
	and	local02, #128
	sar	local02, #7
	add	local03, local02
	sub	fp, #1
	rdbyte	local02, fp
	and	local02, #3
	shl	local02, #1
	add	local03, local02
	add	local03, #2
	sub	fp, #13
	wrbyte	local03, fp
	add	fp, #12
	rdbyte	local03, fp
	shr	local03, #6
	sub	fp, #1
	rdbyte	local02, fp
	getword	local02, local02, #0
	shl	local02, #2
	add	local03, local02
	sub	fp, #1
	rdbyte	local02, fp
	and	local02, #3
	getword	local02, local02, #0
	shl	local02, #10
	add	local03, local02
	add	local03, #1
	add	fp, #10
	wrlong	local03, fp
	sub	fp, #28
	rdlong	local01, fp
	add	fp, #8
	rdbyte	local02, fp
	sub	fp, #20
	sub	local02, #9
	shl	local03, local02
	wrlong	local03, local01
LR__0437
	add	fp, #16
	wrlong	#0, fp
	sub	fp, #16
	jmp	#LR__0440
LR__0438
	add	fp, #12
	rdlong	local03, fp
	wrlong	#128, local03
	add	fp, #4
	wrlong	#0, fp
	sub	fp, #16
	jmp	#LR__0440
LR__0439
	mov	local04, #4
	add	fp, #16
	wrlong	#4, fp
	sub	fp, #16
LR__0440
	call	#_fatfs_cc_deselect_0835
	add	fp, #16
	rdlong	result1, fp
	sub	fp, #16
LR__0441
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_disk_ioctl_ret
	ret

_fatfs_cc_disk_setpins
	cmp	arg01, #0 wz
 if_ne	neg	result1, #1
 if_ne	jmp	#_fatfs_cc_disk_setpins_ret
	add	objptr, #8
	wrlong	arg02, objptr
	add	objptr, #4
	wrlong	arg03, objptr
	add	objptr, #4
	wrlong	arg04, objptr
	add	objptr, #4
	wrlong	arg05, objptr
	sub	objptr, #20
	mov	result1, #0
_fatfs_cc_disk_setpins_ret
	ret

_fatfs_cc_sync_window
	mov	COUNT_, #3
	call	#pushregs_
	mov	local01, arg01
	mov	local02, #0
	add	local01, #3
	rdbyte	local03, local01 wz
	sub	local01, #3
 if_e	jmp	#LR__0444
	add	local01, #1
	rdbyte	arg01, local01
	add	local01, #47
	mov	arg02, local01
	sub	local01, #4
	rdlong	arg03, local01
	sub	local01, #44
	mov	arg04, #1
	call	#_fatfs_cc_disk_write
	cmp	result1, #0 wz
 if_ne	jmp	#LR__0442
	add	local01, #3
	wrbyte	#0, local01
	add	local01, #41
	rdlong	local03, local01
	sub	local01, #12
	rdlong	result1, local01
	sub	local03, result1
	sub	local01, #8
	rdlong	arg04, local01
	sub	local01, #24
	cmp	local03, arg04 wc
 if_ae	jmp	#LR__0443
	add	local01, #2
	rdbyte	local03, local01
	sub	local01, #2
	cmp	local03, #2 wz
 if_ne	jmp	#LR__0443
	add	local01, #1
	rdbyte	arg01, local01
	add	local01, #47
	mov	arg02, local01
	sub	local01, #4
	rdlong	arg03, local01
	sub	local01, #20
	rdlong	local03, local01
	add	arg03, local03
	mov	arg04, #1
	call	#_fatfs_cc_disk_write
	jmp	#LR__0443
LR__0442
	mov	local02, #1
LR__0443
LR__0444
	mov	result1, local02
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_sync_window_ret
	ret

_fatfs_cc_move_window
	mov	COUNT_, #3
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, #0
	add	local01, #44
	rdlong	arg01, local01
	sub	local01, #44
	cmp	local02, arg01 wz
 if_e	jmp	#LR__0446
	mov	arg01, local01
	call	#_fatfs_cc_sync_window
	mov	local03, result1 wz
 if_ne	jmp	#LR__0445
	add	local01, #1
	rdbyte	arg01, local01
	add	local01, #47
	mov	arg02, local01
	mov	arg03, local02
	mov	arg04, #1
	call	#_fatfs_cc_disk_read
	cmp	result1, #0 wz
 if_ne	neg	local02, #1
 if_ne	mov	local03, #1
	sub	local01, #4
	wrlong	local02, local01
LR__0445
LR__0446
	mov	result1, local03
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_move_window_ret
	ret

_fatfs_cc_sync_fs
	mov	COUNT_, #7
	call	#pushregs_
	mov	local01, arg01
	call	#_fatfs_cc_sync_window
	mov	local02, result1 wz
 if_ne	jmp	#LR__0448
	rdbyte	arg03, local01
	cmp	arg03, #3 wz
 if_ne	jmp	#LR__0447
	add	local01, #4
	rdbyte	arg03, local01
	sub	local01, #4
	cmp	arg03, #1 wz
 if_ne	jmp	#LR__0447
	add	local01, #48
	mov	arg01, local01
	mov	arg02, #0
	decod	arg03, #9
	mov	local03, arg01
	call	#\builtin_bytefill_
	mov	arg01, local01
	add	arg01, #510
	wrword	##43605, arg01
	wrlong	##1096897106, local01
	mov	arg01, local01
	add	arg01, #484
	wrlong	##1631679090, arg01
	mov	arg01, local01
	add	arg01, #488
	sub	local01, #32
	rdlong	arg02, local01
	wrlong	arg02, arg01
	add	local01, #32
	mov	arg01, local01
	add	arg01, #492
	sub	local01, #36
	rdlong	arg02, local01
	wrlong	arg02, arg01
	add	local01, #16
	rdlong	local04, local01
	add	local04, #1
	add	local01, #16
	wrlong	local04, local01
	sub	local01, #43
	rdbyte	arg01, local01
	add	local01, #47
	mov	local05, local01
	mov	local06, #1
	mov	arg02, local05
	mov	arg03, local04
	mov	arg04, #1
	call	#_fatfs_cc_disk_write
	mov	local07, #0
	sub	local01, #44
	wrbyte	#0, local01
	sub	local01, #4
LR__0447
	add	local01, #1
	rdbyte	arg01, local01
	mov	arg02, #0
	mov	arg03, #0
	call	#_fatfs_cc_disk_ioctl
	cmp	result1, #0 wz
 if_ne	mov	local02, #1
LR__0448
	mov	result1, local02
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_sync_fs_ret
	ret

_fatfs_cc_clst2sect
	sub	arg02, #2
	add	arg01, #20
	rdlong	_var01, arg01
	sub	arg01, #20
	sub	_var01, #2
	cmp	arg02, _var01 wc
 if_ae	mov	result1, #0
 if_ae	jmp	#_fatfs_cc_clst2sect_ret
	add	arg01, #10
	rdword	_var01, arg01
	qmul	_var01, arg02
	add	arg01, #30
	rdlong	result1, arg01
	getqx	_var01
	add	result1, _var01
_fatfs_cc_clst2sect_ret
	ret

_fatfs_cc_get_fat
	mov	COUNT_, #9
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	rdlong	local03, local01
	cmp	local02, #2 wc
 if_b	jmp	#LR__0449
	add	local03, #20
	rdlong	local04, local03
	sub	local03, #20
	mov	local05, local04
	cmp	local02, local05 wc
 if_b	jmp	#LR__0450
LR__0449
	mov	local06, #1
	jmp	#LR__0457
LR__0450
	neg	local06, #1
	rdbyte	local07, local03
	sub	local07, #1
	fle	local07, #3
	jmprel	local07
LR__0451
	jmp	#LR__0452
	jmp	#LR__0453
	jmp	#LR__0454
	jmp	#LR__0455
LR__0452
	mov	local07, local02
	mov	local04, local02
	shr	local04, #1
	add	local07, local04
	mov	arg01, local03
	mov	local04, local07
	shr	local04, #9
	add	local03, #32
	rdlong	arg02, local03
	sub	local03, #32
	add	arg02, local04
	call	#_fatfs_cc_move_window
	cmp	result1, #0 wz
 if_ne	jmp	#LR__0456
	mov	local04, local07
	and	local04, #511
	add	local03, #48
	add	local04, local03
	rdbyte	local08, local04
	sub	local03, #48
	mov	arg01, local03
	add	local07, #1
	mov	local04, local07
	shr	local04, #9
	add	local03, #32
	rdlong	arg02, local03
	sub	local03, #32
	add	arg02, local04
	call	#_fatfs_cc_move_window
	cmp	result1, #0 wz
 if_ne	jmp	#LR__0456
	and	local07, #511
	add	local03, #48
	add	local07, local03
	rdbyte	local04, local07
	shl	local04, #8
	or	local08, local04
	test	local02, #1 wz
 if_ne	shr	local08, #4
 if_ne	mov	local05, local08
 if_e	zerox	local08, #11
 if_e	mov	local05, local08
	mov	local06, local05
	jmp	#LR__0456
LR__0453
	mov	arg01, local03
	mov	local08, local02
	shr	local08, #8
	add	local03, #32
	rdlong	arg02, local03
	sub	local03, #32
	add	arg02, local08
	call	#_fatfs_cc_move_window
	cmp	result1, #0 wz
 if_ne	jmp	#LR__0456
	add	local03, #48
	shl	local02, #1
	and	local02, #511
	add	local03, local02
	rdword	result1, local03
	getword	local06, result1, #0
	jmp	#LR__0456
LR__0454
	mov	arg01, local03
	mov	local09, local02
	shr	local09, #7
	add	local03, #32
	rdlong	arg02, local03
	sub	local03, #32
	add	arg02, local09
	call	#_fatfs_cc_move_window
	cmp	result1, #0 wz
 if_ne	jmp	#LR__0456
	add	local03, #48
	mov	arg01, local03
	shl	local02, #2
	and	local02, #511
	add	arg01, local02
	rdlong	local06, arg01
	bitl	local06, #124
	jmp	#LR__0456
LR__0455
	mov	local06, #1
LR__0456
LR__0457
	mov	result1, local06
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_get_fat_ret
	ret

_fatfs_cc_put_fat
	mov	COUNT_, #15
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	mov	local04, #2
	cmp	local02, #2 wc
 if_b	jmp	#LR__0466
	add	local01, #20
	rdlong	local05, local01
	sub	local01, #20
	mov	local06, local05
	cmp	local02, local06 wc
 if_ae	jmp	#LR__0466
	rdbyte	local07, local01
	sub	local07, #1
	fle	local07, #3
	jmprel	local07
LR__0458
	jmp	#LR__0459
	jmp	#LR__0463
	jmp	#LR__0464
	jmp	#LR__0465
LR__0459
	mov	local08, local02
	mov	local05, local02
	shr	local05, #1
	add	local08, local05
	mov	arg01, local01
	mov	local09, local08
	shr	local09, #9
	add	local01, #32
	rdlong	local10, local01
	sub	local01, #32
	mov	local11, local10
	add	local11, local09
	mov	local05, local11
	mov	arg02, local05
	call	#_fatfs_cc_move_window
	mov	local06, result1
	mov	local04, local06 wz
 if_ne	jmp	#LR__0465
	add	local01, #48
	mov	local12, local01
	mov	local13, local08
	and	local13, #511
	add	local12, local13
	test	local02, #1 wz
	sub	local01, #48
	add	local08, #1
 if_e	jmp	#LR__0460
	rdbyte	local06, local12
	getnib	local06, local06, #0
	getbyte	local09, local03, #0
	shl	local09, #4
	or	local06, local09
	jmp	#LR__0461
LR__0460
	mov	local06, local03
LR__0461
	wrbyte	local06, local12
	add	local01, #3
	wrbyte	#1, local01
	sub	local01, #3
	mov	arg01, local01
	mov	local09, local08
	shr	local09, #9
	add	local01, #32
	rdlong	local10, local01
	sub	local01, #32
	mov	local11, local10
	add	local11, local09
	mov	local05, local11
	mov	arg02, local05
	call	#_fatfs_cc_move_window
	mov	local06, result1
	mov	local04, local06 wz
 if_ne	jmp	#LR__0465
	add	local01, #48
	mov	local12, local01
	mov	local11, local08
	and	local11, #511
	mov	local09, local11
	add	local12, local11
	mov	local05, local02
	and	local05, #1 wz
	sub	local01, #48
 if_ne	mov	local11, local03
 if_ne	shr	local11, #4
 if_ne	mov	local06, local11
 if_ne	jmp	#LR__0462
	rdbyte	local09, local12
	and	local09, #240
	getbyte	local10, local03, #1
	getnib	local10, local10, #0
	or	local09, local10
	mov	local06, local09
LR__0462
	wrbyte	local06, local12
	mov	local06, #1
	add	local01, #3
	wrbyte	#1, local01
	sub	local01, #3
	jmp	#LR__0465
LR__0463
	mov	arg01, local01
	mov	local09, local02
	shr	local09, #8
	add	local01, #32
	rdlong	local10, local01
	sub	local01, #32
	mov	local11, local10
	add	local11, local09
	mov	local05, local11
	mov	arg02, local05
	call	#_fatfs_cc_move_window
	mov	local06, result1
	mov	local04, local06 wz
 if_ne	jmp	#LR__0465
	add	local01, #48
	mov	local11, local01
	mov	local09, local02
	shl	local09, #1
	mov	local10, local09
	and	local10, #511
	mov	local13, local10
	mov	arg01, local11
	add	arg01, local13
	mov	local05, local03
	mov	arg02, local05
	wrword	arg02, arg01
	mov	local06, #1
	sub	local01, #45
	wrbyte	#1, local01
	sub	local01, #3
	jmp	#LR__0465
LR__0464
	mov	arg01, local01
	mov	local09, local02
	shr	local09, #7
	add	local01, #32
	rdlong	local10, local01
	sub	local01, #32
	mov	local11, local10
	add	local11, local09
	mov	local05, local11
	mov	arg02, local05
	call	#_fatfs_cc_move_window
	mov	local06, result1
	mov	local04, local06 wz
 if_ne	jmp	#LR__0465
	bitl	local03, #124
	add	local01, #48
	mov	arg01, local01
	mov	local14, local02
	shl	local14, #2
	and	local14, #511
	mov	local15, local14
	add	arg01, local14
	rdlong	result1, arg01
	and	result1, ##-268435456
	or	local03, result1
	mov	local11, local01
	mov	local09, local02
	shl	local09, #2
	mov	local10, local09
	and	local10, #511
	mov	local13, local10
	mov	arg01, local11
	add	arg01, local13
	mov	local05, local03
	mov	arg02, local05
	wrlong	arg02, arg01
	mov	local06, #1
	sub	local01, #45
	wrbyte	#1, local01
	sub	local01, #3
LR__0465
LR__0466
	mov	result1, local04
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_put_fat_ret
	ret

_fatfs_cc_remove_chain
	mov	COUNT_, #6
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	rdlong	local04, local01
	cmp	local02, #2 wc
 if_b	jmp	#LR__0467
	add	local04, #20
	rdlong	result1, local04
	sub	local04, #20
	cmp	local02, result1 wc
 if_b	jmp	#LR__0468
LR__0467
	mov	result1, #2
	jmp	#LR__0473
LR__0468
	cmp	local03, #0 wz
 if_e	jmp	#LR__0469
	mov	arg01, local04
	mov	arg02, local03
	neg	arg03, #1
	call	#_fatfs_cc_put_fat
	mov	local05, result1 wz
 if_ne	mov	result1, local05
 if_ne	jmp	#LR__0473
LR__0469
LR__0470
	mov	arg02, local02
	mov	arg01, local01
	call	#_fatfs_cc_get_fat
	mov	local06, result1 wz
 if_e	jmp	#LR__0472
	cmp	local06, #1 wz
 if_e	mov	result1, #2
 if_e	jmp	#LR__0473
	cmp	local06, ##-1 wz
 if_e	mov	result1, #1
 if_e	jmp	#LR__0473
	mov	arg02, local02
	mov	arg01, local04
	mov	arg03, #0
	call	#_fatfs_cc_put_fat
	mov	local05, result1 wz
 if_ne	mov	result1, local05
 if_ne	jmp	#LR__0473
	add	local04, #20
	rdlong	local05, local04
	sub	local05, #2
	sub	local04, #4
	rdlong	local03, local04
	sub	local04, #16
	cmp	local03, local05 wc
 if_ae	jmp	#LR__0471
	add	local04, #16
	rdlong	local05, local04
	add	local05, #1
	wrlong	local05, local04
	sub	local04, #12
	rdbyte	local05, local04
	or	local05, #1
	wrbyte	local05, local04
	sub	local04, #4
LR__0471
	mov	local02, local06
	add	local04, #20
	rdlong	local05, local04
	sub	local04, #20
	cmp	local02, local05 wc
 if_b	jmp	#LR__0470
LR__0472
	mov	result1, #0
LR__0473
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_remove_chain_ret
	ret

_fatfs_cc_create_chain
	mov	COUNT_, #10
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02 wz
	rdlong	local03, local01
 if_ne	jmp	#LR__0474
	add	local03, #12
	rdlong	local04, local03 wz
	sub	local03, #12
 if_ne	add	local03, #20
 if_ne	rdlong	local05, local03
 if_ne	sub	local03, #20
 if_ne	cmp	local04, local05 wc
 if_c_and_nz	jmp	#LR__0475
	mov	local04, #1
	jmp	#LR__0475
LR__0474
	mov	arg02, local02
	mov	arg01, local01
	call	#_fatfs_cc_get_fat
	mov	local06, result1
	cmp	local06, #2 wc
 if_b	mov	result1, #1
 if_b	jmp	#LR__0485
	cmp	local06, ##-1 wz
 if_e	mov	result1, local06
 if_e	jmp	#LR__0485
	add	local03, #20
	rdlong	local05, local03
	sub	local03, #20
	cmp	local06, local05 wc
 if_b	mov	result1, local06
 if_b	jmp	#LR__0485
	mov	local04, local02
LR__0475
	add	local03, #16
	rdlong	local05, local03 wz
	sub	local03, #16
 if_e	mov	result1, #0
 if_e	jmp	#LR__0485
	mov	local07, #0
	cmp	local04, local02 wz
 if_ne	jmp	#LR__0478
	mov	local07, local04
	add	local07, #1
	add	local03, #20
	rdlong	local05, local03
	sub	local03, #20
	cmp	local07, local05 wc
 if_ae	mov	local07, #2
	mov	arg02, local07
	mov	arg01, local01
	call	#_fatfs_cc_get_fat
	mov	local06, result1
	cmp	local06, #1 wz
 if_ne	cmp	local06, ##-1 wz
 if_e	mov	result1, local06
 if_e	jmp	#LR__0485
	cmp	local06, #0 wz
 if_e	jmp	#LR__0477
	add	local03, #12
	rdlong	local06, local03
	sub	local03, #12
	cmp	local06, #2 wc
 if_b	jmp	#LR__0476
	add	local03, #20
	rdlong	local05, local03
	sub	local03, #20
	cmp	local06, local05 wc
 if_b	mov	local04, local06
LR__0476
	mov	local07, #0
LR__0477
LR__0478
	cmp	local07, #0 wz
 if_ne	jmp	#LR__0481
	mov	local07, local04
LR__0479
	add	local07, #1
	add	local03, #20
	rdlong	local05, local03
	sub	local03, #20
	cmp	local07, local05 wc
 if_ae	mov	local07, #2
 if_ae	cmp	local07, local04 wcz
 if_a	mov	result1, #0
 if_a	jmp	#LR__0485
	mov	arg02, local07
	mov	arg01, local01
	call	#_fatfs_cc_get_fat
	mov	local06, result1 wz
 if_e	jmp	#LR__0480
	cmp	local06, #1 wz
 if_ne	cmp	local06, ##-1 wz
 if_e	mov	result1, local06
 if_e	jmp	#LR__0485
	cmp	local07, local04 wz
 if_e	mov	result1, #0
 if_e	jmp	#LR__0485
	jmp	#LR__0479
LR__0480
LR__0481
	mov	arg01, local03
	mov	arg02, local07
	neg	arg03, #1
	call	#_fatfs_cc_put_fat
	mov	local08, result1 wz
 if_ne	jmp	#LR__0482
	cmp	local02, #0 wz
 if_e	jmp	#LR__0482
	mov	local09, local02
	mov	local10, local07
	mov	arg01, local03
	mov	arg02, local09
	mov	arg03, local10
	call	#_fatfs_cc_put_fat
	mov	local05, result1
	mov	local08, local05
LR__0482
	cmp	local08, #0 wz
 if_ne	jmp	#LR__0483
	add	local03, #12
	wrlong	local07, local03
	add	local03, #8
	rdlong	local05, local03
	sub	local05, #2
	sub	local03, #4
	rdlong	local10, local03
	sub	local03, #16
	cmp	local10, local05 wcz
 if_be	add	local03, #16
 if_be	rdlong	local10, local03
 if_be	sub	local10, #1
 if_be	wrlong	local10, local03
 if_be	sub	local03, #16
	add	local03, #4
	rdbyte	local05, local03
	or	local05, #1
	wrbyte	local05, local03
	jmp	#LR__0484
LR__0483
	cmp	local08, #1 wz
	negz	local07, #1
LR__0484
	mov	result1, local07
LR__0485
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_create_chain_ret
	ret

_fatfs_cc_dir_clear
	mov	COUNT_, #6
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	arg01, local01
	call	#_fatfs_cc_sync_window
	cmp	result1, #0 wz
 if_ne	mov	result1, #1
 if_ne	jmp	#LR__0488
	mov	arg01, local01
	mov	arg02, local02
	call	#_fatfs_cc_clst2sect
	mov	local03, result1
	add	local01, #44
	wrlong	local03, local01
	add	local01, #4
	mov	arg01, local01
	mov	arg02, #0
	decod	arg03, #9
	call	#\builtin_bytefill_
	mov	local04, local01
	mov	local05, #0
	sub	local01, #48
LR__0486
	add	local01, #10
	rdword	local06, local01
	sub	local01, #10
	cmp	local05, local06 wc
 if_ae	jmp	#LR__0487
	add	local01, #1
	rdbyte	arg01, local01
	sub	local01, #1
	mov	arg02, local04
	mov	arg03, local03
	add	arg03, local05
	mov	arg04, #1
	call	#_fatfs_cc_disk_write
	cmp	result1, #0 wz
 if_e	add	local05, #1
 if_e	jmp	#LR__0486
LR__0487
	add	local01, #10
	rdword	local04, local01
	cmp	local05, local04 wz
 if_e	mov	local06, #0
 if_ne	mov	local06, #1
	mov	result1, local06
LR__0488
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_dir_clear_ret
	ret

_fatfs_cc_dir_sdi
	mov	COUNT_, #6
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	rdlong	local03, local01
	cmp	local02, ##2097152 wc
 if_b	mov	local04, local02
 if_b	test	local04, #31 wz
 if_nc_or_nz	mov	result1, #2
 if_nc_or_nz	jmp	#LR__0496
	add	local01, #16
	wrlong	local02, local01
	sub	local01, #8
	rdlong	local05, local01 wz
	sub	local01, #8
 if_ne	jmp	#LR__0489
	rdbyte	local04, local03
	cmp	local04, #3 wc
 if_ae	add	local03, #36
 if_ae	rdlong	local04, local03
 if_ae	sub	local03, #36
 if_ae	mov	local05, local04
LR__0489
	cmp	local05, #0 wz
 if_ne	jmp	#LR__0490
	mov	local04, local02
	shr	local04, #5
	add	local03, #8
	rdword	arg02, local03
	sub	local03, #8
	cmp	local04, arg02 wc
 if_ae	mov	result1, #2
 if_ae	jmp	#LR__0496
	add	local03, #36
	rdlong	local04, local03
	sub	local03, #36
	add	local01, #24
	wrlong	local04, local01
	sub	local01, #24
	jmp	#LR__0495
LR__0490
	add	local03, #10
	rdword	local06, local03
	sub	local03, #10
	shl	local06, #9
LR__0491
	cmp	local02, local06 wc
 if_b	jmp	#LR__0494
	mov	arg01, local01
	mov	arg02, local05
	call	#_fatfs_cc_get_fat
	mov	local05, result1
	cmp	local05, ##-1 wz
 if_e	mov	result1, #1
 if_e	jmp	#LR__0496
	cmp	local05, #2 wc
 if_b	jmp	#LR__0492
	add	local03, #20
	rdlong	local04, local03
	sub	local03, #20
	cmp	local05, local04 wc
 if_b	jmp	#LR__0493
LR__0492
	mov	result1, #2
	jmp	#LR__0496
LR__0493
	sub	local02, local06
	jmp	#LR__0491
LR__0494
	mov	arg01, local03
	mov	arg02, local05
	call	#_fatfs_cc_clst2sect
	add	local01, #24
	wrlong	result1, local01
	sub	local01, #24
LR__0495
	add	local01, #20
	wrlong	local05, local01
	add	local01, #4
	rdlong	local04, local01 wz
	sub	local01, #24
 if_e	mov	result1, #2
 if_e	jmp	#LR__0496
	mov	result1, local02
	shr	result1, #9
	add	local01, #24
	rdlong	local04, local01
	add	local04, result1
	wrlong	local04, local01
	add	local03, #48
	mov	local04, local03
	and	local02, #511
	add	local04, local02
	add	local01, #4
	wrlong	local04, local01
	mov	result1, #0
LR__0496
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_dir_sdi_ret
	ret

_fatfs_cc_dir_next
	mov	COUNT_, #5
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	rdlong	local03, local01
	add	local01, #16
	rdlong	local04, local01
	sub	local01, #16
	add	local04, #32
	cmp	local04, ##2097152 wc
 if_ae	add	local01, #24
 if_ae	wrlong	#0, local01
 if_ae	sub	local01, #24
	add	local01, #24
	rdlong	arg02, local01 wz
	sub	local01, #24
 if_e	mov	result1, #4
 if_e	jmp	#LR__0502
	test	local04, #511 wz
 if_ne	jmp	#LR__0501
	add	local01, #24
	rdlong	arg02, local01
	add	arg02, #1
	wrlong	arg02, local01
	sub	local01, #4
	rdlong	arg02, local01 wz
	sub	local01, #20
 if_ne	jmp	#LR__0497
	mov	arg02, local04
	shr	arg02, #5
	add	local03, #8
	rdword	local02, local03
	sub	local03, #8
	cmp	arg02, local02 wc
 if_ae	add	local01, #24
 if_ae	wrlong	#0, local01
 if_ae	mov	result1, #4
 if_ae	jmp	#LR__0502
	jmp	#LR__0500
LR__0497
	mov	arg01, local04
	shr	arg01, #9
	add	local03, #10
	rdword	arg02, local03
	sub	local03, #10
	sub	arg02, #1
	test	arg01, arg02 wz
 if_ne	jmp	#LR__0499
	mov	arg01, local01
	add	local01, #20
	rdlong	arg02, local01
	sub	local01, #20
	call	#_fatfs_cc_get_fat
	mov	local05, result1
	cmp	local05, #2 wc
 if_b	mov	result1, #2
 if_b	jmp	#LR__0502
	cmp	local05, ##-1 wz
 if_e	mov	result1, #1
 if_e	jmp	#LR__0502
	add	local03, #20
	rdlong	arg02, local03
	sub	local03, #20
	cmp	local05, arg02 wc
 if_b	jmp	#LR__0498
	cmp	local02, #0 wz
 if_e	add	local01, #24
 if_e	wrlong	#0, local01
 if_e	mov	result1, #4
 if_e	jmp	#LR__0502
	mov	arg01, local01
	add	local01, #20
	rdlong	arg02, local01
	sub	local01, #20
	call	#_fatfs_cc_create_chain
	mov	local05, result1 wz
 if_e	mov	result1, #7
 if_e	jmp	#LR__0502
	cmp	local05, #1 wz
 if_e	mov	result1, #2
 if_e	jmp	#LR__0502
	cmp	local05, ##-1 wz
 if_e	mov	result1, #1
 if_e	jmp	#LR__0502
	mov	arg02, local05
	mov	arg01, local03
	call	#_fatfs_cc_dir_clear
	cmp	result1, #0 wz
 if_ne	mov	result1, #1
 if_ne	jmp	#LR__0502
LR__0498
	add	local01, #20
	wrlong	local05, local01
	mov	arg01, local03
	mov	arg02, local05
	call	#_fatfs_cc_clst2sect
	add	local01, #4
	wrlong	result1, local01
	sub	local01, #24
LR__0499
LR__0500
LR__0501
	add	local01, #16
	wrlong	local04, local01
	add	local03, #48
	and	local04, #511
	add	local03, local04
	add	local01, #12
	wrlong	local03, local01
	mov	result1, #0
LR__0502
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_dir_next_ret
	ret

_fatfs_cc_dir_alloc
	mov	COUNT_, #11
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	rdlong	local03, local01
	mov	arg01, local01
	mov	arg02, #0
	call	#_fatfs_cc_dir_sdi
	mov	local04, result1 wz
 if_ne	jmp	#LR__0508
	mov	local05, #0
LR__0503
	add	local01, #24
	rdlong	arg02, local01
	sub	local01, #24
	mov	arg01, local03
	call	#_fatfs_cc_move_window
	mov	local04, result1 wz
 if_ne	jmp	#LR__0507
	add	local01, #28
	rdlong	local06, local01
	sub	local01, #28
	rdbyte	local07, local06
	cmp	local07, #229 wz
 if_e	jmp	#LR__0504
	add	local01, #28
	rdlong	local08, local01
	sub	local01, #28
	mov	local09, local08
	rdbyte	local10, local09 wz
 if_ne	jmp	#LR__0505
LR__0504
	add	local05, #1
	cmp	local05, local02 wz
 if_e	jmp	#LR__0507
	jmp	#LR__0506
LR__0505
	mov	local05, #0
LR__0506
	mov	local11, #1
	mov	arg01, local01
	mov	arg02, #1
	call	#_fatfs_cc_dir_next
	mov	local07, result1
	mov	local04, local07 wz
 if_e	jmp	#LR__0503
LR__0507
LR__0508
	cmp	local04, #4 wz
 if_e	mov	local04, #7
	mov	result1, local04
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_dir_alloc_ret
	ret

_fatfs_cc_ld_clust
	mov	_var01, arg01
	mov	arg01, arg02
	add	arg01, #26
	rdword	result1, arg01
	getword	arg01, result1, #0
	rdbyte	_var01, _var01
	cmp	_var01, #3 wz
 if_e	add	arg02, #20
 if_e	rdword	result1, arg02
 if_e	shl	result1, #16
 if_e	or	arg01, result1
	mov	result1, arg01
_fatfs_cc_ld_clust_ret
	ret

_fatfs_cc_st_clust
	mov	_var01, arg01
	mov	arg01, arg02
	add	arg01, #26
	wrword	arg03, arg01
	rdbyte	_var01, _var01
	cmp	_var01, #3 wz
 if_e	add	arg02, #20
 if_e	shr	arg03, #16
 if_e	wrword	arg03, arg02
_fatfs_cc_st_clust_ret
	ret

_fatfs_cc_dir_read
	mov	COUNT_, #11
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, #4
	rdlong	local04, local01
LR__0509
	add	local01, #24
	rdlong	result1, local01 wz
	sub	local01, #24
 if_e	jmp	#LR__0511
	add	local01, #24
	rdlong	arg02, local01
	sub	local01, #24
	mov	arg01, local04
	call	#_fatfs_cc_move_window
	mov	local03, result1 wz
 if_ne	jmp	#LR__0511
	add	local01, #28
	rdlong	local05, local01
	sub	local01, #28
	rdbyte	local06, local05
	mov	local05, local06
	zerox	local05, #7 wz
 if_e	mov	local03, #4
 if_e	jmp	#LR__0511
	add	local01, #28
	rdlong	local07, local01
	add	local07, #11
	rdbyte	local08, local07
	and	local08, #63
	sub	local01, #22
	wrbyte	local08, local01
	sub	local01, #6
	getbyte	local05, local06, #0
	cmp	local05, #229 wz
 if_e	jmp	#LR__0510
	getbyte	local07, local06, #0
	cmp	local07, #46 wz
 if_e	jmp	#LR__0510
	getbyte	local09, local08, #0
	cmp	local09, #15 wz
 if_e	jmp	#LR__0510
	mov	local10, #0
	getbyte	local11, local08, #0
	andn	local11, #32
	cmp	local11, #8 wz
 if_e	mov	local10, #1
	cmp	local10, local02 wz
 if_e	jmp	#LR__0511
LR__0510
	mov	arg01, local01
	mov	arg02, #0
	call	#_fatfs_cc_dir_next
	mov	local03, result1 wz
 if_e	jmp	#LR__0509
LR__0511
	cmp	local03, #0 wz
 if_ne	add	local01, #24
 if_ne	wrlong	#0, local01
	mov	result1, local03
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_dir_read_ret
	ret

_fatfs_cc_dir_find
	mov	COUNT_, #11
	call	#pushregs_
	mov	local01, arg01
	rdlong	local02, local01
	mov	arg01, local01
	mov	arg02, #0
	call	#_fatfs_cc_dir_sdi
	cmp	result1, #0 wz
 if_ne	jmp	#LR__0515
LR__0512
	add	local01, #24
	rdlong	arg02, local01
	sub	local01, #24
	mov	arg01, local02
	call	#_fatfs_cc_move_window
	mov	local03, result1 wz
 if_ne	jmp	#LR__0514
	add	local01, #28
	rdlong	result1, local01
	sub	local01, #28
	rdbyte	local04, result1
	mov	result1, local04
	zerox	result1, #7 wz
 if_e	mov	local03, #4
 if_e	jmp	#LR__0514
	add	local01, #28
	rdlong	result1, local01
	add	result1, #11
	rdbyte	result1, result1
	and	result1, #63
	sub	local01, #22
	wrbyte	result1, local01
	add	local01, #22
	rdlong	local05, local01
	sub	local01, #28
	mov	arg02, local05
	add	arg02, #11
	rdbyte	local06, arg02
	getbyte	result1, local06, #0
	test	result1, #8 wz
 if_ne	jmp	#LR__0513
	add	local01, #28
	rdlong	arg01, local01
	add	local01, #4
	mov	local07, local01
	mov	local08, #11
	mov	arg02, local07
	mov	arg03, #11
	sub	local01, #32
	call	#_fatfs_cc_memcmp
	mov	local09, result1 wz
 if_e	jmp	#LR__0514
LR__0513
	mov	local10, #0
	mov	arg01, local01
	mov	arg02, #0
	call	#_fatfs_cc_dir_next
	mov	local11, result1
	mov	local03, local11 wz
 if_e	jmp	#LR__0512
LR__0514
	mov	result1, local03
LR__0515
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_dir_find_ret
	ret

_fatfs_cc_dir_register
	mov	COUNT_, #3
	call	#pushregs_
	mov	local01, arg01
	rdlong	local02, local01
	mov	arg01, local01
	mov	arg02, #1
	call	#_fatfs_cc_dir_alloc
	mov	local03, result1 wz
 if_ne	jmp	#LR__0517
	add	local01, #24
	rdlong	arg02, local01
	sub	local01, #24
	mov	arg01, local02
	call	#_fatfs_cc_move_window
	mov	local03, result1 wz
 if_ne	jmp	#LR__0516
	add	local01, #28
	rdlong	arg01, local01
	mov	arg02, #0
	mov	arg03, #32
	call	#\builtin_bytefill_
	rdlong	arg01, local01
	add	local01, #4
	mov	arg02, local01
	mov	arg03, #11
	call	#__system____builtin_memmove
	add	local02, #3
	wrbyte	#1, local02
LR__0516
LR__0517
	mov	result1, local03
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_dir_register_ret
	ret

_fatfs_cc_dir_remove
	mov	COUNT_, #2
	call	#pushregs_
	mov	local01, arg01
	rdlong	local02, local01
	add	local01, #24
	rdlong	arg02, local01
	sub	local01, #24
	mov	arg01, local02
	call	#_fatfs_cc_move_window
	cmps	result1, #0 wz
 if_e	add	local01, #28
 if_e	rdlong	local01, local01
 if_e	wrbyte	#229, local01
 if_e	add	local02, #3
 if_e	wrbyte	#1, local02
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_dir_remove_ret
	ret

_fatfs_cc_get_fileinfo
	mov	_var01, arg01
	mov	_var02, arg02
	add	_var02, #12
	wrbyte	#0, _var02
	sub	_var02, #12
	add	_var01, #24
	rdlong	_var03, _var01
	sub	_var01, #24
	mov	_var04, _var03 wz
 if_e	jmp	#LR__0521
	mov	_var05, #0
	mov	_var06, #0
LR__0518
	cmp	_var06, #11 wc
 if_ae	jmp	#LR__0520
	add	_var01, #28
	rdlong	_var04, _var01
	sub	_var01, #28
	mov	_var03, _var06
	add	_var03, _var04
	rdbyte	_var07, _var03
	getbyte	_var04, _var07, #0
	cmp	_var04, #32 wz
	add	_var06, #1
 if_e	jmp	#LR__0518
	getbyte	_var04, _var07, #0
	cmp	_var04, #5 wz
 if_e	mov	_var07, #229
	cmp	_var06, #9 wz
 if_ne	jmp	#LR__0519
	mov	_var04, _var05
	add	_var02, #12
	add	_var04, _var02
	wrbyte	#46, _var04
	add	_var05, #1
	sub	_var02, #12
LR__0519
	mov	_var04, _var05
	add	_var02, #12
	add	_var04, _var02
	wrbyte	_var07, _var04
	add	_var05, #1
	sub	_var02, #12
	jmp	#LR__0518
LR__0520
	add	_var02, #12
	add	_var05, _var02
	wrbyte	#0, _var05
	add	_var01, #28
	rdlong	_var03, _var01
	add	_var03, #11
	rdbyte	_var04, _var03
	and	_var04, #63
	sub	_var02, #4
	wrbyte	_var04, _var02
	sub	_var02, #8
	rdlong	arg01, _var01
	add	arg01, #28
	rdlong	result1, arg01
	wrlong	result1, _var02
	rdlong	arg01, _var01
	add	arg01, #22
	rdword	result1, arg01
	add	_var02, #6
	wrword	result1, _var02
	rdlong	arg01, _var01
	add	arg01, #24
	rdword	result1, arg01
	sub	_var02, #2
	wrword	result1, _var02
LR__0521
_fatfs_cc_get_fileinfo_ret
	ret

_fatfs_cc_create_name
	mov	COUNT_, #15
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	rdlong	local03, local02
	add	local01, #32
	mov	local04, local01
	mov	arg01, local04
	mov	arg02, #32
	mov	arg03, #11
	sub	local01, #32
	mov	local05, arg01
	call	#\builtin_bytefill_
	mov	result1, local05
	mov	local06, #0
	mov	local07, #0
	mov	local08, #8
LR__0522
	mov	local01, local07
	add	local01, local03
	rdbyte	local09, local01
	getbyte	local01, local09, #0
	cmp	local01, #33 wc
	add	local07, #1
 if_b	jmp	#LR__0530
	getbyte	local01, local09, #0
	cmp	local01, #47 wz
 if_ne	mov	local10, local09
 if_ne	getbyte	local10, local10, #0
 if_ne	cmp	local10, #92 wz
 if_ne	jmp	#LR__0524
LR__0523
	mov	local10, local07
	add	local10, local03
	rdbyte	local10, local10
	cmp	local10, #47 wz
 if_ne	mov	local11, local07
 if_ne	add	local11, local03
 if_ne	rdbyte	local12, local11
 if_ne	cmp	local12, #92 wz
 if_ne	jmp	#LR__0530
	add	local07, #1
	jmp	#LR__0523
LR__0524
	getbyte	local01, local09, #0
	cmp	local01, #46 wz
 if_ne	cmp	local06, local08 wc
 if_c_and_nz	jmp	#LR__0527
	cmp	local08, #11 wz
 if_e	jmp	#LR__0525
	getbyte	local09, local09, #0
	cmp	local09, #46 wz
 if_e	jmp	#LR__0526
LR__0525
	mov	result1, #6
	jmp	#LR__0531
LR__0526
	mov	local06, #8
	mov	local08, #11
	jmp	#LR__0522
LR__0527
	getbyte	local01, local09, #0
	cmp	local01, #128 wc
 if_ae	getbyte	local09, local09, #0
 if_ae	and	local09, #127
 if_ae	add	local09, ptr__fatfs_cc_dat__
 if_ae	rdbyte	local09, local09
	mov	arg01, local09
	zerox	arg01, #7 wz
 if_ne	mov	result1, #0
 if_e	mov	result1, #0
	cmp	result1, #0 wz
 if_e	jmp	#LR__0528
	mov	local01, local07
	mov	local12, local03
	add	local01, local03
	rdbyte	local13, local01
	mov	arg01, local13
	add	local07, #1
	zerox	arg01, #7 wz
 if_ne	mov	result1, #0
 if_e	mov	result1, #0
	cmps	result1, #0 wz
 if_ne	mov	local10, local08
 if_ne	sub	local10, #1
 if_ne	cmp	local06, local10 wc
 if_nc_or_z	mov	result1, #6
 if_nc_or_z	jmp	#LR__0531
	mov	local01, local06
	add	local01, local04
	wrbyte	local09, local01
	add	local06, #1
	mov	local09, local06
	add	local09, local04
	wrbyte	local13, local09
	add	local06, #1
	jmp	#LR__0522
LR__0528
	mov	arg01, ##@LR__1255
	getbyte	arg02, local09, #0
	call	#_fatfs_cc_strchr
	cmp	result1, #0 wz
 if_ne	mov	result1, #6
 if_ne	jmp	#LR__0531
	getbyte	local14, local09, #0
	cmp	local14, #97 wc
 if_b	jmp	#LR__0529
	getbyte	local10, local09, #0
	cmp	local10, #123 wc
 if_b	mov	local14, local09
 if_b	getbyte	local14, local14, #0
 if_b	sub	local14, #32
 if_b	mov	local09, local14
LR__0529
	mov	local15, local06
	add	local15, local04
	wrbyte	local09, local15
	add	local06, #1
	jmp	#LR__0522
LR__0530
	mov	local15, local07
	add	local15, local03
	wrlong	local15, local02
	cmp	local06, #0 wz
 if_e	mov	result1, #6
 if_e	jmp	#LR__0531
	rdbyte	local14, local04
	cmp	local14, #229 wz
 if_e	wrbyte	#5, local04
	getbyte	local10, local09, #0
	cmp	local10, #33 wc
 if_ae	add	local07, local03
 if_ae	rdbyte	local15, local07
 if_ae	cmp	local15, #33 wc
 if_b	mov	local14, #4
 if_ae	mov	local14, #0
	add	local04, #11
	wrbyte	local14, local04
	mov	result1, #0
LR__0531
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_create_name_ret
	ret

_fatfs_cc_follow_path
	mov	COUNT_, #4
	call	#pushregs_
	add	ptra, #24
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	sub	fp, #4
	rdlong	result1, fp
	rdlong	local01, result1
	add	fp, #16
	wrlong	local01, fp
	sub	fp, #20
	loc	pa,	#(@LR__0534-@LR__0532)
	call	#FCACHE_LOAD_
LR__0532
	add	fp, #8
	rdlong	local01, fp
	sub	fp, #8
	rdbyte	local01, local01
	cmp	local01, #47 wz
 if_e	jmp	#LR__0533
	add	fp, #8
	rdlong	local01, fp
	sub	fp, #8
	rdbyte	local01, local01
	cmp	local01, #92 wz
 if_ne	jmp	#LR__0535
LR__0533
	add	fp, #8
	rdlong	local01, fp
	add	local01, #1
	wrlong	local01, fp
	sub	fp, #8
	jmp	#LR__0532
LR__0534
LR__0535
	add	fp, #4
	rdlong	local01, fp
	add	local01, #8
	wrlong	#0, local01
	add	fp, #4
	rdlong	local01, fp
	sub	fp, #8
	rdbyte	local01, local01
	cmp	local01, #32 wc
 if_ae	jmp	#LR__0536
	add	fp, #4
	rdlong	local01, fp
	add	local01, #43
	wrbyte	#128, local01
	rdlong	arg01, fp
	sub	fp, #4
	mov	arg02, #0
	call	#_fatfs_cc_dir_sdi
	add	fp, #12
	wrlong	result1, fp
	sub	fp, #12
	jmp	#LR__0540
LR__0536
LR__0537
	add	fp, #4
	rdlong	arg01, fp
	add	fp, #4
	mov	arg02, fp
	sub	fp, #8
	call	#_fatfs_cc_create_name
	add	fp, #12
	wrlong	result1, fp
	cmps	result1, #0 wz
	sub	fp, #12
 if_ne	jmp	#LR__0539
	add	fp, #4
	rdlong	arg01, fp
	sub	fp, #4
	call	#_fatfs_cc_dir_find
	add	fp, #12
	wrlong	result1, fp
	sub	fp, #8
	rdlong	local01, fp
	add	local01, #43
	rdbyte	local01, local01
	add	fp, #12
	wrbyte	local01, fp
	sub	fp, #4
	rdlong	local01, fp wz
	sub	fp, #12
 if_e	jmp	#LR__0538
	add	fp, #12
	rdlong	local01, fp
	sub	fp, #12
	cmp	local01, #4 wz
 if_ne	jmp	#LR__0539
	add	fp, #16
	rdbyte	local01, fp
	sub	fp, #16
	test	local01, #4 wz
 if_e	add	fp, #12
 if_e	wrlong	#5, fp
 if_e	sub	fp, #12
	jmp	#LR__0539
LR__0538
	add	fp, #16
	rdbyte	local01, fp
	sub	fp, #16
	test	local01, #4 wz
 if_ne	jmp	#LR__0539
	add	fp, #4
	rdlong	arg02, fp
	sub	fp, #4
	add	arg02, #6
	rdbyte	arg02, arg02
	test	arg02, #16 wz
 if_e	add	fp, #12
 if_e	wrlong	#5, fp
 if_e	sub	fp, #12
 if_e	jmp	#LR__0539
	add	fp, #4
	rdlong	local02, fp
	mov	local03, local02
	add	fp, #16
	rdlong	arg02, fp
	mov	arg01, arg02
	add	arg02, #48
	sub	fp, #20
	add	local02, #16
	rdlong	local04, local02
	and	local04, #511
	add	arg02, local04
	call	#_fatfs_cc_ld_clust
	add	local03, #8
	wrlong	result1, local03
	jmp	#LR__0537
LR__0539
LR__0540
	add	fp, #12
	rdlong	result1, fp
	sub	fp, #12
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_follow_path_ret
	ret

_fatfs_cc_get_ldnumber
	mov	_var01, arg01
	neg	_var02, #1
	rdlong	_var03, _var01 wz
	mov	_var04, _var03
 if_e	neg	result1, #1
 if_e	jmp	#_fatfs_cc_get_ldnumber_ret
	loc	pa,	#(@LR__0542-@LR__0541)
	call	#FCACHE_LOAD_
LR__0541
	rdbyte	_var05, _var04
	getbyte	_var06, _var05, #0
	cmp	_var06, #33 wc
	add	_var04, #1
 if_ae	mov	_var07, _var05
 if_ae	getbyte	_var07, _var07, #0
 if_ae	cmp	_var07, #58 wz
 if_a	jmp	#LR__0541
LR__0542
	getbyte	_var06, _var05, #0
	cmp	_var06, #58 wz
 if_ne	jmp	#LR__0544
	mov	_var08, #1
	rdbyte	_var06, _var03
	cmp	_var06, #48 wc
 if_b	jmp	#LR__0543
	rdbyte	_var07, _var03
	cmp	_var07, #58 wc
 if_ae	jmp	#LR__0543
	mov	_var09, _var03
	add	_var09, #2
	cmp	_var09, _var04 wz
 if_e	rdbyte	_var06, _var03
 if_e	sub	_var06, #48
 if_e	mov	_var08, _var06
LR__0543
	cmps	_var08, #1 wc
 if_b	mov	_var02, _var08
 if_b	wrlong	_var04, _var01
	mov	result1, _var02
	jmp	#_fatfs_cc_get_ldnumber_ret
LR__0544
	mov	result1, #0
_fatfs_cc_get_ldnumber_ret
	ret

_fatfs_cc_check_fs
	mov	COUNT_, #23
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	add	local01, #3
	wrbyte	#0, local01
	add	local01, #41
	wrlong	##-1, local01
	sub	local01, #44
	mov	arg02, local02
	mov	arg01, local01
	call	#_fatfs_cc_move_window
	cmp	result1, #0 wz
 if_ne	mov	result1, #4
 if_ne	jmp	#LR__0550
	add	local01, #48
	mov	arg01, local01
	add	arg01, #510
	rdword	local03, arg01
	rdbyte	local04, local01
	sub	local01, #48
	getbyte	local05, local04, #0
	cmp	local05, #235 wz
 if_e	jmp	#LR__0545
	getbyte	result1, local04, #0
	cmp	result1, #233 wz
 if_ne	mov	local06, local04
 if_ne	getbyte	local06, local06, #0
 if_ne	cmp	local06, #232 wz
 if_ne	jmp	#LR__0549
LR__0545
	getword	local05, local03, #0
	cmp	local05, ##43605 wz
 if_ne	jmp	#LR__0546
	add	local01, #48
	mov	arg01, local01
	sub	local01, #48
	add	arg01, #82
	mov	arg02, ##@LR__1256
	mov	arg03, #8
	call	#_fatfs_cc_memcmp
	cmp	result1, #0 wz
 if_e	mov	result1, #0
 if_e	jmp	#LR__0550
LR__0546
	add	local01, #48
	mov	arg01, local01
	add	arg01, #11
	rdword	local07, arg01
	add	local01, #13
	rdbyte	local04, local01
	sub	local01, #61
	getword	local05, local07, #0
	getword	local08, local07, #0
	sub	local08, #1
	and	local05, local08 wz
 if_ne	jmp	#LR__0548
	getword	local06, local07, #0
	cmp	local06, ##512 wc
 if_b	jmp	#LR__0548
	getword	local09, local07, #0
	cmp	local09, ##513 wc
 if_ae	jmp	#LR__0548
	mov	local10, local04
	zerox	local10, #7 wz
 if_e	jmp	#LR__0548
	getbyte	local11, local04, #0
	getbyte	local12, local04, #0
	sub	local12, #1
	and	local11, local12 wz
 if_ne	jmp	#LR__0548
	add	local01, #48
	mov	arg01, local01
	sub	local01, #48
	add	arg01, #14
	rdword	local13, arg01
	mov	local14, local13
	zerox	local14, #15 wz
 if_e	jmp	#LR__0548
	add	local01, #64
	rdbyte	local15, local01
	sub	local01, #64
	getbyte	local16, local15, #0
	sub	local16, #1
	cmp	local16, #2 wc
 if_ae	jmp	#LR__0548
	add	local01, #48
	mov	arg01, local01
	sub	local01, #48
	add	arg01, #17
	rdword	local17, arg01
	mov	local18, local17
	zerox	local18, #15 wz
 if_e	jmp	#LR__0548
	add	local01, #48
	mov	arg01, local01
	sub	local01, #48
	add	arg01, #19
	rdword	local19, arg01
	getword	local20, local19, #0
	cmp	local20, #128 wc
 if_ae	jmp	#LR__0547
	add	local01, #48
	mov	local21, local01
	mov	local22, local21
	add	local22, #32
	sub	local01, #48
	rdlong	local23, local22
	cmp	local23, ##65536 wc
 if_b	jmp	#LR__0548
LR__0547
	add	local01, #48
	mov	arg01, local01
	add	arg01, #22
	rdword	result1, arg01 wz
 if_ne	mov	result1, #0
 if_ne	jmp	#LR__0550
LR__0548
LR__0549
	getword	local08, local03, #0
	cmp	local08, ##43605 wz
 if_e	mov	local05, #2
 if_ne	mov	local05, #3
	mov	result1, local05
LR__0550
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_check_fs_ret
	ret

_fatfs_cc_find_volume
	mov	COUNT_, #12
	call	#pushregs_
	add	ptra, #36
	mov	local01, arg01
	mov	local02, arg02
	mov	arg01, local01
	mov	arg02, #0
	call	#_fatfs_cc_check_fs
	mov	local03, result1
	mov	local04, local03
	cmp	local04, #2 wz
 if_e	jmp	#LR__0551
	cmp	local04, #3 wc
 if_b	cmp	local02, #0 wz
 if_nc_or_z	mov	result1, local04
 if_nc_or_z	jmp	#LR__0559
LR__0551
	mov	local05, #0
	loc	pa,	#(@LR__0553-@LR__0552)
	call	#FCACHE_LOAD_
LR__0552
	cmp	local05, #4 wc
 if_ae	jmp	#LR__0554
	mov	local03, local05
	shl	local03, #2
	add	fp, #20
	add	local03, fp
	add	local01, #48
	mov	local06, local01
	mov	arg01, local06
	add	arg01, #446
	mov	local07, local05
	shl	local07, #4
	mov	local08, local07
	add	arg01, local07
	add	arg01, #8
	sub	fp, #20
	rdlong	result1, arg01
	sub	local01, #48
	wrlong	result1, local03
	add	local05, #1
	jmp	#LR__0552
LR__0553
LR__0554
	cmp	local02, #0 wz
 if_ne	mov	local03, local02
 if_ne	sub	local03, #1
 if_e	mov	local03, #0
	mov	local05, local03
LR__0555
	mov	local09, local05
	shl	local09, #2
	add	fp, #20
	mov	local10, fp
	add	local09, fp
	rdlong	local11, local09 wz
	sub	fp, #20
 if_e	jmp	#LR__0556
	mov	local08, local05
	shl	local08, #2
	add	fp, #20
	mov	local12, fp
	add	local08, fp
	rdlong	local07, local08
	mov	arg01, local01
	mov	arg02, local07
	sub	fp, #20
	call	#_fatfs_cc_check_fs
	mov	local06, result1
	mov	local03, local06
	jmp	#LR__0557
LR__0556
	mov	local03, #3
LR__0557
	mov	local04, local03
	cmp	local02, #0 wz
 if_ne	jmp	#LR__0558
	cmp	local04, #2 wc
 if_b	jmp	#LR__0558
	mov	local03, local05
	add	local03, #1
	mov	local05, local03
	cmp	local05, #4 wc
 if_b	jmp	#LR__0555
LR__0558
	mov	result1, local04
LR__0559
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_find_volume_ret
	ret

_fatfs_cc_mount_volume
	mov	COUNT_, #24
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	wrlong	#0, local02
	mov	arg01, local01
	call	#_fatfs_cc_get_ldnumber
	mov	local04, result1
	cmps	local04, #0 wc
 if_b	mov	result1, #11
 if_b	jmp	#LR__0571
	mov	arg01, local04
	shl	arg01, #2
	add	arg01, objptr
	rdlong	local05, arg01 wz
 if_e	mov	result1, #12
 if_e	jmp	#LR__0571
	wrlong	local05, local02
	getbyte	local03, local03, #0
	and	local03, #254
	rdbyte	arg01, local05 wz
 if_e	jmp	#LR__0561
	add	local05, #1
	rdbyte	arg01, local05 wz
	sub	local05, #1
 if_ne	mov	result1, #1
 if_e	add	objptr, #24
 if_e	rdbyte	result1, objptr
 if_e	sub	objptr, #24
	getbyte	arg01, result1, #0
	test	arg01, #1 wz
 if_ne	jmp	#LR__0560
	cmp	local03, #0 wz
 if_ne	getbyte	result1, result1, #0
 if_ne	test	result1, #4 wz
 if_ne	mov	result1, #10
 if_ne	jmp	#LR__0571
	mov	result1, #0
	jmp	#LR__0571
LR__0560
LR__0561
	wrbyte	#0, local05
	add	local05, #1
	wrbyte	local04, local05
	rdbyte	arg01, local05
	sub	local05, #1
	call	#_fatfs_cc_disk_initialize
	mov	local06, result1
	getbyte	local07, local06, #0
	test	local07, #1 wz
 if_ne	mov	result1, #3
 if_ne	jmp	#LR__0571
	cmp	local03, #0 wz
 if_ne	getbyte	local07, local06, #0
 if_ne	test	local07, #4 wz
 if_ne	mov	result1, #10
 if_ne	jmp	#LR__0571
	mov	arg01, local05
	mov	arg02, #0
	call	#_fatfs_cc_find_volume
	mov	arg01, result1
	cmp	arg01, #4 wz
 if_e	mov	result1, #1
 if_e	jmp	#LR__0571
	cmp	arg01, #2 wc
 if_ae	mov	result1, #13
 if_ae	jmp	#LR__0571
	add	local05, #44
	rdlong	local08, local05
	add	local05, #4
	mov	arg01, local05
	sub	local05, #48
	add	arg01, #11
	rdword	result1, arg01
	cmp	result1, ##512 wz
 if_ne	mov	result1, #13
 if_ne	jmp	#LR__0571
	add	local05, #48
	mov	arg01, local05
	sub	local05, #48
	add	arg01, #22
	rdword	result1, arg01
	mov	local09, result1
	zerox	local09, #15 wz
 if_ne	jmp	#LR__0562
	add	local05, #48
	mov	arg01, local05
	sub	local05, #48
	add	arg01, #36
	rdlong	result1, arg01
	mov	local09, result1
LR__0562
	add	local05, #24
	wrlong	local09, local05
	add	local05, #40
	rdbyte	local07, local05
	sub	local05, #62
	wrbyte	local07, local05
	rdbyte	local07, local05
	sub	local05, #2
	cmp	local07, #1 wz
 if_e	jmp	#LR__0563
	add	local05, #2
	rdbyte	local07, local05
	sub	local05, #2
	cmp	local07, #2 wz
 if_ne	mov	result1, #13
 if_ne	jmp	#LR__0571
LR__0563
	add	local05, #2
	rdbyte	local07, local05
	qmul	local09, local07
	add	local05, #59
	rdbyte	local07, local05
	sub	local05, #51
	wrword	local07, local05
	rdword	local07, local05
	sub	local05, #10
	zerox	local07, #15 wz
	getqx	local09
 if_e	jmp	#LR__0564
	add	local05, #10
	rdword	local10, local05
	getword	local07, local10, #0
	sub	local05, #10
	getword	result1, local10, #0
	sub	result1, #1
	test	local07, result1 wz
 if_e	jmp	#LR__0565
LR__0564
	mov	result1, #13
	jmp	#LR__0571
LR__0565
	add	local05, #48
	mov	arg01, local05
	add	arg01, #17
	rdword	result1, arg01
	sub	local05, #40
	wrword	result1, local05
	rdword	local07, local05
	sub	local05, #8
	abs	arg01, local07 wc
	getnib	arg01, arg01, #0
	negc	arg01, arg01 wz
 if_ne	mov	result1, #13
 if_ne	jmp	#LR__0571
	add	local05, #48
	mov	arg01, local05
	sub	local05, #48
	add	arg01, #19
	rdword	result1, arg01
	mov	local11, result1 wz
 if_e	add	local05, #48
 if_e	mov	arg01, local05
 if_e	sub	local05, #48
 if_e	add	arg01, #32
 if_e	rdlong	local11, arg01
	add	local05, #48
	mov	arg01, local05
	sub	local05, #48
	add	arg01, #14
	rdword	result1, arg01
	mov	local12, result1
	mov	local07, local12
	zerox	local07, #15 wz
 if_e	mov	result1, #13
 if_e	jmp	#LR__0571
	getword	local13, local12, #0
	add	local13, local09
	add	local05, #8
	rdword	local07, local05
	sub	local05, #8
	abs	local07, local07 wc
	shr	local07, #4
	negc	local07, local07
	add	local13, local07
	cmp	local11, local13 wc
 if_b	mov	result1, #13
 if_b	jmp	#LR__0571
	mov	local07, local11
	sub	local07, local13
	add	local05, #10
	rdword	arg01, local05
	qdiv	local07, arg01
	sub	local05, #10
	getqx	local14
	cmp	local14, #0 wz
 if_e	mov	result1, #13
 if_e	jmp	#LR__0571
	mov	local15, #0
	cmp	local14, ##268435446 wc
 if_b	mov	local15, #3
	cmp	local14, ##65526 wc
 if_b	mov	local15, #2
	cmp	local14, ##4086 wc
 if_b	mov	local15, #1
	cmp	local15, #0 wz
 if_e	mov	result1, #13
 if_e	jmp	#LR__0571
	mov	local07, local14
	add	local07, #2
	add	local05, #20
	wrlong	local07, local05
	add	local05, #8
	wrlong	local08, local05
	mov	local07, local08
	getword	arg02, local12, #0
	add	local07, arg02
	add	local05, #4
	wrlong	local07, local05
	mov	local07, local08
	add	local07, local13
	add	local05, #8
	wrlong	local07, local05
	sub	local05, #40
	cmp	local15, #3 wz
 if_ne	jmp	#LR__0566
	add	local05, #48
	mov	arg01, local05
	sub	local05, #48
	add	arg01, #42
	rdword	result1, arg01 wz
 if_ne	mov	result1, #13
 if_ne	jmp	#LR__0571
	add	local05, #8
	rdword	local07, local05
	sub	local05, #8
	zerox	local07, #15 wz
 if_ne	mov	result1, #13
 if_ne	jmp	#LR__0571
	add	local05, #48
	mov	arg01, local05
	add	arg01, #44
	rdlong	result1, arg01
	sub	local05, #12
	wrlong	result1, local05
	sub	local05, #16
	rdlong	local16, local05
	sub	local05, #20
	shl	local16, #2
	jmp	#LR__0568
LR__0566
	add	local05, #8
	rdword	local07, local05
	sub	local05, #8
	zerox	local07, #15 wz
 if_e	mov	result1, #13
 if_e	jmp	#LR__0571
	add	local05, #32
	rdlong	local07, local05
	add	local07, local09
	add	local05, #4
	wrlong	local07, local05
	sub	local05, #36
	cmp	local15, #2 wz
 if_e	add	local05, #20
 if_e	rdlong	local07, local05
 if_e	sub	local05, #20
 if_e	shl	local07, #1
 if_e	jmp	#LR__0567
	add	local05, #20
	rdlong	local17, local05
	mov	local18, local17
	mov	local10, local18
	shl	local10, #1
	add	local10, local18
	mov	local07, local10
	shr	local07, #1
	mov	local19, local17
	sub	local05, #20
	mov	local20, local19
	and	local20, #1
	add	local07, local20
LR__0567
	mov	local16, local07
LR__0568
	mov	local07, local16
	add	local07, #511
	shr	local07, #9
	add	local05, #24
	rdlong	arg02, local05
	sub	local05, #24
	cmp	arg02, local07 wc
 if_b	mov	result1, #13
 if_b	jmp	#LR__0571
	add	local05, #16
	wrlong	##-1, local05
	sub	local05, #4
	wrlong	##-1, local05
	sub	local05, #8
	wrbyte	#128, local05
	sub	local05, #4
	cmp	local15, #3 wz
 if_ne	jmp	#LR__0570
	add	local05, #48
	mov	arg01, local05
	sub	local05, #48
	add	arg01, #48
	rdword	result1, arg01
	getword	local07, result1, #0
	cmp	local07, #1 wz
 if_ne	jmp	#LR__0570
	mov	local21, local08
	add	local21, #1
	mov	arg01, local05
	mov	arg02, local21
	call	#_fatfs_cc_move_window
	cmp	result1, #0 wz
 if_ne	jmp	#LR__0570
	add	local05, #4
	wrbyte	#0, local05
	add	local05, #44
	mov	local22, local05
	mov	local23, local22
	add	local23, #510
	mov	arg01, local23
	sub	local05, #48
	rdword	result1, arg01
	mov	local24, result1
	getword	local07, local24, #0
	cmp	local07, ##43605 wz
 if_ne	jmp	#LR__0569
	add	local05, #48
	mov	local21, local05
	mov	local22, local21
	mov	arg01, local22
	sub	local05, #48
	rdlong	result1, arg01
	mov	local23, result1
	cmp	local23, ##1096897106 wz
 if_ne	jmp	#LR__0569
	add	local05, #48
	mov	local10, local05
	mov	local21, local10
	add	local21, #484
	mov	arg01, local21
	sub	local05, #48
	rdlong	result1, arg01
	mov	local22, result1
	cmp	local22, ##1631679090 wz
 if_ne	jmp	#LR__0569
	add	local05, #48
	mov	arg01, local05
	add	arg01, #488
	rdlong	result1, arg01
	sub	local05, #32
	wrlong	result1, local05
	add	local05, #32
	mov	local23, local05
	mov	local24, local23
	add	local24, #492
	mov	arg01, local24
	rdlong	result1, arg01
	mov	local07, result1
	sub	local05, #36
	wrlong	local07, local05
	sub	local05, #12
LR__0569
LR__0570
	wrbyte	local15, local05
	add	objptr, #4
	rdword	local07, objptr
	add	local07, #1
	wrword	local07, objptr
	rdword	local23, objptr
	sub	objptr, #4
	add	local05, #6
	wrword	local23, local05
	mov	result1, #0
LR__0571
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_mount_volume_ret
	ret

_fatfs_cc_validate
	mov	_var01, arg01 wz
	mov	_var02, arg02
	mov	_var03, #9
 if_e	jmp	#LR__0572
	rdlong	_var04, _var01 wz
 if_e	jmp	#LR__0572
	rdlong	result1, _var01
	rdbyte	result1, result1 wz
 if_e	jmp	#LR__0572
	add	_var01, #4
	rdword	_var05, _var01
	sub	_var01, #4
	getword	result1, _var05, #0
	rdlong	_var06, _var01
	add	_var06, #6
	rdword	_var07, _var06
	sub	_var06, #6
	getword	_var08, _var07, #0
	cmp	result1, _var08 wz
 if_ne	jmp	#LR__0572
	rdlong	_var09, _var01
	add	_var09, #1
	rdbyte	_var10, _var09
	sub	_var09, #1
	mov	arg01, _var10 wz
 if_ne	mov	result1, #1
 if_e	add	objptr, #24
 if_e	rdbyte	result1, objptr
 if_e	sub	objptr, #24
	mov	_var11, result1
	getbyte	_var04, _var11, #0
	and	_var04, #1 wz
 if_e	mov	_var03, #0
LR__0572
	cmp	_var03, #0 wz
 if_e	rdlong	_var04, _var01
 if_ne	mov	_var04, #0
	wrlong	_var04, _var02
	mov	result1, _var03
_fatfs_cc_validate_ret
	ret

_fatfs_cc_f_mount
	mov	COUNT_, #1
	call	#pushregs_
	add	ptra, #32
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	add	fp, #4
	wrbyte	arg03, fp
	sub	fp, #4
	rdlong	arg03, fp
	add	fp, #20
	wrlong	arg03, fp
	mov	arg01, fp
	sub	fp, #28
	call	#_fatfs_cc_get_ldnumber
	add	fp, #20
	wrlong	result1, fp
	sub	fp, #20
	cmps	result1, #0 wc
 if_b	mov	result1, #11
 if_b	jmp	#LR__0573
	add	fp, #20
	rdlong	local01, fp
	shl	local01, #2
	add	local01, objptr
	rdlong	local01, local01 wz
	sub	fp, #4
	wrlong	local01, fp
	sub	fp, #16
 if_ne	add	fp, #16
 if_ne	rdlong	local01, fp
 if_ne	sub	fp, #16
 if_ne	wrbyte	#0, local01
	add	fp, #4
	rdlong	local01, fp wz
	sub	fp, #4
 if_ne	add	fp, #4
 if_ne	rdlong	local01, fp
 if_ne	sub	fp, #4
 if_ne	wrbyte	#0, local01
	add	fp, #20
	rdlong	local01, fp
	shl	local01, #2
	add	local01, objptr
	sub	fp, #16
	rdlong	arg03, fp
	wrlong	arg03, local01
	add	fp, #8
	rdbyte	local01, fp
	sub	fp, #12
	zerox	local01, #7 wz
 if_e	mov	result1, #0
 if_e	jmp	#LR__0573
	add	fp, #8
	mov	arg01, fp
	sub	fp, #4
	mov	arg02, fp
	sub	fp, #4
	mov	arg03, #0
	call	#_fatfs_cc_mount_volume
	add	fp, #24
	wrlong	result1, fp
	sub	fp, #24
LR__0573
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_f_mount_ret
	ret

_fatfs_cc_f_open
	mov	COUNT_, #14
	call	#pushregs_
	add	ptra, #92
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	add	fp, #4
	wrbyte	arg03, fp
	sub	fp, #8
	rdlong	arg03, fp wz
	sub	fp, #4
 if_e	mov	result1, #9
 if_e	jmp	#LR__0592
	add	fp, #12
	rdbyte	arg03, fp
	and	arg03, #63
	wrbyte	arg03, fp
	sub	fp, #4
	mov	arg01, fp
	add	fp, #56
	mov	arg02, fp
	sub	fp, #52
	rdbyte	local01, fp
	sub	fp, #12
	mov	arg03, local01
	call	#_fatfs_cc_mount_volume
	add	fp, #16
	wrlong	result1, fp
	sub	fp, #16
	cmp	result1, #0 wz
 if_ne	jmp	#LR__0591
	add	fp, #64
	rdlong	arg02, fp
	sub	fp, #44
	wrlong	arg02, fp
	mov	arg01, fp
	sub	fp, #12
	rdlong	local02, fp
	sub	fp, #8
	mov	arg02, local02
	call	#_fatfs_cc_follow_path
	add	fp, #16
	wrlong	result1, fp
	sub	fp, #16
	cmp	result1, #0 wz
 if_ne	jmp	#LR__0574
	add	fp, #63
	rdbyte	local03, fp
	sub	fp, #63
	test	local03, #128 wz
 if_ne	add	fp, #16
 if_ne	wrlong	#6, fp
 if_ne	sub	fp, #16
LR__0574
	add	fp, #12
	rdbyte	local03, fp
	sub	fp, #12
	test	local03, #28 wz
 if_e	jmp	#LR__0579
	add	fp, #16
	rdlong	local03, fp wz
	sub	fp, #16
 if_e	jmp	#LR__0576
	add	fp, #16
	rdlong	local03, fp
	sub	fp, #16
	cmp	local03, #4 wz
 if_ne	jmp	#LR__0575
	add	fp, #20
	mov	arg01, fp
	sub	fp, #20
	call	#_fatfs_cc_dir_register
	add	fp, #16
	wrlong	result1, fp
	sub	fp, #16
LR__0575
	add	fp, #12
	rdbyte	local03, fp
	or	local03, #8
	wrbyte	local03, fp
	sub	fp, #12
	jmp	#LR__0578
LR__0576
	add	fp, #26
	rdbyte	local03, fp
	sub	fp, #26
	test	local03, #17 wz
 if_ne	add	fp, #16
 if_ne	wrlong	#7, fp
 if_ne	sub	fp, #16
 if_ne	jmp	#LR__0577
	add	fp, #12
	rdbyte	local03, fp
	sub	fp, #12
	test	local03, #4 wz
 if_ne	add	fp, #16
 if_ne	wrlong	#8, fp
 if_ne	sub	fp, #16
LR__0577
LR__0578
	add	fp, #16
	rdlong	local03, fp wz
	sub	fp, #16
 if_ne	jmp	#LR__0583
	add	fp, #12
	rdbyte	local02, fp
	sub	fp, #12
	test	local02, #8 wz
 if_e	jmp	#LR__0583
	call	#_fatfs_cc__get_fattime
	add	fp, #80
	wrlong	result1, fp
	sub	fp, #32
	rdlong	arg01, fp
	add	arg01, #14
	wrlong	result1, arg01
	rdlong	arg01, fp
	add	arg01, #22
	add	fp, #32
	rdlong	arg02, fp
	wrlong	arg02, arg01
	sub	fp, #16
	rdlong	arg01, fp
	sub	fp, #16
	rdlong	arg02, fp
	sub	fp, #48
	call	#_fatfs_cc_ld_clust
	add	fp, #68
	wrlong	result1, fp
	sub	fp, #20
	rdlong	local03, fp
	add	local03, #11
	wrbyte	#32, local03
	add	fp, #16
	rdlong	arg01, fp
	sub	fp, #16
	rdlong	arg02, fp
	sub	fp, #48
	mov	arg03, #0
	call	#_fatfs_cc_st_clust
	add	fp, #48
	rdlong	arg01, fp
	add	arg01, #28
	wrlong	#0, arg01
	add	fp, #16
	rdlong	local03, fp
	add	local03, #3
	wrbyte	#1, local03
	add	fp, #4
	rdlong	local03, fp wz
	sub	fp, #68
 if_e	jmp	#LR__0583
	add	fp, #64
	rdlong	local03, fp
	add	local03, #44
	rdlong	local02, local03
	add	fp, #20
	wrlong	local02, fp
	sub	fp, #64
	mov	arg01, fp
	add	fp, #48
	rdlong	arg02, fp
	sub	fp, #68
	mov	arg03, #0
	call	#_fatfs_cc_remove_chain
	add	fp, #16
	wrlong	result1, fp
	cmps	result1, #0 wz
	sub	fp, #16
 if_ne	jmp	#LR__0583
	add	fp, #64
	rdlong	arg01, fp
	add	fp, #20
	rdlong	arg02, fp
	sub	fp, #84
	call	#_fatfs_cc_move_window
	add	fp, #16
	wrlong	result1, fp
	add	fp, #48
	rdlong	local03, fp
	add	fp, #4
	rdlong	local02, fp
	sub	fp, #68
	sub	local02, #1
	add	local03, #12
	wrlong	local02, local03
	jmp	#LR__0583
LR__0579
	add	fp, #16
	rdlong	local03, fp wz
	sub	fp, #16
 if_ne	jmp	#LR__0582
	add	fp, #26
	rdbyte	local03, fp
	sub	fp, #26
	test	local03, #16 wz
 if_ne	add	fp, #16
 if_ne	wrlong	#4, fp
 if_ne	sub	fp, #16
 if_ne	jmp	#LR__0581
	add	fp, #12
	rdbyte	local04, fp
	sub	fp, #12
	getbyte	local03, local04, #0
	test	local03, #2 wz
 if_e	jmp	#LR__0580
	add	fp, #26
	rdbyte	local01, fp
	sub	fp, #26
	getbyte	local02, local01, #0
	and	local02, #1 wz
 if_ne	mov	local03, #7
 if_ne	add	fp, #16
 if_ne	wrlong	#7, fp
 if_ne	sub	fp, #16
LR__0580
LR__0581
LR__0582
LR__0583
	add	fp, #16
	rdlong	local03, fp wz
	sub	fp, #16
 if_ne	jmp	#LR__0584
	add	fp, #12
	rdbyte	local03, fp
	sub	fp, #12
	test	local03, #8 wz
 if_ne	add	fp, #12
 if_ne	rdbyte	local03, fp
 if_ne	or	local03, #64
 if_ne	wrbyte	local03, fp
 if_ne	sub	fp, #12
	add	fp, #4
	rdlong	local03, fp
	add	fp, #60
	rdlong	local02, fp
	add	local02, #44
	rdlong	local04, local02
	add	local03, #32
	wrlong	local04, local03
	sub	fp, #60
	rdlong	local03, fp
	add	fp, #44
	rdlong	local02, fp
	sub	fp, #48
	add	local03, #36
	wrlong	local02, local03
LR__0584
	add	fp, #16
	rdlong	local03, fp wz
	sub	fp, #16
 if_ne	jmp	#LR__0590
	add	fp, #4
	rdlong	local03, fp
	add	fp, #60
	rdlong	arg01, fp
	sub	fp, #16
	rdlong	arg02, fp
	sub	fp, #48
	call	#_fatfs_cc_ld_clust
	add	local03, #8
	wrlong	result1, local03
	add	fp, #4
	rdlong	local03, fp
	add	fp, #44
	rdlong	arg01, fp
	add	arg01, #28
	rdlong	result1, arg01
	add	local03, #12
	wrlong	result1, local03
	sub	fp, #44
	rdlong	local03, fp
	add	fp, #60
	rdlong	local02, fp
	wrlong	local02, local03
	sub	fp, #60
	rdlong	local03, fp
	add	fp, #60
	rdlong	local02, fp
	add	local02, #6
	rdword	local04, local02
	add	local03, #4
	wrword	local04, local03
	sub	fp, #60
	rdlong	local03, fp
	add	fp, #8
	rdbyte	local02, fp
	add	local03, #16
	wrbyte	local02, local03
	sub	fp, #8
	rdlong	local03, fp
	add	local03, #17
	wrbyte	#0, local03
	rdlong	local03, fp
	add	local03, #28
	wrlong	#0, local03
	rdlong	local03, fp
	add	local03, #20
	wrlong	#0, local03
	rdlong	arg01, fp
	sub	fp, #4
	add	arg01, #40
	mov	arg02, #0
	decod	arg03, #9
	mov	local05, arg01
	call	#\builtin_bytefill_
	mov	result1, local05
	add	fp, #12
	rdbyte	local03, fp
	sub	fp, #12
	test	local03, #32 wz
 if_e	jmp	#LR__0589
	add	fp, #4
	rdlong	local02, fp
	sub	fp, #4
	add	local02, #12
	rdlong	local06, local02
	cmp	local06, #1 wc
 if_b	jmp	#LR__0589
	add	fp, #4
	rdlong	local02, fp
	mov	local03, local02
	add	local02, #12
	rdlong	local04, local02
	add	local03, #20
	wrlong	local04, local03
	add	fp, #60
	rdlong	local04, fp
	add	local04, #10
	rdword	local03, local04
	shl	local03, #9
	add	fp, #8
	wrlong	local03, fp
	sub	fp, #68
	rdlong	local03, fp
	add	local03, #8
	rdlong	local02, local03
	add	fp, #72
	wrlong	local02, fp
	sub	fp, #72
	rdlong	local03, fp
	add	local03, #12
	rdlong	local02, local03
	add	fp, #84
	wrlong	local02, fp
	sub	fp, #88
LR__0585
	add	fp, #16
	rdlong	local07, fp
	sub	fp, #16
	mov	local01, local07 wz
 if_ne	jmp	#LR__0586
	add	fp, #88
	rdlong	local08, fp
	mov	local06, local08
	sub	fp, #16
	rdlong	local09, fp
	sub	fp, #72
	mov	local10, local09
	cmp	local06, local10 wcz
 if_be	jmp	#LR__0586
	add	fp, #4
	rdlong	arg01, fp
	add	fp, #72
	rdlong	arg02, fp
	sub	fp, #76
	call	#_fatfs_cc_get_fat
	add	fp, #76
	wrlong	result1, fp
	sub	fp, #76
	cmp	result1, #2 wc
 if_b	add	fp, #16
 if_b	wrlong	#2, fp
 if_b	sub	fp, #16
	add	fp, #76
	rdlong	local07, fp
	sub	fp, #76
	cmp	local07, ##-1 wz
 if_e	add	fp, #16
 if_e	wrlong	#1, fp
 if_e	sub	fp, #16
	add	fp, #88
	rdlong	local11, fp
	mov	local12, local11
	sub	fp, #16
	rdlong	local13, fp
	mov	local14, local13
	sub	local12, local14
	add	fp, #16
	wrlong	local12, fp
	sub	fp, #88
	jmp	#LR__0585
LR__0586
	add	fp, #4
	rdlong	local03, fp
	add	fp, #72
	rdlong	local02, fp
	add	local03, #24
	wrlong	local02, local03
	sub	fp, #60
	rdlong	local04, fp
	sub	fp, #16
	mov	local03, local04 wz
 if_ne	jmp	#LR__0588
	add	fp, #88
	rdlong	local07, fp
	sub	fp, #88
	mov	local01, local07
	mov	local02, local01
	and	local02, #511 wz
 if_e	jmp	#LR__0588
	add	fp, #64
	rdlong	arg01, fp
	add	fp, #12
	rdlong	local02, fp
	sub	fp, #76
	mov	arg02, local02
	call	#_fatfs_cc_clst2sect
	add	fp, #84
	wrlong	result1, fp
	mov	local04, result1 wz
	sub	fp, #84
 if_e	mov	local03, #2
 if_e	add	fp, #16
 if_e	wrlong	#2, fp
 if_e	sub	fp, #16
 if_e	jmp	#LR__0587
	add	fp, #4
	rdlong	local03, fp
	add	fp, #80
	rdlong	local02, fp
	add	fp, #4
	rdlong	local08, fp
	mov	local07, local08
	shr	local07, #9
	add	local02, local07
	add	local03, #28
	wrlong	local02, local03
	sub	fp, #24
	rdlong	local04, fp
	add	local04, #1
	rdbyte	arg01, local04
	sub	fp, #60
	rdlong	local07, fp
	mov	local04, local07
	add	local04, #40
	sub	fp, #4
	mov	local01, local07
	add	local01, #28
	rdlong	local06, local01
	mov	local02, local06
	mov	local01, #1
	mov	arg02, local04
	mov	arg03, local02
	mov	arg04, #1
	call	#_fatfs_cc_disk_read
	mov	local03, result1 wz
 if_ne	mov	local03, #1
 if_ne	add	fp, #16
 if_ne	wrlong	#1, fp
 if_ne	sub	fp, #16
LR__0587
LR__0588
LR__0589
LR__0590
LR__0591
	add	fp, #16
	rdlong	local03, fp wz
	sub	fp, #16
 if_ne	add	fp, #4
 if_ne	rdlong	local03, fp
 if_ne	sub	fp, #4
 if_ne	wrlong	#0, local03
	add	fp, #16
	rdlong	result1, fp
	sub	fp, #16
LR__0592
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_f_open_ret
	ret

_fatfs_cc_f_read
	mov	COUNT_, #14
	call	#pushregs_
	add	ptra, #56
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	add	fp, #4
	wrlong	arg03, fp
	add	fp, #4
	wrlong	arg04, fp
	sub	fp, #8
	rdlong	result1, fp
	add	fp, #44
	wrlong	result1, fp
	sub	fp, #36
	rdlong	result1, fp
	wrlong	#0, result1
	sub	fp, #12
	rdlong	arg01, fp
	add	fp, #20
	mov	arg02, fp
	sub	fp, #24
	call	#_fatfs_cc_validate
	add	fp, #20
	wrlong	result1, fp
	cmps	result1, #0 wz
	sub	fp, #20
 if_ne	jmp	#LR__0593
	add	fp, #4
	rdlong	arg02, fp
	add	arg02, #17
	rdbyte	local01, arg02
	getbyte	arg02, local01, #0
	add	fp, #16
	wrlong	arg02, fp
	sub	fp, #20
	cmps	arg02, #0 wz
 if_e	jmp	#LR__0594
LR__0593
	add	fp, #20
	rdlong	result1, fp
	sub	fp, #20
	jmp	#LR__0613
LR__0594
	add	fp, #4
	rdlong	arg02, fp
	sub	fp, #4
	add	arg02, #16
	rdbyte	arg02, arg02
	test	arg02, #1 wz
 if_e	mov	result1, #7
 if_e	jmp	#LR__0613
	add	fp, #4
	rdlong	local02, fp
	mov	local03, local02
	add	local03, #12
	rdlong	local04, local03
	add	local02, #20
	rdlong	local02, local02
	sub	local04, local02
	add	fp, #32
	wrlong	local04, fp
	sub	fp, #24
	rdlong	local05, fp
	sub	fp, #12
	cmp	local05, local04 wcz
 if_a	add	fp, #36
 if_a	rdlong	local05, fp
 if_a	sub	fp, #24
 if_a	wrlong	local05, fp
 if_a	sub	fp, #12
LR__0595
	add	fp, #12
	rdlong	local03, fp
	sub	fp, #12
	mov	local05, local03
	cmp	local05, #1 wc
 if_b	jmp	#LR__0612
	add	fp, #4
	rdlong	local04, fp
	sub	fp, #4
	add	local04, #20
	rdlong	local04, local04
	test	local04, #511 wz
 if_ne	jmp	#LR__0610
	add	fp, #4
	rdlong	local02, fp
	add	local02, #20
	rdlong	local04, local02
	shr	local04, #9
	add	fp, #20
	rdlong	local06, fp
	mov	local07, local06
	add	local07, #10
	rdword	local08, local07
	sub	local07, #10
	getword	local09, local08, #0
	sub	local09, #1
	and	local04, local09 wz
	add	fp, #24
	wrlong	local04, fp
	sub	fp, #48
 if_ne	jmp	#LR__0600
	add	fp, #4
	rdlong	local04, fp
	sub	fp, #4
	add	local04, #20
	rdlong	local04, local04 wz
 if_ne	jmp	#LR__0596
	add	fp, #4
	rdlong	local04, fp
	add	local04, #8
	rdlong	local04, local04
	add	fp, #24
	wrlong	local04, fp
	sub	fp, #28
	jmp	#LR__0597
LR__0596
	add	fp, #4
	rdlong	local09, fp
	mov	arg01, local09
	sub	fp, #4
	add	local09, #24
	rdlong	arg02, local09
	call	#_fatfs_cc_get_fat
	add	fp, #28
	wrlong	result1, fp
	sub	fp, #28
LR__0597
	add	fp, #28
	rdlong	local04, fp
	sub	fp, #28
	cmp	local04, #2 wc
 if_ae	jmp	#LR__0598
	add	fp, #4
	rdlong	local04, fp
	sub	fp, #4
	add	local04, #17
	wrbyte	#2, local04
	mov	result1, #2
	jmp	#LR__0613
LR__0598
	add	fp, #28
	rdlong	local04, fp
	sub	fp, #28
	cmp	local04, ##-1 wz
 if_ne	jmp	#LR__0599
	add	fp, #4
	rdlong	local04, fp
	sub	fp, #4
	add	local04, #17
	wrbyte	#1, local04
	mov	result1, #1
	jmp	#LR__0613
LR__0599
	add	fp, #4
	rdlong	local04, fp
	add	fp, #24
	rdlong	local09, fp
	sub	fp, #28
	add	local04, #24
	wrlong	local09, local04
LR__0600
	add	fp, #24
	rdlong	arg01, fp
	sub	fp, #20
	rdlong	local04, fp
	sub	fp, #4
	add	local04, #24
	rdlong	arg02, local04
	call	#_fatfs_cc_clst2sect
	add	fp, #32
	wrlong	result1, fp
	sub	fp, #32
	cmp	result1, #0 wz
 if_ne	jmp	#LR__0601
	add	fp, #4
	rdlong	local04, fp
	sub	fp, #4
	add	local04, #17
	wrbyte	#2, local04
	mov	result1, #2
	jmp	#LR__0613
LR__0601
	add	fp, #32
	rdlong	local04, fp
	add	fp, #16
	rdlong	local09, fp
	add	local04, local09
	sub	fp, #16
	wrlong	local04, fp
	sub	fp, #20
	rdlong	local04, fp
	shr	local04, #9
	add	fp, #32
	wrlong	local04, fp
	sub	fp, #44
	cmp	local04, #1 wc
 if_b	jmp	#LR__0605
	add	fp, #48
	rdlong	local04, fp
	sub	fp, #4
	rdlong	local09, fp
	add	local04, local09
	sub	fp, #20
	rdlong	local09, fp
	sub	fp, #24
	add	local09, #10
	rdword	local10, local09
	cmp	local04, local10 wcz
 if_be	jmp	#LR__0602
	add	fp, #24
	rdlong	local02, fp
	add	local02, #10
	rdword	local04, local02
	add	fp, #24
	rdlong	local10, fp
	sub	local04, local10
	sub	fp, #4
	wrlong	local04, fp
	sub	fp, #44
LR__0602
	add	fp, #24
	rdlong	local02, fp
	add	local02, #1
	rdbyte	arg01, local02
	add	fp, #28
	rdlong	arg02, fp
	sub	fp, #20
	rdlong	arg03, fp
	add	fp, #12
	rdlong	arg04, fp
	sub	fp, #44
	call	#_fatfs_cc_disk_read
	cmp	result1, #0 wz
 if_e	jmp	#LR__0603
	add	fp, #4
	rdlong	local04, fp
	sub	fp, #4
	add	local04, #17
	wrbyte	#1, local04
	mov	result1, #1
	jmp	#LR__0613
LR__0603
	add	fp, #4
	rdlong	local02, fp
	sub	fp, #4
	add	local02, #16
	rdbyte	local04, local02
	and	local04, #128 wz
 if_e	jmp	#LR__0604
	add	fp, #4
	rdlong	local09, fp
	add	local09, #28
	rdlong	local10, local09
	add	fp, #28
	rdlong	local11, fp
	sub	local10, local11
	add	fp, #12
	rdlong	local12, fp
	sub	fp, #44
	mov	local13, local12
	cmp	local10, local13 wc
 if_ae	jmp	#LR__0604
	add	fp, #52
	rdlong	arg01, fp
	sub	fp, #48
	rdlong	local09, fp
	mov	local10, local09
	add	local10, #28
	rdlong	local07, local10
	mov	local11, local07
	add	fp, #28
	rdlong	local08, fp
	mov	local06, local08
	sub	local11, local06
	shl	local11, #9
	mov	local13, local11
	add	arg01, local11
	mov	local01, local09
	sub	fp, #32
	mov	local10, local01
	add	local10, #40
	mov	local02, local10
	decod	local14, #9
	mov	arg02, local02
	decod	arg03, #9
	call	#__system____builtin_memmove
LR__0604
	add	fp, #44
	rdlong	local04, fp
	shl	local04, #9
	sub	fp, #4
	wrlong	local04, fp
	sub	fp, #40
	jmp	#LR__0611
LR__0605
	add	fp, #4
	rdlong	local04, fp
	add	local04, #28
	rdlong	local14, local04
	add	fp, #28
	rdlong	local10, fp
	sub	fp, #32
	cmp	local14, local10 wz
 if_e	jmp	#LR__0609
	add	fp, #4
	rdlong	local02, fp
	sub	fp, #4
	add	local02, #16
	rdbyte	local04, local02
	test	local04, #128 wz
 if_e	jmp	#LR__0607
	add	fp, #24
	rdlong	local02, fp
	add	local02, #1
	rdbyte	arg01, local02
	sub	fp, #20
	rdlong	local01, fp
	mov	arg02, local01
	add	arg02, #40
	sub	fp, #4
	add	local01, #28
	rdlong	arg03, local01
	mov	arg04, #1
	call	#_fatfs_cc_disk_write
	cmp	result1, #0 wz
 if_e	jmp	#LR__0606
	add	fp, #4
	rdlong	local04, fp
	sub	fp, #4
	add	local04, #17
	wrbyte	#1, local04
	mov	result1, #1
	jmp	#LR__0613
LR__0606
	add	fp, #4
	rdlong	local01, fp
	mov	local04, local01
	sub	fp, #4
	add	local01, #16
	rdbyte	local14, local01
	and	local14, #127
	add	local04, #16
	wrbyte	local14, local04
LR__0607
	add	fp, #24
	rdlong	local02, fp
	add	local02, #1
	rdbyte	arg01, local02
	sub	fp, #20
	rdlong	arg02, fp
	add	arg02, #40
	add	fp, #28
	rdlong	arg03, fp
	sub	fp, #32
	mov	arg04, #1
	call	#_fatfs_cc_disk_read
	cmp	result1, #0 wz
 if_e	jmp	#LR__0608
	add	fp, #4
	rdlong	local04, fp
	sub	fp, #4
	add	local04, #17
	wrbyte	#1, local04
	mov	result1, #1
	jmp	#LR__0613
LR__0608
LR__0609
	add	fp, #4
	rdlong	local04, fp
	add	fp, #28
	rdlong	local14, fp
	sub	fp, #32
	add	local04, #28
	wrlong	local14, local04
LR__0610
	add	fp, #4
	rdlong	local02, fp
	add	local02, #20
	rdlong	local01, local02
	and	local01, #511
	decod	local04, #9
	sub	local04, local01
	add	fp, #36
	wrlong	local04, fp
	sub	fp, #28
	rdlong	local14, fp
	sub	fp, #12
	cmp	local04, local14 wcz
 if_a	add	fp, #12
 if_a	rdlong	local04, fp
 if_a	add	fp, #28
 if_a	wrlong	local04, fp
 if_a	sub	fp, #40
	add	fp, #52
	rdlong	arg01, fp
	sub	fp, #48
	rdlong	local07, fp
	mov	arg02, local07
	add	arg02, #40
	add	local07, #20
	rdlong	local13, local07
	mov	local11, local13
	mov	local12, local11
	and	local12, #511
	add	arg02, local12
	add	fp, #36
	rdlong	arg03, fp
	sub	fp, #40
	call	#__system____builtin_memmove
LR__0611
	add	fp, #12
	rdlong	local04, fp
	add	fp, #28
	rdlong	local14, fp
	sub	local04, local14
	sub	fp, #28
	wrlong	local04, fp
	add	fp, #4
	rdlong	local02, fp
	rdlong	local14, local02
	add	fp, #24
	rdlong	local09, fp
	add	local14, local09
	wrlong	local14, local02
	add	fp, #12
	rdlong	local04, fp
	sub	fp, #12
	rdlong	local14, fp
	add	local04, local14
	add	fp, #12
	wrlong	local04, fp
	sub	fp, #48
	rdlong	local01, fp
	mov	local04, local01
	add	local01, #20
	rdlong	local14, local01
	add	fp, #36
	rdlong	local07, fp
	sub	fp, #40
	add	local14, local07
	add	local04, #20
	wrlong	local14, local04
	jmp	#LR__0595
LR__0612
	mov	result1, #0
LR__0613
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_f_read_ret
	ret

_fatfs_cc_f_write
	mov	COUNT_, #21
	call	#pushregs_
	add	ptra, #52
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	add	fp, #4
	wrlong	arg03, fp
	add	fp, #4
	wrlong	arg04, fp
	sub	fp, #8
	rdlong	result1, fp
	add	fp, #40
	wrlong	result1, fp
	sub	fp, #32
	rdlong	result1, fp
	wrlong	#0, result1
	sub	fp, #12
	rdlong	arg01, fp
	add	fp, #20
	mov	arg02, fp
	sub	fp, #24
	call	#_fatfs_cc_validate
	add	fp, #20
	wrlong	result1, fp
	cmps	result1, #0 wz
	sub	fp, #20
 if_ne	jmp	#LR__0614
	add	fp, #4
	rdlong	arg02, fp
	add	arg02, #17
	rdbyte	arg02, arg02
	getbyte	arg02, arg02, #0
	add	fp, #16
	wrlong	arg02, fp
	sub	fp, #20
	cmps	arg02, #0 wz
 if_e	jmp	#LR__0615
LR__0614
	add	fp, #20
	rdlong	result1, fp
	sub	fp, #20
	jmp	#LR__0637
LR__0615
	add	fp, #4
	rdlong	arg02, fp
	sub	fp, #4
	add	arg02, #16
	rdbyte	arg02, arg02
	test	arg02, #2 wz
 if_e	mov	result1, #7
 if_e	jmp	#LR__0637
	add	fp, #4
	rdlong	local01, fp
	mov	arg02, local01
	add	arg02, #20
	rdlong	arg02, arg02
	add	fp, #8
	rdlong	result1, fp
	add	arg02, result1
	mov	result1, local01
	sub	fp, #12
	add	result1, #20
	rdlong	local02, result1
	mov	local03, local02
	cmp	arg02, local03 wc
 if_ae	jmp	#LR__0616
	add	fp, #4
	rdlong	arg02, fp
	neg	result1, #1
	add	arg02, #20
	rdlong	arg02, arg02
	sub	result1, arg02
	add	fp, #8
	wrlong	result1, fp
	sub	fp, #12
LR__0616
LR__0617
	add	fp, #12
	rdlong	local04, fp
	sub	fp, #12
	mov	local05, local04
	cmp	local05, #1 wc
 if_b	jmp	#LR__0636
	add	fp, #4
	rdlong	result1, fp
	sub	fp, #4
	add	result1, #20
	rdlong	result1, result1
	test	result1, #511 wz
 if_ne	jmp	#LR__0632
	add	fp, #4
	rdlong	local06, fp
	add	local06, #20
	rdlong	local07, local06
	mov	result1, local07
	shr	result1, #9
	add	fp, #20
	rdlong	local08, fp
	mov	local09, local08
	add	local09, #10
	rdword	local10, local09
	sub	local09, #10
	getword	local11, local10, #0
	sub	local11, #1
	and	result1, local11 wz
	add	fp, #20
	wrlong	result1, fp
	sub	fp, #44
 if_ne	jmp	#LR__0623
	add	fp, #4
	rdlong	local12, fp
	sub	fp, #4
	add	local12, #20
	rdlong	arg02, local12 wz
 if_ne	jmp	#LR__0618
	add	fp, #4
	rdlong	local12, fp
	add	local12, #8
	rdlong	local12, local12 wz
	add	fp, #24
	wrlong	local12, fp
	sub	fp, #28
 if_ne	jmp	#LR__0619
	add	fp, #4
	rdlong	arg01, fp
	sub	fp, #4
	mov	arg02, #0
	call	#_fatfs_cc_create_chain
	add	fp, #28
	wrlong	result1, fp
	sub	fp, #28
	jmp	#LR__0619
LR__0618
	add	fp, #4
	rdlong	local13, fp
	mov	arg01, local13
	sub	fp, #4
	add	local13, #24
	rdlong	arg02, local13
	call	#_fatfs_cc_create_chain
	add	fp, #28
	wrlong	result1, fp
	sub	fp, #28
LR__0619
	add	fp, #28
	rdlong	local12, fp wz
	sub	fp, #28
 if_e	jmp	#LR__0636
	add	fp, #28
	rdlong	local12, fp
	sub	fp, #28
	cmp	local12, #1 wz
 if_ne	jmp	#LR__0620
	add	fp, #4
	rdlong	local12, fp
	sub	fp, #4
	add	local12, #17
	wrbyte	#2, local12
	mov	result1, #2
	jmp	#LR__0637
LR__0620
	add	fp, #28
	rdlong	local12, fp
	sub	fp, #28
	cmp	local12, ##-1 wz
 if_ne	jmp	#LR__0621
	add	fp, #4
	rdlong	local12, fp
	sub	fp, #4
	add	local12, #17
	wrbyte	#1, local12
	mov	result1, #1
	jmp	#LR__0637
LR__0621
	add	fp, #4
	rdlong	local12, fp
	add	fp, #24
	rdlong	local13, fp
	add	local12, #24
	wrlong	local13, local12
	sub	fp, #24
	rdlong	local12, fp
	sub	fp, #4
	add	local12, #8
	rdlong	local13, local12 wz
 if_ne	jmp	#LR__0622
	add	fp, #4
	rdlong	local12, fp
	add	fp, #24
	rdlong	local13, fp
	sub	fp, #28
	add	local12, #8
	wrlong	local13, local12
LR__0622
LR__0623
	add	fp, #4
	rdlong	local06, fp
	sub	fp, #4
	add	local06, #16
	rdbyte	local12, local06
	test	local12, #128 wz
 if_e	jmp	#LR__0625
	add	fp, #24
	rdlong	local06, fp
	add	local06, #1
	rdbyte	arg01, local06
	sub	fp, #20
	rdlong	local01, fp
	mov	arg02, local01
	add	arg02, #40
	sub	fp, #4
	add	local01, #28
	rdlong	arg03, local01
	mov	arg04, #1
	call	#_fatfs_cc_disk_write
	cmp	result1, #0 wz
 if_e	jmp	#LR__0624
	add	fp, #4
	rdlong	local12, fp
	sub	fp, #4
	add	local12, #17
	wrbyte	#1, local12
	mov	result1, #1
	jmp	#LR__0637
LR__0624
	add	fp, #4
	rdlong	local01, fp
	mov	local12, local01
	sub	fp, #4
	add	local01, #16
	rdbyte	local13, local01
	and	local13, #127
	add	local12, #16
	wrbyte	local13, local12
LR__0625
	add	fp, #24
	rdlong	arg01, fp
	sub	fp, #20
	rdlong	local13, fp
	sub	fp, #4
	add	local13, #24
	rdlong	arg02, local13
	call	#_fatfs_cc_clst2sect
	add	fp, #32
	wrlong	result1, fp
	sub	fp, #32
	cmp	result1, #0 wz
 if_ne	jmp	#LR__0626
	add	fp, #4
	rdlong	local12, fp
	sub	fp, #4
	add	local12, #17
	wrbyte	#2, local12
	mov	result1, #2
	jmp	#LR__0637
LR__0626
	add	fp, #32
	rdlong	local12, fp
	add	fp, #12
	rdlong	local13, fp
	add	local12, local13
	sub	fp, #12
	wrlong	local12, fp
	sub	fp, #20
	rdlong	local12, fp
	shr	local12, #9
	add	fp, #28
	wrlong	local12, fp
	sub	fp, #40
	cmp	local12, #1 wc
 if_b	jmp	#LR__0630
	add	fp, #44
	rdlong	local12, fp
	sub	fp, #4
	rdlong	local13, fp
	add	local12, local13
	sub	fp, #16
	rdlong	local11, fp
	sub	fp, #24
	add	local11, #10
	rdword	local07, local11
	cmp	local12, local07 wcz
 if_be	jmp	#LR__0627
	add	fp, #24
	rdlong	local06, fp
	add	local06, #10
	rdword	local12, local06
	add	fp, #20
	rdlong	local07, fp
	sub	local12, local07
	sub	fp, #4
	wrlong	local12, fp
	sub	fp, #40
LR__0627
	add	fp, #24
	rdlong	local06, fp
	add	local06, #1
	rdbyte	arg01, local06
	add	fp, #24
	rdlong	arg02, fp
	sub	fp, #16
	rdlong	arg03, fp
	add	fp, #8
	rdlong	arg04, fp
	sub	fp, #40
	call	#_fatfs_cc_disk_write
	cmp	result1, #0 wz
 if_e	jmp	#LR__0628
	add	fp, #4
	rdlong	local12, fp
	sub	fp, #4
	add	local12, #17
	wrbyte	#1, local12
	mov	result1, #1
	jmp	#LR__0637
LR__0628
	add	fp, #4
	rdlong	local06, fp
	add	local06, #28
	rdlong	local12, local06
	add	fp, #28
	rdlong	local07, fp
	sub	local12, local07
	add	fp, #8
	rdlong	local09, fp
	sub	fp, #40
	cmp	local12, local09 wc
 if_ae	jmp	#LR__0629
	add	fp, #4
	rdlong	arg01, fp
	add	arg01, #40
	add	fp, #44
	rdlong	arg02, fp
	sub	fp, #44
	rdlong	local11, fp
	add	local11, #28
	rdlong	local14, local11
	add	fp, #28
	rdlong	local10, fp
	sub	fp, #32
	sub	local14, local10
	shl	local14, #9
	add	arg02, local14
	decod	arg03, #9
	call	#__system____builtin_memmove
	add	fp, #4
	rdlong	local01, fp
	mov	local12, local01
	sub	fp, #4
	add	local01, #16
	rdbyte	local13, local01
	and	local13, #127
	add	local12, #16
	wrbyte	local13, local12
LR__0629
	add	fp, #40
	rdlong	local12, fp
	shl	local12, #9
	sub	fp, #4
	wrlong	local12, fp
	sub	fp, #36
	jmp	#LR__0633
LR__0630
	add	fp, #4
	rdlong	local12, fp
	add	local12, #28
	rdlong	local13, local12
	add	fp, #28
	rdlong	local07, fp
	sub	fp, #32
	cmp	local13, local07 wz
 if_e	jmp	#LR__0631
	add	fp, #4
	rdlong	local10, fp
	mov	local09, local10
	sub	fp, #4
	add	local09, #20
	rdlong	local14, local09
	mov	local02, local14
	add	local10, #12
	rdlong	local15, local10
	mov	local16, local15
	cmp	local02, local16 wc
 if_ae	jmp	#LR__0631
	add	fp, #24
	rdlong	local13, fp
	add	local13, #1
	rdbyte	arg01, local13
	sub	fp, #20
	rdlong	local17, fp
	add	local17, #40
	mov	local18, local17
	add	fp, #28
	rdlong	local19, fp
	sub	fp, #32
	mov	local20, #1
	mov	arg02, local18
	mov	arg03, local19
	mov	arg04, #1
	call	#_fatfs_cc_disk_read
	mov	local21, result1 wz
 if_e	jmp	#LR__0631
	add	fp, #4
	rdlong	local12, fp
	sub	fp, #4
	add	local12, #17
	wrbyte	#1, local12
	mov	result1, #1
	jmp	#LR__0637
LR__0631
	add	fp, #4
	rdlong	local12, fp
	add	fp, #28
	rdlong	local13, fp
	sub	fp, #32
	add	local12, #28
	wrlong	local13, local12
LR__0632
	add	fp, #4
	rdlong	local06, fp
	add	local06, #20
	rdlong	local01, local06
	and	local01, #511
	decod	local12, #9
	sub	local12, local01
	add	fp, #32
	wrlong	local12, fp
	sub	fp, #24
	rdlong	local13, fp
	sub	fp, #12
	cmp	local12, local13 wcz
 if_a	add	fp, #12
 if_a	rdlong	local12, fp
 if_a	add	fp, #24
 if_a	wrlong	local12, fp
 if_a	sub	fp, #36
	add	fp, #4
	rdlong	local11, fp
	mov	arg01, local11
	add	arg01, #40
	add	local11, #20
	rdlong	local02, local11
	and	local02, #511
	add	arg01, local02
	add	fp, #44
	rdlong	arg02, fp
	sub	fp, #12
	rdlong	arg03, fp
	sub	fp, #36
	call	#__system____builtin_memmove
	add	fp, #4
	rdlong	local01, fp
	mov	local12, local01
	sub	fp, #4
	add	local01, #16
	rdbyte	local13, local01
	or	local13, #128
	add	local12, #16
	wrbyte	local13, local12
LR__0633
	add	fp, #12
	rdlong	local12, fp
	add	fp, #24
	rdlong	local13, fp
	sub	local12, local13
	sub	fp, #24
	wrlong	local12, fp
	add	fp, #4
	rdlong	local06, fp
	rdlong	local13, local06
	add	fp, #20
	rdlong	local11, fp
	add	local13, local11
	wrlong	local13, local06
	add	fp, #12
	rdlong	local12, fp
	sub	fp, #12
	rdlong	local13, fp
	add	local12, local13
	add	fp, #12
	wrlong	local12, fp
	sub	fp, #44
	rdlong	local01, fp
	mov	local12, local01
	add	local01, #20
	rdlong	local13, local01
	add	fp, #32
	rdlong	local09, fp
	add	local13, local09
	add	local12, #20
	wrlong	local13, local12
	sub	fp, #32
	rdlong	local01, fp
	mov	local12, local01
	mov	local11, local01
	sub	fp, #4
	add	local01, #20
	rdlong	local08, local01
	add	local11, #12
	rdlong	local02, local11
	mov	local03, local02
	cmp	local08, local03 wcz
 if_be	jmp	#LR__0634
	add	fp, #4
	rdlong	local16, fp
	sub	fp, #4
	mov	local14, local16
	add	local14, #20
	rdlong	local15, local14
	sub	local14, #20
	mov	local13, local15
	jmp	#LR__0635
LR__0634
	add	fp, #4
	rdlong	local18, fp
	sub	fp, #4
	mov	local21, local18
	add	local21, #12
	rdlong	local19, local21
	sub	local21, #12
	mov	local13, local19
LR__0635
	add	local12, #12
	wrlong	local13, local12
	jmp	#LR__0617
LR__0636
	add	fp, #4
	rdlong	local06, fp
	mov	local05, local06
	sub	fp, #4
	add	local06, #16
	rdbyte	local12, local06
	or	local12, #64
	add	local05, #16
	wrbyte	local12, local05
	mov	result1, #0
LR__0637
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_f_write_ret
	ret

_fatfs_cc_f_sync
	mov	COUNT_, #1
	call	#pushregs_
	add	ptra, #24
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #8
	mov	arg02, fp
	sub	fp, #12
	call	#_fatfs_cc_validate
	add	fp, #8
	wrlong	result1, fp
	sub	fp, #8
	cmp	result1, #0 wz
 if_ne	jmp	#LR__0641
	add	fp, #4
	rdlong	result1, fp
	sub	fp, #4
	add	result1, #16
	rdbyte	result1, result1
	test	result1, #64 wz
 if_e	jmp	#LR__0640
	add	fp, #4
	rdlong	result1, fp
	sub	fp, #4
	add	result1, #16
	rdbyte	result1, result1
	test	result1, #128 wz
 if_e	jmp	#LR__0638
	add	fp, #12
	rdlong	arg04, fp
	add	arg04, #1
	rdbyte	arg01, arg04
	sub	fp, #8
	rdlong	arg04, fp
	mov	arg02, arg04
	add	arg02, #40
	sub	fp, #4
	add	arg04, #28
	rdlong	arg03, arg04
	mov	arg04, #1
	call	#_fatfs_cc_disk_write
	cmp	result1, #0 wz
 if_ne	mov	result1, #1
 if_ne	jmp	#LR__0642
	add	fp, #4
	rdlong	result1, fp
	mov	local01, result1
	sub	fp, #4
	add	result1, #16
	rdbyte	result1, result1
	and	result1, #127
	add	local01, #16
	wrbyte	result1, local01
LR__0638
	call	#_fatfs_cc__get_fattime
	add	fp, #16
	wrlong	result1, fp
	sub	fp, #4
	rdlong	arg01, fp
	sub	fp, #8
	rdlong	local01, fp
	sub	fp, #4
	add	local01, #32
	rdlong	arg02, local01
	call	#_fatfs_cc_move_window
	add	fp, #8
	wrlong	result1, fp
	sub	fp, #8
	cmp	result1, #0 wz
 if_ne	jmp	#LR__0639
	add	fp, #4
	rdlong	local01, fp
	add	local01, #36
	rdlong	local01, local01
	add	fp, #16
	wrlong	local01, fp
	mov	arg03, local01
	add	arg03, #11
	rdbyte	arg03, arg03
	or	arg03, #32
	add	local01, #11
	wrbyte	arg03, local01
	sub	fp, #16
	rdlong	local01, fp
	rdlong	arg01, local01
	add	fp, #16
	rdlong	arg02, fp
	sub	fp, #20
	add	local01, #8
	rdlong	arg03, local01
	call	#_fatfs_cc_st_clust
	add	fp, #20
	rdlong	arg01, fp
	add	arg01, #28
	sub	fp, #16
	rdlong	local01, fp
	add	local01, #12
	rdlong	arg02, local01
	wrlong	arg02, arg01
	add	fp, #16
	rdlong	arg01, fp
	add	arg01, #22
	sub	fp, #4
	rdlong	arg02, fp
	wrlong	arg02, arg01
	add	fp, #4
	rdlong	arg01, fp
	add	arg01, #18
	mov	arg02, #0
	wrword	#0, arg01
	sub	fp, #8
	rdlong	local01, fp
	add	local01, #3
	wrbyte	#1, local01
	rdlong	arg01, fp
	sub	fp, #12
	call	#_fatfs_cc_sync_fs
	add	fp, #8
	wrlong	result1, fp
	sub	fp, #4
	rdlong	arg04, fp
	mov	local01, arg04
	sub	fp, #4
	add	arg04, #16
	rdbyte	arg04, arg04
	and	arg04, #191
	add	local01, #16
	wrbyte	arg04, local01
LR__0639
LR__0640
LR__0641
	add	fp, #8
	rdlong	result1, fp
	sub	fp, #8
LR__0642
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_f_sync_ret
	ret

_fatfs_cc_f_close
	mov	COUNT_, #1
	call	#pushregs_
	add	ptra, #16
	add	fp, #4
	wrlong	arg01, fp
	sub	fp, #4
	call	#_fatfs_cc_f_sync
	add	fp, #8
	wrlong	result1, fp
	sub	fp, #8
	cmp	result1, #0 wz
 if_ne	jmp	#LR__0643
	add	fp, #4
	rdlong	arg01, fp
	add	fp, #8
	mov	arg02, fp
	sub	fp, #12
	call	#_fatfs_cc_validate
	add	fp, #8
	wrlong	result1, fp
	sub	fp, #8
	cmp	result1, #0 wz
 if_e	add	fp, #4
 if_e	rdlong	local01, fp
 if_e	sub	fp, #4
 if_e	wrlong	#0, local01
LR__0643
	add	fp, #8
	rdlong	result1, fp
	sub	fp, #8
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_f_close_ret
	ret

_fatfs_cc_f_lseek
	mov	COUNT_, #12
	call	#pushregs_
	add	ptra, #36
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	sub	fp, #4
	rdlong	arg01, fp
	add	fp, #12
	mov	arg02, fp
	sub	fp, #16
	call	#_fatfs_cc_validate
	add	fp, #12
	wrlong	result1, fp
	sub	fp, #12
	cmp	result1, #0 wz
 if_ne	jmp	#LR__0644
	add	fp, #4
	rdlong	local01, fp
	add	local01, #17
	rdbyte	local01, local01
	add	fp, #8
	wrlong	local01, fp
	sub	fp, #12
LR__0644
	add	fp, #12
	rdlong	local01, fp wz
	sub	fp, #12
 if_ne	add	fp, #12
 if_ne	rdlong	result1, fp
 if_ne	sub	fp, #12
 if_ne	jmp	#LR__0667
	add	fp, #4
	rdlong	local01, fp
	add	fp, #4
	rdlong	local02, fp
	sub	fp, #8
	add	local01, #12
	rdlong	local03, local01
	mov	local04, local03
	cmp	local02, local04 wcz
 if_be	jmp	#LR__0645
	add	fp, #4
	rdlong	local05, fp
	sub	fp, #4
	mov	local06, local05
	add	local06, #16
	rdbyte	local07, local06
	sub	local06, #16
	getbyte	local08, local07, #0
	and	local08, #2 wz
 if_ne	jmp	#LR__0645
	add	fp, #4
	rdlong	local01, fp
	mov	local09, local01
	add	local09, #12
	rdlong	local10, local09
	sub	local09, #12
	add	fp, #4
	wrlong	local10, fp
	sub	fp, #8
LR__0645
	add	fp, #4
	rdlong	local09, fp
	add	local09, #20
	rdlong	local10, local09
	add	fp, #28
	wrlong	local10, fp
	sub	fp, #28
	rdlong	local09, fp
	add	fp, #24
	wrlong	#0, fp
	add	local09, #20
	wrlong	#0, local09
	sub	fp, #20
	rdlong	local09, fp
	sub	fp, #8
	cmp	local09, #1 wc
 if_b	jmp	#LR__0661
	add	fp, #16
	rdlong	local01, fp
	add	local01, #10
	rdword	local04, local01
	shl	local04, #9
	add	fp, #8
	wrlong	local04, fp
	add	fp, #8
	rdlong	local09, fp
	sub	fp, #32
	cmp	local09, #1 wc
 if_b	jmp	#LR__0646
	add	fp, #8
	rdlong	local04, fp
	sub	local04, #1
	add	fp, #16
	rdlong	local11, fp
	qdiv	local04, local11
	add	fp, #8
	rdlong	local05, fp
	mov	local07, local05
	sub	local07, #1
	mov	local12, local11
	getqx	local04
	qdiv	local07, local12
	sub	fp, #32
	getqx	local07
	cmp	local04, local07 wc
 if_b	jmp	#LR__0646
	add	fp, #4
	rdlong	local09, fp
	add	fp, #28
	rdlong	local10, fp
	sub	local10, #1
	sub	fp, #8
	rdlong	local04, fp
	sub	local04, #1
	andn	local10, local04
	add	local09, #20
	wrlong	local10, local09
	sub	fp, #16
	rdlong	local09, fp
	sub	fp, #4
	rdlong	local10, fp
	add	local10, #20
	rdlong	local04, local10
	sub	local09, local04
	add	fp, #4
	wrlong	local09, fp
	sub	fp, #4
	rdlong	local09, fp
	add	local09, #24
	rdlong	local10, local09
	add	fp, #16
	wrlong	local10, fp
	sub	fp, #20
	jmp	#LR__0650
LR__0646
	add	fp, #4
	rdlong	local09, fp
	add	local09, #8
	rdlong	local09, local09 wz
	add	fp, #16
	wrlong	local09, fp
	sub	fp, #20
 if_ne	jmp	#LR__0649
	add	fp, #4
	rdlong	arg01, fp
	sub	fp, #4
	mov	arg02, #0
	call	#_fatfs_cc_create_chain
	add	fp, #20
	wrlong	result1, fp
	sub	fp, #20
	cmp	result1, #1 wz
 if_ne	jmp	#LR__0647
	add	fp, #4
	rdlong	local09, fp
	sub	fp, #4
	add	local09, #17
	wrbyte	#2, local09
	mov	result1, #2
	jmp	#LR__0667
LR__0647
	add	fp, #20
	rdlong	local09, fp
	sub	fp, #20
	cmp	local09, ##-1 wz
 if_ne	jmp	#LR__0648
	add	fp, #4
	rdlong	local09, fp
	sub	fp, #4
	add	local09, #17
	wrbyte	#1, local09
	mov	result1, #1
	jmp	#LR__0667
LR__0648
	add	fp, #4
	rdlong	local09, fp
	add	fp, #16
	rdlong	local10, fp
	sub	fp, #20
	add	local09, #8
	wrlong	local10, local09
LR__0649
	add	fp, #4
	rdlong	local09, fp
	add	fp, #16
	rdlong	local10, fp
	sub	fp, #20
	add	local09, #24
	wrlong	local10, local09
LR__0650
	add	fp, #20
	rdlong	local09, fp wz
	sub	fp, #20
 if_e	jmp	#LR__0660
LR__0651
	add	fp, #8
	rdlong	local09, fp
	add	fp, #16
	rdlong	local10, fp
	sub	fp, #24
	cmp	local09, local10 wcz
 if_be	jmp	#LR__0657
	add	fp, #8
	rdlong	local09, fp
	add	fp, #16
	rdlong	local10, fp
	sub	local09, local10
	sub	fp, #16
	wrlong	local09, fp
	sub	fp, #4
	rdlong	local04, fp
	mov	local02, local04
	add	local02, #20
	rdlong	local10, local02
	add	fp, #20
	rdlong	local06, fp
	add	local10, local06
	add	local04, #20
	wrlong	local10, local04
	sub	fp, #20
	rdlong	local01, fp
	sub	fp, #4
	add	local01, #16
	rdbyte	local09, local01
	test	local09, #2 wz
 if_e	jmp	#LR__0652
	add	fp, #4
	rdlong	arg01, fp
	add	fp, #16
	rdlong	arg02, fp
	sub	fp, #20
	call	#_fatfs_cc_create_chain
	add	fp, #20
	wrlong	result1, fp
	cmps	result1, #0 wz
	sub	fp, #20
 if_e	add	fp, #8
 if_e	wrlong	#0, fp
 if_e	sub	fp, #8
 if_e	jmp	#LR__0657
	jmp	#LR__0653
LR__0652
	add	fp, #4
	rdlong	arg01, fp
	add	fp, #16
	rdlong	arg02, fp
	sub	fp, #20
	call	#_fatfs_cc_get_fat
	add	fp, #20
	wrlong	result1, fp
	sub	fp, #20
LR__0653
	add	fp, #20
	rdlong	local09, fp
	sub	fp, #20
	cmp	local09, ##-1 wz
 if_ne	jmp	#LR__0654
	add	fp, #4
	rdlong	local09, fp
	sub	fp, #4
	add	local09, #17
	wrbyte	#1, local09
	mov	result1, #1
	jmp	#LR__0667
LR__0654
	add	fp, #20
	rdlong	local09, fp
	sub	fp, #20
	cmp	local09, #2 wc
 if_b	jmp	#LR__0655
	add	fp, #16
	rdlong	local10, fp
	add	fp, #4
	rdlong	local04, fp
	sub	fp, #20
	add	local10, #20
	rdlong	local08, local10
	cmp	local04, local08 wc
 if_b	jmp	#LR__0656
LR__0655
	add	fp, #4
	rdlong	local09, fp
	sub	fp, #4
	add	local09, #17
	wrbyte	#2, local09
	mov	result1, #2
	jmp	#LR__0667
LR__0656
	add	fp, #4
	rdlong	local09, fp
	add	fp, #16
	rdlong	local10, fp
	sub	fp, #20
	add	local09, #24
	wrlong	local10, local09
	jmp	#LR__0651
LR__0657
	add	fp, #4
	rdlong	local02, fp
	mov	local09, local02
	add	local02, #20
	rdlong	local10, local02
	add	fp, #4
	rdlong	local08, fp
	add	local10, local08
	add	local09, #20
	wrlong	local10, local09
	rdlong	local09, fp
	sub	fp, #8
	test	local09, #511 wz
 if_e	jmp	#LR__0659
	add	fp, #16
	rdlong	arg01, fp
	add	fp, #4
	rdlong	arg02, fp
	sub	fp, #20
	call	#_fatfs_cc_clst2sect
	add	fp, #28
	wrlong	result1, fp
	sub	fp, #28
	cmp	result1, #0 wz
 if_ne	jmp	#LR__0658
	add	fp, #4
	rdlong	local09, fp
	sub	fp, #4
	add	local09, #17
	wrbyte	#2, local09
	mov	result1, #2
	jmp	#LR__0667
LR__0658
	add	fp, #28
	rdlong	local09, fp
	sub	fp, #20
	rdlong	local10, fp
	shr	local10, #9
	add	local09, local10
	add	fp, #20
	wrlong	local09, fp
	sub	fp, #28
LR__0659
LR__0660
LR__0661
	add	fp, #4
	rdlong	local10, fp
	mov	local09, local10
	sub	fp, #4
	add	local09, #20
	rdlong	local04, local09
	add	local10, #12
	rdlong	local08, local10
	cmp	local04, local08 wcz
 if_be	jmp	#LR__0662
	add	fp, #4
	rdlong	local10, fp
	mov	local09, local10
	add	local10, #20
	rdlong	local04, local10
	add	local09, #12
	wrlong	local04, local09
	rdlong	local02, fp
	mov	local09, local02
	sub	fp, #4
	add	local02, #16
	rdbyte	local10, local02
	or	local10, #64
	add	local09, #16
	wrbyte	local10, local09
LR__0662
	add	fp, #4
	rdlong	local09, fp
	sub	fp, #4
	add	local09, #20
	rdlong	local10, local09
	test	local10, #511 wz
 if_e	jmp	#LR__0666
	add	fp, #4
	rdlong	local08, fp
	mov	local03, local08
	add	fp, #24
	rdlong	local05, fp
	sub	fp, #28
	mov	local06, local05
	add	local03, #28
	rdlong	local12, local03
	sub	local03, #28
	mov	local07, local12
	cmp	local06, local07 wz
 if_e	jmp	#LR__0666
	add	fp, #4
	rdlong	local01, fp
	sub	fp, #4
	add	local01, #16
	rdbyte	local09, local01
	test	local09, #128 wz
 if_e	jmp	#LR__0664
	add	fp, #16
	rdlong	local01, fp
	add	local01, #1
	rdbyte	arg01, local01
	sub	fp, #12
	rdlong	local02, fp
	mov	arg02, local02
	add	arg02, #40
	sub	fp, #4
	add	local02, #28
	rdlong	arg03, local02
	mov	arg04, #1
	call	#_fatfs_cc_disk_write
	cmp	result1, #0 wz
 if_e	jmp	#LR__0663
	add	fp, #4
	rdlong	local09, fp
	sub	fp, #4
	add	local09, #17
	wrbyte	#1, local09
	mov	result1, #1
	jmp	#LR__0667
LR__0663
	add	fp, #4
	rdlong	local02, fp
	mov	local09, local02
	sub	fp, #4
	add	local02, #16
	rdbyte	local03, local02
	getbyte	local10, local03, #0
	and	local10, #127
	add	local09, #16
	wrbyte	local10, local09
LR__0664
	add	fp, #16
	rdlong	local01, fp
	add	local01, #1
	rdbyte	arg01, local01
	sub	fp, #12
	rdlong	local04, fp
	add	local04, #40
	add	fp, #24
	rdlong	arg03, fp
	sub	fp, #28
	mov	local02, #1
	mov	arg02, local04
	mov	arg04, #1
	call	#_fatfs_cc_disk_read
	cmp	result1, #0 wz
 if_e	jmp	#LR__0665
	add	fp, #4
	rdlong	local09, fp
	sub	fp, #4
	add	local09, #17
	wrbyte	#1, local09
	mov	result1, #1
	jmp	#LR__0667
LR__0665
	add	fp, #4
	rdlong	local01, fp
	mov	local09, local01
	add	fp, #24
	rdlong	local10, fp
	sub	fp, #28
	add	local09, #28
	wrlong	local10, local09
	sub	local09, #28
LR__0666
	add	fp, #12
	rdlong	result1, fp
	sub	fp, #12
LR__0667
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_f_lseek_ret
	ret

_fatfs_cc_f_opendir
	mov	COUNT_, #1
	call	#pushregs_
	add	ptra, #20
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	sub	fp, #4
	rdlong	arg03, fp wz
	sub	fp, #4
 if_e	mov	result1, #9
 if_e	jmp	#LR__0674
	add	fp, #8
	mov	arg01, fp
	add	fp, #8
	mov	arg02, fp
	sub	fp, #16
	mov	arg03, #0
	call	#_fatfs_cc_mount_volume
	add	fp, #12
	wrlong	result1, fp
	sub	fp, #12
	cmp	result1, #0 wz
 if_ne	jmp	#LR__0673
	add	fp, #4
	rdlong	arg02, fp
	add	fp, #12
	rdlong	result1, fp
	wrlong	result1, arg02
	sub	fp, #12
	rdlong	arg01, fp
	add	fp, #4
	rdlong	arg02, fp
	sub	fp, #8
	call	#_fatfs_cc_follow_path
	add	fp, #12
	wrlong	result1, fp
	sub	fp, #12
	cmp	result1, #0 wz
 if_ne	jmp	#LR__0672
	add	fp, #4
	rdlong	result1, fp
	sub	fp, #4
	add	result1, #43
	rdbyte	result1, result1
	test	result1, #128 wz
 if_ne	jmp	#LR__0670
	add	fp, #4
	rdlong	arg02, fp
	sub	fp, #4
	add	arg02, #6
	rdbyte	result1, arg02
	test	result1, #16 wz
 if_e	jmp	#LR__0668
	add	fp, #4
	rdlong	arg02, fp
	mov	local01, arg02
	add	fp, #12
	rdlong	arg01, fp
	sub	fp, #16
	add	arg02, #28
	rdlong	arg02, arg02
	call	#_fatfs_cc_ld_clust
	add	local01, #8
	wrlong	result1, local01
	jmp	#LR__0669
LR__0668
	add	fp, #12
	wrlong	#5, fp
	sub	fp, #12
LR__0669
LR__0670
	add	fp, #12
	rdlong	local01, fp wz
	sub	fp, #12
 if_ne	jmp	#LR__0671
	add	fp, #4
	rdlong	local01, fp
	add	fp, #12
	rdlong	arg02, fp
	add	arg02, #6
	rdword	arg02, arg02
	add	local01, #4
	wrword	arg02, local01
	sub	fp, #12
	rdlong	arg01, fp
	sub	fp, #4
	mov	arg02, #0
	call	#_fatfs_cc_dir_sdi
	add	fp, #12
	wrlong	result1, fp
	sub	fp, #12
LR__0671
LR__0672
	add	fp, #12
	rdlong	local01, fp
	sub	fp, #12
	cmp	local01, #4 wz
 if_e	add	fp, #12
 if_e	wrlong	#5, fp
 if_e	sub	fp, #12
LR__0673
	add	fp, #12
	rdlong	local01, fp wz
	sub	fp, #12
 if_ne	add	fp, #4
 if_ne	rdlong	local01, fp
 if_ne	sub	fp, #4
 if_ne	wrlong	#0, local01
	add	fp, #12
	rdlong	result1, fp
	sub	fp, #12
LR__0674
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_f_opendir_ret
	ret

_fatfs_cc_f_closedir
	mov	COUNT_, #0
	call	#pushregs_
	add	ptra, #16
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #8
	mov	arg02, fp
	sub	fp, #12
	call	#_fatfs_cc_validate
	add	fp, #8
	wrlong	result1, fp
	sub	fp, #8
	cmp	result1, #0 wz
 if_e	add	fp, #4
 if_e	rdlong	result1, fp
 if_e	sub	fp, #4
 if_e	wrlong	#0, result1
	add	fp, #8
	rdlong	result1, fp
	sub	fp, #8
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_f_closedir_ret
	ret

_fatfs_cc_f_readdir
	mov	COUNT_, #0
	call	#pushregs_
	add	ptra, #20
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	sub	fp, #4
	rdlong	arg01, fp
	add	fp, #12
	mov	arg02, fp
	sub	fp, #16
	call	#_fatfs_cc_validate
	add	fp, #12
	wrlong	result1, fp
	sub	fp, #12
	cmp	result1, #0 wz
 if_ne	jmp	#LR__0678
	add	fp, #8
	rdlong	result1, fp wz
	sub	fp, #8
 if_ne	jmp	#LR__0675
	add	fp, #4
	rdlong	arg01, fp
	sub	fp, #4
	mov	arg02, #0
	call	#_fatfs_cc_dir_sdi
	add	fp, #12
	wrlong	result1, fp
	sub	fp, #12
	jmp	#LR__0677
LR__0675
	add	fp, #4
	rdlong	arg01, fp
	sub	fp, #4
	mov	arg02, #0
	call	#_fatfs_cc_dir_read
	add	fp, #12
	wrlong	result1, fp
	sub	fp, #12
	cmp	result1, #4 wz
 if_e	add	fp, #12
 if_e	wrlong	#0, fp
 if_e	sub	fp, #12
	add	fp, #12
	rdlong	result1, fp wz
	sub	fp, #12
 if_ne	jmp	#LR__0676
	add	fp, #4
	rdlong	arg01, fp
	add	fp, #4
	rdlong	arg02, fp
	sub	fp, #8
	call	#_fatfs_cc_get_fileinfo
	add	fp, #4
	rdlong	arg01, fp
	sub	fp, #4
	mov	arg02, #0
	call	#_fatfs_cc_dir_next
	add	fp, #12
	wrlong	result1, fp
	sub	fp, #12
	cmp	result1, #4 wz
 if_e	add	fp, #12
 if_e	wrlong	#0, fp
 if_e	sub	fp, #12
LR__0676
LR__0677
LR__0678
	add	fp, #12
	rdlong	result1, fp
	sub	fp, #12
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_f_readdir_ret
	ret

_fatfs_cc_f_stat
	mov	COUNT_, #0
	call	#pushregs_
	add	ptra, #60
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	sub	fp, #4
	mov	arg01, fp
	add	fp, #12
	mov	arg02, fp
	sub	fp, #16
	mov	arg03, #0
	call	#_fatfs_cc_mount_volume
	add	fp, #12
	wrlong	result1, fp
	sub	fp, #12
	cmp	result1, #0 wz
 if_ne	jmp	#LR__0682
	add	fp, #16
	mov	arg01, fp
	sub	fp, #12
	rdlong	arg02, fp
	sub	fp, #4
	call	#_fatfs_cc_follow_path
	add	fp, #12
	wrlong	result1, fp
	sub	fp, #12
	cmp	result1, #0 wz
 if_ne	jmp	#LR__0681
	add	fp, #59
	rdbyte	result1, fp
	sub	fp, #59
	test	result1, #128 wz
 if_ne	add	fp, #12
 if_ne	wrlong	#6, fp
 if_ne	sub	fp, #12
 if_ne	jmp	#LR__0680
	add	fp, #8
	rdlong	result1, fp wz
	sub	fp, #8
 if_e	jmp	#LR__0679
	add	fp, #16
	mov	arg01, fp
	sub	fp, #8
	rdlong	arg02, fp
	sub	fp, #8
	call	#_fatfs_cc_get_fileinfo
LR__0679
LR__0680
LR__0681
LR__0682
	add	fp, #12
	rdlong	result1, fp
	sub	fp, #12
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_f_stat_ret
	ret

_fatfs_cc_f_unlink
	mov	COUNT_, #4
	call	#pushregs_
	add	ptra, #108
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #96
	wrlong	#0, fp
	sub	fp, #96
	mov	arg01, fp
	add	fp, #100
	mov	arg02, fp
	sub	fp, #104
	mov	arg03, #2
	call	#_fatfs_cc_mount_volume
	add	fp, #8
	wrlong	result1, fp
	sub	fp, #8
	cmp	result1, #0 wz
 if_ne	jmp	#LR__0691
	add	fp, #104
	rdlong	arg02, fp
	sub	fp, #92
	wrlong	arg02, fp
	mov	arg01, fp
	sub	fp, #8
	rdlong	arg02, fp
	sub	fp, #4
	call	#_fatfs_cc_follow_path
	add	fp, #8
	wrlong	result1, fp
	cmps	result1, #0 wz
	sub	fp, #8
 if_ne	jmp	#LR__0690
	add	fp, #55
	rdbyte	result1, fp
	sub	fp, #55
	test	result1, #128 wz
 if_ne	add	fp, #8
 if_ne	wrlong	#6, fp
 if_ne	sub	fp, #8
 if_ne	jmp	#LR__0683
	add	fp, #18
	rdbyte	result1, fp
	sub	fp, #18
	test	result1, #1 wz
 if_ne	add	fp, #8
 if_ne	wrlong	#7, fp
 if_ne	sub	fp, #8
LR__0683
	add	fp, #8
	rdlong	result1, fp wz
	sub	fp, #8
 if_ne	jmp	#LR__0686
	add	fp, #104
	rdlong	arg01, fp
	sub	fp, #64
	rdlong	arg02, fp
	sub	fp, #40
	call	#_fatfs_cc_ld_clust
	add	fp, #100
	wrlong	result1, fp
	sub	fp, #82
	rdbyte	result1, fp
	sub	fp, #18
	test	result1, #16 wz
 if_e	jmp	#LR__0685
	add	fp, #104
	rdlong	result1, fp
	sub	fp, #48
	wrlong	result1, fp
	add	fp, #44
	rdlong	arg02, fp
	sub	fp, #36
	wrlong	arg02, fp
	sub	fp, #8
	mov	arg01, fp
	sub	fp, #56
	mov	arg02, #0
	call	#_fatfs_cc_dir_sdi
	add	fp, #8
	wrlong	result1, fp
	sub	fp, #8
	cmp	result1, #0 wz
 if_ne	jmp	#LR__0684
	add	fp, #56
	mov	arg01, fp
	sub	fp, #56
	mov	arg02, #0
	call	#_fatfs_cc_dir_read
	add	fp, #8
	wrlong	result1, fp
	cmps	result1, #0 wz
	sub	fp, #8
 if_e	add	fp, #8
 if_e	wrlong	#7, fp
 if_e	sub	fp, #8
	add	fp, #8
	rdlong	result1, fp
	sub	fp, #8
	cmp	result1, #4 wz
 if_e	add	fp, #8
 if_e	wrlong	#0, fp
 if_e	sub	fp, #8
LR__0684
LR__0685
LR__0686
	add	fp, #8
	rdlong	result1, fp wz
	sub	fp, #8
 if_ne	jmp	#LR__0689
	add	fp, #12
	mov	arg01, fp
	sub	fp, #12
	call	#_fatfs_cc_dir_remove
	add	fp, #8
	wrlong	result1, fp
	sub	fp, #8
	cmp	result1, #0 wz
 if_ne	jmp	#LR__0687
	add	fp, #100
	rdlong	local01, fp wz
	sub	fp, #100
 if_e	jmp	#LR__0687
	add	fp, #12
	mov	arg01, fp
	add	fp, #88
	rdlong	local02, fp
	sub	fp, #100
	mov	local03, #0
	mov	arg02, local02
	mov	arg03, #0
	call	#_fatfs_cc_remove_chain
	mov	local04, result1
	add	fp, #8
	wrlong	local04, fp
	sub	fp, #8
LR__0687
	add	fp, #8
	rdlong	local04, fp wz
	sub	fp, #8
 if_ne	jmp	#LR__0688
	add	fp, #104
	rdlong	arg01, fp
	sub	fp, #104
	call	#_fatfs_cc_sync_fs
	add	fp, #8
	wrlong	result1, fp
	sub	fp, #8
LR__0688
LR__0689
LR__0690
LR__0691
	add	fp, #8
	rdlong	result1, fp
	sub	fp, #8
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_f_unlink_ret
	ret

_fatfs_cc_f_mkdir
	mov	COUNT_, #4
	call	#pushregs_
	add	ptra, #88
	add	fp, #4
	wrlong	arg01, fp
	mov	arg01, fp
	add	fp, #68
	mov	arg02, fp
	sub	fp, #72
	mov	arg03, #2
	call	#_fatfs_cc_mount_volume
	add	fp, #8
	wrlong	result1, fp
	sub	fp, #8
	cmp	result1, #0 wz
 if_ne	jmp	#LR__0697
	add	fp, #72
	rdlong	arg02, fp
	sub	fp, #60
	wrlong	arg02, fp
	mov	arg01, fp
	sub	fp, #8
	rdlong	local01, fp
	sub	fp, #4
	mov	arg02, local01
	call	#_fatfs_cc_follow_path
	add	fp, #8
	wrlong	result1, fp
	mov	local02, result1 wz
	sub	fp, #8
 if_e	add	fp, #8
 if_e	wrlong	#8, fp
 if_e	sub	fp, #8
	add	fp, #8
	rdlong	result1, fp
	sub	fp, #8
	cmp	result1, #4 wz
 if_ne	jmp	#LR__0696
	add	fp, #72
	rdlong	arg02, fp
	sub	fp, #16
	wrlong	arg02, fp
	mov	arg01, fp
	sub	fp, #56
	mov	arg02, #0
	call	#_fatfs_cc_create_chain
	add	fp, #76
	wrlong	result1, fp
	sub	fp, #68
	wrlong	#0, fp
	add	fp, #68
	rdlong	result1, fp wz
	sub	fp, #76
 if_e	add	fp, #8
 if_e	wrlong	#7, fp
 if_e	sub	fp, #8
	add	fp, #76
	rdlong	result1, fp
	sub	fp, #76
	cmp	result1, #1 wz
 if_e	add	fp, #8
 if_e	wrlong	#2, fp
 if_e	sub	fp, #8
	add	fp, #76
	rdlong	local03, fp
	sub	fp, #76
	cmp	local03, ##-1 wz
 if_e	add	fp, #8
 if_e	wrlong	#1, fp
 if_e	sub	fp, #8
	call	#_fatfs_cc__get_fattime
	add	fp, #84
	wrlong	result1, fp
	sub	fp, #76
	rdlong	local03, fp wz
	sub	fp, #8
 if_ne	jmp	#LR__0693
	add	fp, #72
	rdlong	arg01, fp
	add	fp, #4
	rdlong	local01, fp
	sub	fp, #76
	mov	arg02, local01
	call	#_fatfs_cc_dir_clear
	add	fp, #8
	wrlong	result1, fp
	mov	local02, result1 wz
	sub	fp, #8
 if_ne	jmp	#LR__0692
	add	fp, #72
	rdlong	arg01, fp
	sub	fp, #72
	add	arg01, #48
	mov	arg02, #32
	mov	arg03, #11
	mov	local04, arg01
	call	#\builtin_bytefill_
	add	fp, #72
	rdlong	local03, fp
	add	local03, #48
	wrbyte	#46, local03
	rdlong	local03, fp
	add	local03, #59
	wrbyte	#16, local03
	rdlong	arg01, fp
	add	arg01, #70
	add	fp, #12
	rdlong	arg02, fp
	wrlong	arg02, arg01
	sub	fp, #12
	rdlong	arg02, fp
	mov	arg01, arg02
	add	arg02, #48
	add	fp, #4
	rdlong	arg03, fp
	sub	fp, #76
	call	#_fatfs_cc_st_clust
	add	fp, #72
	rdlong	arg02, fp
	mov	arg01, arg02
	add	arg01, #80
	sub	fp, #72
	add	arg02, #48
	mov	arg03, #32
	call	#__system____builtin_memmove
	add	fp, #72
	rdlong	local03, fp
	add	local03, #81
	wrbyte	#46, local03
	sub	fp, #52
	rdlong	arg03, fp
	add	fp, #60
	wrlong	arg03, fp
	sub	fp, #8
	rdlong	arg02, fp
	mov	arg01, arg02
	add	arg02, #80
	sub	fp, #72
	call	#_fatfs_cc_st_clust
	add	fp, #72
	rdlong	local03, fp
	add	local03, #3
	wrbyte	#1, local03
	sub	fp, #60
	mov	arg01, fp
	sub	fp, #12
	call	#_fatfs_cc_dir_register
	add	fp, #8
	wrlong	result1, fp
	sub	fp, #8
LR__0692
LR__0693
	add	fp, #8
	rdlong	local03, fp wz
	sub	fp, #8
 if_ne	jmp	#LR__0694
	add	fp, #40
	rdlong	arg01, fp
	add	arg01, #22
	add	fp, #44
	rdlong	arg02, fp
	wrlong	arg02, arg01
	sub	fp, #12
	rdlong	arg01, fp
	sub	fp, #32
	rdlong	arg02, fp
	add	fp, #36
	rdlong	arg03, fp
	sub	fp, #76
	call	#_fatfs_cc_st_clust
	add	fp, #40
	rdlong	local03, fp
	add	local03, #11
	wrbyte	#16, local03
	add	fp, #32
	rdlong	local03, fp
	add	local03, #3
	wrbyte	#1, local03
	sub	fp, #64
	rdlong	local03, fp wz
	sub	fp, #8
 if_ne	jmp	#LR__0695
	add	fp, #72
	rdlong	arg01, fp
	sub	fp, #72
	call	#_fatfs_cc_sync_fs
	add	fp, #8
	wrlong	result1, fp
	sub	fp, #8
	jmp	#LR__0695
LR__0694
	add	fp, #56
	mov	arg01, fp
	add	fp, #20
	rdlong	arg02, fp
	sub	fp, #76
	mov	arg03, #0
	call	#_fatfs_cc_remove_chain
LR__0695
LR__0696
LR__0697
	add	fp, #8
	rdlong	result1, fp
	sub	fp, #8
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_f_mkdir_ret
	ret

_fatfs_cc_f_rename
	mov	COUNT_, #9
	call	#pushregs_
	add	ptra, #148
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	mov	arg01, fp
	sub	fp, #8
	call	#_fatfs_cc_get_ldnumber
	add	fp, #4
	mov	arg01, fp
	add	fp, #100
	mov	arg02, fp
	sub	fp, #104
	mov	arg03, #2
	call	#_fatfs_cc_mount_volume
	add	fp, #12
	wrlong	result1, fp
	sub	fp, #12
	cmp	result1, #0 wz
 if_ne	jmp	#LR__0711
	add	fp, #104
	rdlong	arg02, fp
	sub	fp, #88
	wrlong	arg02, fp
	mov	arg01, fp
	sub	fp, #12
	rdlong	arg02, fp
	sub	fp, #4
	call	#_fatfs_cc_follow_path
	add	fp, #12
	wrlong	result1, fp
	cmps	result1, #0 wz
	sub	fp, #12
 if_ne	jmp	#LR__0698
	add	fp, #59
	rdbyte	result1, fp
	sub	fp, #59
	test	result1, #160 wz
 if_ne	add	fp, #12
 if_ne	wrlong	#6, fp
 if_ne	sub	fp, #12
LR__0698
	add	fp, #12
	rdlong	local01, fp wz
	sub	fp, #12
 if_ne	jmp	#LR__0710
	add	fp, #108
	mov	arg01, fp
	sub	fp, #64
	rdlong	arg02, fp
	sub	fp, #44
	mov	arg03, #32
	call	#__system____builtin_memmove
	add	fp, #60
	mov	arg01, fp
	sub	fp, #44
	mov	arg02, fp
	sub	fp, #16
	mov	arg03, #44
	call	#__system____builtin_memmove
	add	fp, #60
	mov	arg01, fp
	sub	fp, #52
	rdlong	arg02, fp
	sub	fp, #8
	call	#_fatfs_cc_follow_path
	add	fp, #12
	wrlong	result1, fp
	sub	fp, #12
	cmp	result1, #0 wz
 if_ne	jmp	#LR__0701
	add	fp, #68
	rdlong	arg01, fp
	sub	fp, #44
	rdlong	result1, fp
	sub	fp, #24
	cmp	arg01, result1 wz
 if_ne	jmp	#LR__0699
	add	fp, #76
	rdlong	result1, fp
	sub	fp, #44
	rdlong	local02, fp
	sub	fp, #32
	cmp	result1, local02 wz
 if_e	mov	local01, #4
 if_e	jmp	#LR__0700
LR__0699
	mov	local01, #8
LR__0700
	add	fp, #12
	wrlong	local01, fp
	sub	fp, #12
LR__0701
	add	fp, #12
	rdlong	local01, fp
	sub	fp, #12
	cmp	local01, #4 wz
 if_ne	jmp	#LR__0707
	add	fp, #60
	mov	arg01, fp
	sub	fp, #60
	call	#_fatfs_cc_dir_register
	add	fp, #12
	wrlong	result1, fp
	sub	fp, #12
	cmp	result1, #0 wz
 if_ne	jmp	#LR__0706
	add	fp, #88
	rdlong	arg01, fp
	add	fp, #52
	wrlong	arg01, fp
	add	arg01, #13
	sub	fp, #32
	mov	arg02, fp
	sub	fp, #108
	add	arg02, #13
	mov	arg03, #19
	call	#__system____builtin_memmove
	add	fp, #140
	rdlong	local01, fp
	sub	fp, #21
	rdbyte	result1, fp
	add	local01, #11
	wrbyte	result1, local01
	add	fp, #21
	rdlong	local01, fp
	sub	fp, #140
	add	local01, #11
	rdbyte	local01, local01
	test	local01, #16 wz
 if_ne	jmp	#LR__0702
	add	fp, #140
	rdlong	result1, fp
	mov	local01, result1
	sub	fp, #140
	add	result1, #11
	rdbyte	result1, result1
	or	result1, #32
	add	local01, #11
	wrbyte	result1, local01
LR__0702
	add	fp, #104
	rdlong	local01, fp
	add	local01, #3
	wrbyte	#1, local01
	add	fp, #36
	rdlong	local01, fp
	sub	fp, #140
	add	local01, #11
	rdbyte	local01, local01
	test	local01, #16 wz
 if_e	jmp	#LR__0705
	add	fp, #24
	rdlong	local03, fp
	mov	local04, local03
	add	fp, #44
	rdlong	local05, fp
	sub	fp, #68
	mov	local06, local05
	cmp	local04, local06 wz
 if_e	jmp	#LR__0705
	add	fp, #104
	rdlong	arg01, fp
	mov	local01, arg01
	add	fp, #36
	rdlong	local07, fp
	sub	fp, #140
	mov	local08, local07
	mov	arg02, local08
	call	#_fatfs_cc_ld_clust
	mov	arg02, result1
	mov	arg01, local01
	call	#_fatfs_cc_clst2sect
	add	fp, #144
	wrlong	result1, fp
	mov	local09, result1 wz
	sub	fp, #144
 if_e	mov	local01, #2
 if_e	add	fp, #12
 if_e	wrlong	#2, fp
 if_e	sub	fp, #12
 if_e	jmp	#LR__0704
	add	fp, #104
	rdlong	arg01, fp
	add	fp, #40
	rdlong	arg02, fp
	sub	fp, #144
	call	#_fatfs_cc_move_window
	add	fp, #12
	wrlong	result1, fp
	add	fp, #92
	rdlong	local08, fp
	mov	local07, local08
	add	local07, #48
	mov	local01, local07
	add	local01, #32
	add	fp, #36
	wrlong	local01, fp
	sub	fp, #128
	rdlong	local09, fp
	sub	fp, #12
	mov	local01, local09 wz
 if_ne	jmp	#LR__0703
	add	fp, #140
	rdlong	local04, fp
	sub	fp, #140
	mov	local07, local04
	add	local07, #1
	rdbyte	local03, local07
	sub	local07, #1
	getbyte	local08, local03, #0
	cmp	local08, #46 wz
 if_ne	jmp	#LR__0703
	add	fp, #104
	rdlong	arg01, fp
	add	fp, #36
	rdlong	arg02, fp
	sub	fp, #72
	rdlong	local07, fp
	sub	fp, #68
	mov	arg03, local07
	call	#_fatfs_cc_st_clust
	add	fp, #104
	rdlong	local09, fp
	sub	fp, #104
	mov	local01, local09
	mov	local08, #1
	add	local01, #3
	wrbyte	#1, local01
	sub	local01, #3
LR__0703
LR__0704
LR__0705
LR__0706
LR__0707
	add	fp, #12
	rdlong	local01, fp wz
	sub	fp, #12
 if_ne	jmp	#LR__0709
	add	fp, #16
	mov	arg01, fp
	sub	fp, #16
	call	#_fatfs_cc_dir_remove
	add	fp, #12
	wrlong	result1, fp
	sub	fp, #12
	cmp	result1, #0 wz
 if_ne	jmp	#LR__0708
	add	fp, #104
	rdlong	arg01, fp
	sub	fp, #104
	call	#_fatfs_cc_sync_fs
	add	fp, #12
	wrlong	result1, fp
	sub	fp, #12
LR__0708
LR__0709
LR__0710
LR__0711
	add	fp, #12
	rdlong	result1, fp
	sub	fp, #12
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_f_rename_ret
	ret

_fatfs_cc_time
	mov	COUNT_, #0
	call	#pushregs_
	add	ptra, #20
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	mov	arg01, fp
	sub	fp, #8
	mov	arg02, #0
	call	#_fatfs_cc_gettimeofday
	add	fp, #8
	rdlong	result1, fp
	add	fp, #8
	wrlong	result1, fp
	sub	fp, #12
	rdlong	result1, fp wz
	sub	fp, #4
 if_e	jmp	#LR__0712
	add	fp, #4
	rdlong	result1, fp
	add	fp, #12
	rdlong	arg02, fp
	sub	fp, #16
	wrlong	arg02, result1
LR__0712
	add	fp, #16
	rdlong	result1, fp
	sub	fp, #16
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_time_ret
	ret

_fatfs_cc_mktime
	mov	COUNT_, #7
	call	#pushregs_
	mov	local01, arg01
	add	local01, #20
	rdlong	arg01, local01
	sub	local01, #20
	cmps	arg01, #70 wc
 if_b	neg	result1, #1
 if_b	jmp	#LR__0717
	mov	local02, ##1900
	add	local01, #20
	rdlong	result1, local01
	add	local02, result1
	sub	local01, #8
	rdlong	local03, local01
	sub	local03, #1
	add	local01, #4
	rdlong	arg01, local01
	sub	local01, #16
	shl	arg01, #2
	add	ptr__fatfs_cc_dat__, #404
	add	arg01, ptr__fatfs_cc_dat__
	rdlong	result1, arg01
	add	local03, result1
	mov	arg01, local02
	sub	ptr__fatfs_cc_dat__, #404
	call	#_fatfs_cc__is_leap_year
	cmp	result1, #0 wz
 if_e	jmp	#LR__0713
	mov	local04, #0
	add	local01, #16
	rdlong	result1, local01
	sub	local01, #16
	cmps	result1, #2 wc
 if_ae	mov	local04, #1
	jmp	#LR__0714
LR__0713
	mov	local04, #0
LR__0714
	add	local01, #4
	rdlong	local05, local01
	sub	local01, #4
	rdlong	local06, local01
	add	local01, #8
	rdlong	result1, local01
	qmul	result1, ##3600
	add	local03, local04
	mov	local04, local05
	shl	local04, #4
	sub	local04, local05
	shl	local04, #2
	add	local06, local04
	sub	local01, #8
	getqx	local05
	qmul	local03, ##86400
	add	local06, local05
	mov	local03, local02
	sub	local03, ##1970
	getqx	local05
	qmul	local03, ##31536000
	add	local06, local05
	mov	local03, local02
	sub	local03, ##1969
	abs	local07, local03 wc
	shr	local07, #2
	negc	local07, local07
	cmps	local02, ##2001 wc
	getqx	local05
	add	local06, local05
 if_b	jmp	#LR__0715
	sub	local02, ##2000
	abs	local05, local02 wc
	qdiv	local05, #100
	getqx	local05
	negc	local05, local05
	sub	local07, local05
LR__0715
	qmul	local07, ##86400
	getqx	local07
	add	local06, local07
	call	#_fatfs_cc__tzset
	add	ptr__fatfs_cc_dat__, #352
	rdlong	local07, ptr__fatfs_cc_dat__
	add	local06, local07
	add	ptr__fatfs_cc_dat__, #104
	rdlong	arg01, ptr__fatfs_cc_dat__
	sub	ptr__fatfs_cc_dat__, #456
	cmp	arg01, #1 wz
 if_ne	jmp	#LR__0716
	mov	arg01, local01
	call	#_fatfs_cc___indst
	cmps	result1, #0 wz
 if_ne	sub	local06, ##3600
LR__0716
	mov	result1, local06
LR__0717
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_mktime_ret
	ret

_fatfs_cc__gmtime_r
	mov	COUNT_, #3
	call	#pushregs_
	rdlong	local01, arg01
	qdiv	local01, ##86400
	getqx	result1
	add	result1, #4
	qdiv	result1, #7
	add	arg02, #24
	cmp	local01, ##1325376000 wc
 if_ae	sub	local01, ##1325376000
 if_ae	mov	local02, ##2012
 if_b	mov	local02, ##1970
	getqy	result1
	wrlong	result1, arg02
	sub	arg02, #24
LR__0718
	mov	arg01, local02
	call	#_fatfs_cc__is_leap_year
	cmp	result1, #0 wz
 if_ne	mov	local03, ##31622400
 if_e	mov	local03, ##31536000
	cmp	local01, local03 wc
 if_ae	add	local02, #1
 if_ae	sub	local01, local03
 if_ae	jmp	#LR__0718
	qdiv	local01, ##86400
	mov	local03, local02
	sub	local03, ##1900
	add	arg02, #20
	wrlong	local03, arg02
	add	arg02, #8
	mov	arg01, local02
	getqx	local02
	wrlong	local02, arg02
	sub	arg02, #28
	call	#_fatfs_cc__is_leap_year
	cmp	result1, #0 wz
 if_ne	mov	local03, #29
 if_e	mov	local03, #28
	add	ptr__fatfs_cc_dat__, #360
	wrlong	local03, ptr__fatfs_cc_dat__
	sub	ptr__fatfs_cc_dat__, #360
	mov	arg01, #0
	loc	pa,	#(@LR__0720-@LR__0719)
	call	#FCACHE_LOAD_
LR__0719
	mov	local03, arg01
	shl	local03, #2
	add	ptr__fatfs_cc_dat__, #356
	add	local03, ptr__fatfs_cc_dat__
	rdlong	local03, local03
	cmps	local02, local03 wc
	sub	ptr__fatfs_cc_dat__, #356
 if_b	jmp	#LR__0721
	mov	local03, arg01
	shl	local03, #2
	add	ptr__fatfs_cc_dat__, #356
	add	local03, ptr__fatfs_cc_dat__
	rdlong	local03, local03
	sub	local02, local03
	add	arg01, #1
	sub	ptr__fatfs_cc_dat__, #356
	jmp	#LR__0719
LR__0720
LR__0721
	qdiv	local01, ##86400
	add	arg02, #16
	wrlong	arg01, arg02
	add	local02, #1
	sub	arg02, #4
	wrlong	local02, arg02
	getqy	local01
	qdiv	local01, ##3600
	getqx	local03
	qdiv	local01, ##3600
	sub	arg02, #4
	wrlong	local03, arg02
	getqy	local01
	qdiv	local01, #60
	getqx	local03
	qdiv	local01, #60
	sub	arg02, #4
	wrlong	local03, arg02
	sub	arg02, #4
	mov	result1, arg02
	getqy	local03
	wrlong	local03, arg02
	add	arg02, #32
	wrlong	#0, arg02
	mov	ptra, fp
	call	#popregs_
_fatfs_cc__gmtime_r_ret
	ret

_fatfs_cc__tzset
	mov	arg01, ##@LR__1257
	call	#_fatfs_cc_getenv
	mov	arg01, result1
	add	ptr__fatfs_cc_dat__, #456
	mov	arg02, ptr__fatfs_cc_dat__
	sub	ptr__fatfs_cc_dat__, #456
	call	#_fatfs_cc___tzoffset
	add	ptr__fatfs_cc_dat__, #352
	wrlong	result1, ptr__fatfs_cc_dat__
	sub	ptr__fatfs_cc_dat__, #352
_fatfs_cc__tzset_ret
	ret

_fatfs_cc_opendir
	mov	COUNT_, #6
	call	#pushregs_
	mov	arg02, arg01
	add	ptr___system__dat__, #380
	mov	local01, ptr___system__dat__
	mov	arg01, local01
	mov	arg03, #0
	sub	ptr___system__dat__, #380
	call	#__system____getvfsforfile
	mov	local02, result1 wz
 if_ne	add	local02, #40
 if_ne	rdlong	arg01, local02
 if_ne	sub	local02, #40
 if_ne	cmps	arg01, #0 wz
 if_e	add	ptr___system__dat__, #24
 if_e	wrlong	#16, ptr___system__dat__
 if_e	sub	ptr___system__dat__, #24
 if_e	mov	result1, #0
 if_e	jmp	#LR__0723
	mov	arg01, #92
	mov	arg02, #16
	call	#__system___gc_doalloc
	mov	local03, result1 wz
 if_e	add	ptr___system__dat__, #24
 if_e	wrlong	#7, ptr___system__dat__
 if_e	sub	ptr___system__dat__, #24
 if_e	mov	result1, #0
 if_e	jmp	#LR__0723
	add	local02, #40
	rdlong	arg02, local02
	sub	local02, #40
	rdlong	local04, arg02
	add	arg02, #4
	rdlong	local05, arg02
	mov	arg01, local03
	mov	arg02, local01
	mov	local06, objptr
	mov	objptr, local04
	call	local05
	mov	objptr, local06
	mov	arg01, result1 wz
 if_e	jmp	#LR__0722
	add	ptr___system__dat__, #24
	wrlong	arg01, ptr___system__dat__
	sub	ptr___system__dat__, #24
	mov	arg01, local03
	call	#__system___gc_free
	mov	result1, #0
	jmp	#LR__0723
LR__0722
	wrlong	local02, local03
	mov	result1, local03
LR__0723
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_opendir_ret
	ret

_fatfs_cc_closedir
	mov	COUNT_, #4
	call	#pushregs_
	mov	local01, arg01
	rdlong	arg01, local01
	add	arg01, #44
	rdlong	arg01, arg01
	rdlong	local02, arg01
	add	arg01, #4
	rdlong	local03, arg01
	mov	arg01, local01
	mov	local04, objptr
	mov	objptr, local02
	call	local03
	mov	objptr, local04
	mov	local04, result1
	mov	arg01, local01
	call	#__system___gc_free
	add	ptr___system__dat__, #24
	wrlong	local04, ptr___system__dat__
	sub	ptr___system__dat__, #24
	cmp	local04, #0 wz
 if_ne	neg	result1, #1
 if_e	mov	result1, #0
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_closedir_ret
	ret

_fatfs_cc_readdir
	mov	COUNT_, #4
	call	#pushregs_
	rdlong	arg02, arg01 wz
	add	arg01, #8
	mov	local01, arg01
	sub	arg01, #8
 if_e	mov	result1, #0
 if_e	jmp	#LR__0725
	add	arg02, #48
	rdlong	arg02, arg02
	rdlong	local02, arg02
	add	arg02, #4
	rdlong	local03, arg02
	mov	arg02, local01
	mov	local04, objptr
	mov	objptr, local02
	call	local03
	mov	objptr, local04
	cmps	result1, #0 wz
 if_e	jmp	#LR__0724
	cmps	result1, #1 wc
 if_ae	add	ptr___system__dat__, #24
 if_ae	wrlong	result1, ptr___system__dat__
 if_ae	sub	ptr___system__dat__, #24
	mov	result1, #0
	jmp	#LR__0725
LR__0724
	mov	result1, local01
LR__0725
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_readdir_ret
	ret

_fatfs_cc__openraw
	mov	COUNT_, #12
	call	#pushregs_
	add	ptra, #52
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	add	fp, #4
	wrlong	arg03, fp
	add	fp, #4
	wrlong	arg04, fp
	add	fp, #12
	wrlong	#4, fp
	sub	fp, #24
	rdlong	arg03, fp
	add	fp, #28
	wrlong	arg03, fp
	add	ptr___system__dat__, #380
	mov	arg01, ptr___system__dat__
	sub	ptr___system__dat__, #380
	add	fp, #4
	wrlong	arg01, fp
	sub	fp, #28
	rdlong	arg02, fp
	sub	fp, #8
	mov	arg03, #0
	call	#__system____getvfsforfile
	add	fp, #24
	wrlong	result1, fp
	cmps	result1, #0 wz
	sub	fp, #24
 if_e	jmp	#LR__0726
	add	fp, #24
	rdlong	result1, fp
	sub	fp, #24
	add	result1, #32
	rdlong	result1, result1 wz
 if_ne	jmp	#LR__0727
LR__0726
	add	ptr___system__dat__, #24
	wrlong	#16, ptr___system__dat__
	sub	ptr___system__dat__, #24
	neg	result1, #1
	jmp	#LR__0742
LR__0727
	add	fp, #32
	rdlong	arg01, fp
	sub	fp, #32
	mov	arg02, #0
	mov	arg03, #48
	mov	local01, arg01
	call	#\builtin_bytefill_
	add	fp, #24
	rdlong	local02, fp
	mov	local03, local02
	add	local03, #32
	rdlong	local04, local03
	mov	arg03, local04
	rdlong	local05, arg03
	add	arg03, #4
	rdlong	local06, arg03
	mov	local07, local06
	add	fp, #8
	rdlong	local08, fp
	add	fp, #4
	rdlong	local09, fp
	sub	fp, #24
	rdlong	local10, fp
	sub	fp, #12
	mov	arg01, local08
	mov	arg02, local09
	mov	arg03, local10
	mov	local11, objptr
	mov	objptr, local05
	call	local07
	mov	objptr, local11
	add	fp, #20
	wrlong	result1, fp
	sub	fp, #20
	cmp	result1, #0 wz
 if_e	jmp	#LR__0728
	add	fp, #12
	rdlong	local07, fp
	sub	fp, #12
	test	local07, #4 wz
 if_e	jmp	#LR__0728
	add	fp, #24
	rdlong	local02, fp
	mov	local03, local02
	add	local03, #36
	rdlong	local04, local03
	sub	local03, #36
	mov	local11, local04
	rdlong	local05, local11
	add	local11, #4
	rdlong	local06, local11
	mov	local07, local06
	add	fp, #8
	rdlong	local08, fp
	add	fp, #4
	rdlong	local09, fp
	sub	fp, #20
	rdlong	local10, fp
	sub	fp, #16
	mov	arg01, local08
	mov	arg02, local09
	mov	arg03, local10
	mov	local11, objptr
	mov	objptr, local05
	call	local07
	mov	objptr, local11
	mov	local12, result1
	add	fp, #20
	wrlong	local12, fp
	sub	fp, #20
LR__0728
	add	fp, #20
	rdlong	local12, fp wz
	sub	fp, #20
 if_ne	jmp	#LR__0741
	add	fp, #12
	rdlong	local12, fp
	and	local12, #3 wz
	add	fp, #28
	wrlong	local12, fp
	sub	fp, #40
 if_ne	add	fp, #28
 if_ne	rdlong	local12, fp
 if_ne	or	local12, #2
 if_ne	wrlong	local12, fp
 if_ne	sub	fp, #28
	add	fp, #40
	rdlong	local12, fp
	sub	fp, #40
	cmp	local12, #1 wz
 if_ne	add	fp, #28
 if_ne	rdlong	local12, fp
 if_ne	or	local12, #1
 if_ne	wrlong	local12, fp
 if_ne	sub	fp, #28
	add	fp, #12
	rdlong	local12, fp
	sub	fp, #12
	test	local12, #32 wz
 if_ne	add	fp, #28
 if_ne	rdlong	local12, fp
 if_ne	or	local12, #192
 if_ne	wrlong	local12, fp
 if_ne	sub	fp, #28
	add	fp, #32
	rdlong	local12, fp
	sub	fp, #4
	rdlong	local07, fp
	add	local12, #8
	wrlong	local07, local12
	add	fp, #4
	rdlong	local12, fp
	sub	fp, #32
	add	local12, #16
	rdlong	local07, local12 wz
 if_ne	jmp	#LR__0729
	add	fp, #32
	rdlong	local12, fp
	sub	fp, #8
	rdlong	local07, fp
	sub	fp, #24
	add	local07, #4
	rdlong	local02, local07
	add	local12, #16
	wrlong	local02, local12
LR__0729
	add	fp, #32
	rdlong	local12, fp
	sub	fp, #32
	add	local12, #20
	rdlong	local07, local12 wz
 if_ne	jmp	#LR__0730
	add	fp, #32
	rdlong	local12, fp
	sub	fp, #8
	rdlong	local07, fp
	sub	fp, #24
	add	local07, #8
	rdlong	local02, local07
	add	local12, #20
	wrlong	local02, local12
LR__0730
	add	fp, #32
	rdlong	local12, fp
	sub	fp, #32
	add	local12, #32
	rdlong	local07, local12 wz
 if_ne	jmp	#LR__0731
	add	fp, #32
	rdlong	local12, fp
	sub	fp, #8
	rdlong	local07, fp
	sub	fp, #24
	rdlong	local02, local07
	add	local12, #32
	wrlong	local02, local12
LR__0731
	add	fp, #32
	rdlong	local12, fp
	sub	fp, #32
	add	local12, #36
	rdlong	local07, local12 wz
 if_ne	jmp	#LR__0732
	add	fp, #32
	rdlong	local12, fp
	sub	fp, #8
	rdlong	local07, fp
	sub	fp, #24
	add	local07, #16
	rdlong	local02, local07
	add	local12, #36
	wrlong	local02, local12
LR__0732
	add	fp, #32
	rdlong	local12, fp
	sub	fp, #32
	add	local12, #44
	rdlong	local07, local12 wz
 if_ne	jmp	#LR__0733
	add	fp, #32
	rdlong	local12, fp
	sub	fp, #8
	rdlong	local07, fp
	sub	fp, #24
	add	local07, #12
	rdlong	local02, local07
	add	local12, #44
	wrlong	local02, local12
LR__0733
	add	fp, #32
	rdlong	local12, fp
	sub	fp, #32
	add	local12, #24
	rdlong	local07, local12 wz
 if_ne	jmp	#LR__0736
	add	fp, #32
	rdlong	arg01, fp
	mov	local03, arg01
	add	local03, #36
	rdlong	local12, local03
	rdlong	local05, local12
	add	local12, #4
	rdlong	local07, local12
	add	fp, #16
	mov	arg03, fp
	sub	fp, #48
	mov	arg02, #256
	mov	local11, objptr
	mov	objptr, local05
	call	local07
	mov	objptr, local11
	add	fp, #44
	wrlong	result1, fp
	sub	fp, #44
	cmp	result1, #0 wz
 if_ne	jmp	#LR__0734
	add	fp, #48
	rdlong	local07, fp
	sub	fp, #48
	test	local07, #2 wz
 if_e	jmp	#LR__0734
	add	fp, #32
	rdlong	local12, fp
	sub	fp, #32
	mov	arg01, objptr
	mov	arg02, ptr__fatfs_cc___default_putc_terminal_
	call	#__system___make_methodptr
	mov	local07, result1
	add	local12, #24
	wrlong	local07, local12
	jmp	#LR__0735
LR__0734
	add	fp, #32
	rdlong	local12, fp
	sub	fp, #32
	mov	arg01, objptr
	mov	arg02, ptr__fatfs_cc___default_putc_
	call	#__system___make_methodptr
	add	local12, #24
	wrlong	result1, local12
LR__0735
LR__0736
	add	fp, #32
	rdlong	local12, fp
	sub	fp, #32
	add	local12, #28
	rdlong	local07, local12 wz
 if_ne	jmp	#LR__0737
	add	fp, #32
	rdlong	local12, fp
	sub	fp, #32
	mov	arg01, objptr
	mov	arg02, ptr__fatfs_cc___default_getc_
	call	#__system___make_methodptr
	add	local12, #28
	wrlong	result1, local12
LR__0737
	add	fp, #32
	rdlong	local12, fp
	sub	fp, #32
	add	local12, #40
	rdlong	local07, local12 wz
 if_ne	jmp	#LR__0740
	add	fp, #24
	rdlong	local12, fp
	sub	fp, #24
	add	local12, #20
	rdlong	local07, local12 wz
 if_e	jmp	#LR__0738
	add	fp, #32
	rdlong	local12, fp
	sub	fp, #8
	rdlong	local07, fp
	sub	fp, #24
	add	local07, #20
	rdlong	local02, local07
	add	local12, #40
	wrlong	local02, local12
	jmp	#LR__0739
LR__0738
	add	fp, #32
	rdlong	local12, fp
	sub	fp, #32
	mov	arg01, objptr
	mov	arg02, ptr__fatfs_cc___default_flush_
	call	#__system___make_methodptr
	add	local12, #40
	wrlong	result1, local12
LR__0739
LR__0740
LR__0741
	add	fp, #20
	rdlong	local12, fp wz
 if_e	mov	arg01, #0
 if_e	add	ptr___system__dat__, #24
 if_e	wrlong	arg01, ptr___system__dat__
 if_e	sub	ptr___system__dat__, #24
	rdlong	result1, fp
	sub	fp, #20
LR__0742
	mov	ptra, fp
	call	#popregs_
_fatfs_cc__openraw_ret
	ret

_fatfs_cc__closeraw
	mov	COUNT_, #5
	call	#pushregs_
	mov	local01, arg01
	mov	local02, #0
	add	local01, #8
	rdlong	result1, local01 wz
	sub	local01, #8
 if_e	add	ptr___system__dat__, #24
 if_e	wrlong	#5, ptr___system__dat__
 if_e	sub	ptr___system__dat__, #24
 if_e	neg	result1, #1
 if_e	jmp	#LR__0745
	add	local01, #40
	rdlong	result1, local01 wz
	sub	local01, #40
 if_e	jmp	#LR__0743
	add	local01, #40
	rdlong	arg01, local01
	sub	local01, #40
	rdlong	local03, arg01
	add	arg01, #4
	rdlong	local04, arg01
	mov	arg01, local01
	mov	local05, objptr
	mov	objptr, local03
	call	local04
	mov	objptr, local05
LR__0743
	add	local01, #32
	rdlong	local05, local01 wz
	sub	local01, #32
 if_e	jmp	#LR__0744
	add	local01, #32
	rdlong	local05, local01
	sub	local01, #32
	rdlong	local03, local05
	add	local05, #4
	rdlong	local04, local05
	mov	arg01, local01
	mov	local05, objptr
	mov	objptr, local03
	call	local04
	mov	objptr, local05
	mov	local02, result1
LR__0744
	mov	arg01, local01
	mov	arg02, #0
	mov	arg03, #48
	call	#\builtin_bytefill_
	mov	result1, local02
LR__0745
	mov	ptra, fp
	call	#popregs_
_fatfs_cc__closeraw_ret
	ret

_fatfs_cc___default_getc
	mov	COUNT_, #3
	call	#pushregs_
	mov	local01, arg01
	rdlong	local02, local01
	add	local02, #8
	rdlong	local03, local02
	test	local03, #2 wz
 if_ne	mov	arg01, local01
 if_ne	call	#_fatfs_cc___default_flush
	rdlong	local03, local02
	or	local03, #1
	wrlong	local03, local02
	sub	local02, #8
	rdlong	local03, local02 wz
 if_ne	jmp	#LR__0746
	mov	arg01, local01
	call	#_fatfs_cc___default_filbuf
	mov	local03, result1
LR__0746
	cmps	local03, #1 wc
 if_b	neg	result1, #1
 if_b	jmp	#LR__0747
	sub	local03, #1
	wrlong	local03, local02
	add	local02, #4
	rdlong	local03, local02
	rdbyte	result1, local03
	add	local03, #1
	wrlong	local03, local02
LR__0747
	mov	ptra, fp
	call	#popregs_
_fatfs_cc___default_getc_ret
	ret

_fatfs_cc___default_putc
	mov	COUNT_, #4
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	rdlong	local03, local02
	add	local03, #8
	rdlong	result1, local03
	test	result1, #1 wz
 if_ne	mov	arg01, local02
 if_ne	call	#_fatfs_cc___default_flush
	rdlong	arg01, local03
	or	arg01, #2
	wrlong	arg01, local03
	sub	local03, #8
	rdlong	arg01, local03
	mov	local04, arg01
	add	local03, #12
	add	local04, local03
	wrbyte	local01, local04
	getbyte	local01, local01, #0
	add	arg01, #1
	sub	local03, #12
	wrlong	arg01, local03
	cmp	arg01, ##1024 wz
 if_ne	jmp	#LR__0748
	mov	arg01, local02
	call	#_fatfs_cc___default_flush
	cmp	result1, #0 wz
 if_ne	neg	local01, #1
LR__0748
	mov	result1, local01
	mov	ptra, fp
	call	#popregs_
_fatfs_cc___default_putc_ret
	ret

_fatfs_cc___default_putc_terminal
	mov	COUNT_, #4
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	rdlong	local03, local02
	add	local03, #8
	rdlong	result1, local03
	test	result1, #1 wz
 if_ne	mov	arg01, local02
 if_ne	call	#_fatfs_cc___default_flush
	rdlong	arg01, local03
	or	arg01, #2
	wrlong	arg01, local03
	sub	local03, #8
	rdlong	arg01, local03
	mov	local04, arg01
	add	local03, #12
	add	local04, local03
	wrbyte	local01, local04
	getbyte	local01, local01, #0
	sub	local03, #12
	add	arg01, #1
	wrlong	arg01, local03
	cmp	local01, #10 wz
 if_ne	cmp	arg01, ##1024 wz
 if_ne	jmp	#LR__0749
	mov	arg01, local02
	call	#_fatfs_cc___default_flush
	cmp	result1, #0 wz
 if_ne	neg	local01, #1
LR__0749
	mov	result1, local01
	mov	ptra, fp
	call	#popregs_
_fatfs_cc___default_putc_terminal_ret
	ret

_fatfs_cc___default_flush
	mov	COUNT_, #13
	call	#pushregs_
	mov	local01, arg01
	rdlong	local02, local01
	rdlong	local03, local02
	add	local02, #8
	rdlong	local04, local02
	sub	local02, #8
	test	local04, #2 wz
 if_e	jmp	#LR__0752
	cmps	local03, #1 wc
 if_b	jmp	#LR__0754
	add	local01, #8
	rdlong	local04, local01
	sub	local01, #8
	test	local04, #64 wz
 if_e	jmp	#LR__0751
	add	local01, #8
	rdlong	local04, local01
	sub	local01, #8
	test	local04, #128 wz
 if_e	jmp	#LR__0750
	add	local01, #44
	rdlong	local04, local01
	sub	local01, #44
	rdlong	local05, local04
	add	local04, #4
	rdlong	local04, local04
	mov	arg01, local01
	mov	arg02, #0
	mov	arg03, #2
	mov	local06, objptr
	mov	objptr, local05
	call	local04
	mov	objptr, local06
	add	local01, #8
	rdlong	local04, local01
	andn	local04, #128
	wrlong	local04, local01
	sub	local01, #8
LR__0750
LR__0751
	add	local01, #20
	rdlong	local04, local01
	sub	local01, #20
	rdlong	local05, local04
	add	local04, #4
	rdlong	local07, local04
	add	local02, #12
	mov	arg02, local02
	sub	local02, #12
	mov	arg01, local01
	mov	arg03, local03
	mov	local06, objptr
	mov	objptr, local05
	call	local07
	mov	objptr, local06
	jmp	#LR__0754
LR__0752
	add	local02, #8
	rdlong	local04, local02
	sub	local02, #8
	test	local04, #1 wz
 if_e	jmp	#LR__0753
	cmp	local03, #0 wz
 if_e	jmp	#LR__0753
	add	local01, #44
	rdlong	local08, local01
	sub	local01, #44
	mov	local04, local08
	rdlong	local05, local04
	add	local04, #4
	rdlong	local09, local04
	mov	local07, local09
	mov	local10, local01
	neg	local11, local03
	mov	local12, #1
	mov	arg01, local10
	mov	arg02, local11
	mov	arg03, #1
	mov	local06, objptr
	mov	objptr, local05
	call	local07
	mov	objptr, local06
	mov	local04, result1
	mov	local13, local04
	cmps	local13, #0 wc
 if_ae	mov	local13, local03
LR__0753
LR__0754
	wrlong	#0, local02
	add	local02, #4
	wrlong	#0, local02
	add	local02, #4
	wrlong	#0, local02
	mov	result1, #0
	mov	ptra, fp
	call	#popregs_
_fatfs_cc___default_flush_ret
	ret

_fatfs_cc_stat
	mov	COUNT_, #7
	call	#pushregs_
	mov	arg03, arg01
	mov	local01, arg02
	add	ptr___system__dat__, #380
	mov	local02, ptr___system__dat__
	mov	arg01, local02
	mov	arg02, arg03
	mov	arg03, #0
	sub	ptr___system__dat__, #380
	call	#__system____getvfsforfile
	mov	local03, result1 wz
 if_ne	add	local03, #52
 if_ne	rdlong	arg01, local03
 if_ne	sub	local03, #52
 if_ne	cmps	arg01, #0 wz
 if_e	add	ptr___system__dat__, #24
 if_e	wrlong	#16, ptr___system__dat__
 if_e	sub	ptr___system__dat__, #24
 if_e	neg	result1, #1
 if_e	jmp	#LR__0755
	mov	arg01, local01
	mov	arg02, #0
	mov	arg03, #48
	mov	local04, arg01
	call	#\builtin_bytefill_
	mov	result1, local04
	rdbyte	arg02, local02 wz
 if_e	add	local01, #8
 if_e	wrlong	##4607, local01
 if_e	mov	result1, #0
 if_e	jmp	#LR__0755
	add	local03, #52
	rdlong	arg02, local03
	rdlong	local05, arg02
	add	arg02, #4
	rdlong	local06, arg02
	mov	arg01, local02
	mov	arg02, local01
	mov	local07, objptr
	mov	objptr, local05
	call	local06
	mov	objptr, local07
LR__0755
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_stat_ret
	ret

_fatfs_cc_open
	mov	COUNT_, #5
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	add	ptr__fatfs_cc_dat__, ##536
	mov	local04, ptr__fatfs_cc_dat__
	mov	local05, #0
	sub	ptr__fatfs_cc_dat__, ##536
	loc	pa,	#(@LR__0757-@LR__0756)
	call	#FCACHE_LOAD_
LR__0756
	cmps	local05, #10 wc
 if_ae	jmp	#LR__0758
	mov	result1, local05
	shl	result1, #1
	add	result1, local05
	shl	result1, #4
	add	result1, local04
	add	result1, #8
	rdlong	result1, result1 wz
 if_ne	add	local05, #1
 if_ne	jmp	#LR__0756
LR__0757
LR__0758
	cmp	local05, #10 wz
 if_e	add	ptr___system__dat__, #24
 if_e	wrlong	#11, ptr___system__dat__
 if_e	sub	ptr___system__dat__, #24
 if_e	neg	result1, #1
 if_e	jmp	#LR__0759
	mov	arg01, local05
	shl	arg01, #1
	add	arg01, local05
	shl	arg01, #4
	add	arg01, local04
	mov	arg02, local01
	mov	arg03, local02
	mov	arg04, local03
	call	#_fatfs_cc__openraw
	cmps	result1, #0 wz
 if_e	mov	result1, local05
LR__0759
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_open_ret
	ret

_fatfs_cc_write
	mov	COUNT_, #1
	call	#pushregs_
	mov	local01, arg01
	cmp	local01, #10 wc
 if_ae	add	ptr___system__dat__, #24
 if_ae	wrlong	#5, ptr___system__dat__
 if_ae	sub	ptr___system__dat__, #24
 if_ae	neg	result1, #1
 if_ae	jmp	#LR__0760
	mov	arg01, local01
	shl	arg01, #1
	add	arg01, local01
	shl	arg01, #4
	add	ptr__fatfs_cc_dat__, ##536
	add	arg01, ptr__fatfs_cc_dat__
	sub	ptr__fatfs_cc_dat__, ##536
	call	#_fatfs_cc__vfswrite
LR__0760
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_write_ret
	ret

_fatfs_cc_read
	mov	COUNT_, #1
	call	#pushregs_
	mov	local01, arg01
	cmp	local01, #10 wc
 if_ae	add	ptr___system__dat__, #24
 if_ae	wrlong	#5, ptr___system__dat__
 if_ae	sub	ptr___system__dat__, #24
 if_ae	neg	result1, #1
 if_ae	jmp	#LR__0761
	mov	arg01, local01
	shl	arg01, #1
	add	arg01, local01
	shl	arg01, #4
	add	ptr__fatfs_cc_dat__, ##536
	add	arg01, ptr__fatfs_cc_dat__
	sub	ptr__fatfs_cc_dat__, ##536
	call	#_fatfs_cc__vfsread
LR__0761
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_read_ret
	ret

_fatfs_cc_close
	mov	COUNT_, #1
	call	#pushregs_
	mov	local01, arg01
	cmp	local01, #10 wc
 if_ae	add	ptr___system__dat__, #24
 if_ae	wrlong	#5, ptr___system__dat__
 if_ae	sub	ptr___system__dat__, #24
 if_ae	neg	result1, #1
 if_ae	jmp	#LR__0762
	mov	arg01, local01
	shl	arg01, #1
	add	arg01, local01
	shl	arg01, #4
	add	ptr__fatfs_cc_dat__, ##536
	add	arg01, ptr__fatfs_cc_dat__
	sub	ptr__fatfs_cc_dat__, ##536
	call	#_fatfs_cc__closeraw
LR__0762
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_close_ret
	ret

_fatfs_cc_lseek
	mov	COUNT_, #6
	call	#pushregs_
	cmp	arg01, #10 wc
 if_ae	add	ptr___system__dat__, #24
 if_ae	wrlong	#5, ptr___system__dat__
 if_ae	sub	ptr___system__dat__, #24
 if_ae	neg	result1, #1
 if_ae	jmp	#LR__0764
	mov	local01, arg01
	shl	local01, #1
	add	local01, arg01
	shl	local01, #4
	add	ptr__fatfs_cc_dat__, ##536
	add	local01, ptr__fatfs_cc_dat__
	add	local01, #44
	rdlong	arg01, local01 wz
	sub	local01, #44
	sub	ptr__fatfs_cc_dat__, ##536
 if_e	add	ptr___system__dat__, #24
 if_e	wrlong	#16, ptr___system__dat__
 if_e	sub	ptr___system__dat__, #24
 if_e	neg	result1, #1
 if_e	jmp	#LR__0764
	add	local01, #8
	rdlong	local02, local01
	sub	local01, #8
	test	local02, #64 wz
 if_ne	add	local01, #8
 if_ne	rdlong	local02, local01
 if_ne	or	local02, #128
 if_ne	wrlong	local02, local01
 if_ne	sub	local01, #8
	add	local01, #44
	rdlong	local02, local01
	sub	local01, #44
	rdlong	local03, local02
	add	local02, #4
	rdlong	local04, local02
	mov	arg01, local01
	mov	local05, objptr
	mov	objptr, local03
	call	local04
	mov	objptr, local05
	mov	local06, result1
	cmps	local06, #0 wc
 if_ae	jmp	#LR__0763
	neg	arg01, local06 wz
	add	ptr___system__dat__, #24
	wrlong	arg01, ptr___system__dat__
	sub	ptr___system__dat__, #24
 if_ne	neg	result1, #1
 if_e	mov	result1, #0
	jmp	#LR__0764
LR__0763
	mov	result1, local06
LR__0764
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_lseek_ret
	ret

_fatfs_cc_ioctl
	mov	COUNT_, #4
	call	#pushregs_
	call	#_fatfs_cc___getftab
	mov	local01, result1 wz
 if_e	add	ptr___system__dat__, #24
 if_e	wrlong	#5, ptr___system__dat__
 if_e	sub	ptr___system__dat__, #24
 if_e	neg	result1, #1
 if_e	jmp	#LR__0766
	add	local01, #36
	rdlong	arg01, local01
	sub	local01, #36
	rdlong	local02, arg01
	add	arg01, #4
	rdlong	local03, arg01
	mov	arg01, local01
	mov	local04, objptr
	mov	objptr, local02
	call	local03
	mov	objptr, local04
	mov	arg01, result1 wz
 if_e	jmp	#LR__0765
	add	ptr___system__dat__, #24
	wrlong	arg01, ptr___system__dat__
	sub	ptr___system__dat__, #24
	cmp	arg01, #0 wz
 if_ne	neg	result1, #1
 if_e	mov	result1, #0
	jmp	#LR__0766
LR__0765
	mov	result1, #0
LR__0766
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_ioctl_ret
	ret

_fatfs_cc_rmdir
	mov	COUNT_, #6
	call	#pushregs_
	mov	arg02, arg01
	add	ptr___system__dat__, #380
	mov	local01, ptr___system__dat__
	mov	arg01, local01
	mov	arg03, #0
	sub	ptr___system__dat__, #380
	call	#__system____getvfsforfile
	mov	local02, result1 wz
 if_ne	add	local02, #60
 if_ne	rdlong	arg01, local02
 if_ne	sub	local02, #60
 if_ne	cmps	arg01, #0 wz
 if_e	add	ptr___system__dat__, #24
 if_e	wrlong	#16, ptr___system__dat__
 if_e	sub	ptr___system__dat__, #24
 if_e	neg	result1, #1
 if_e	jmp	#LR__0768
	add	local02, #60
	rdlong	arg01, local02
	rdlong	local03, arg01
	add	arg01, #4
	rdlong	local04, arg01
	mov	arg01, local01
	mov	local05, objptr
	mov	objptr, local03
	call	local04
	mov	objptr, local05
	mov	local06, result1 wz
 if_e	jmp	#LR__0767
	neg	arg01, local06 wz
	add	ptr___system__dat__, #24
	wrlong	arg01, ptr___system__dat__
	sub	ptr___system__dat__, #24
 if_ne	neg	result1, #1
 if_e	mov	result1, #0
	jmp	#LR__0768
LR__0767
	mov	result1, local06
LR__0768
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_rmdir_ret
	ret

_fatfs_cc_mkdir
	mov	COUNT_, #7
	call	#pushregs_
	mov	arg03, arg01
	mov	local01, arg02
	add	ptr___system__dat__, #380
	mov	local02, ptr___system__dat__
	mov	arg01, local02
	mov	arg02, arg03
	mov	arg03, #0
	sub	ptr___system__dat__, #380
	call	#__system____getvfsforfile
	mov	local03, result1 wz
 if_ne	add	local03, #32
 if_ne	rdlong	arg01, local03
 if_ne	sub	local03, #32
 if_ne	cmps	arg01, #0 wz
 if_e	add	ptr___system__dat__, #24
 if_e	wrlong	#16, ptr___system__dat__
 if_e	sub	ptr___system__dat__, #24
 if_e	neg	result1, #1
 if_e	jmp	#LR__0770
	add	local03, #56
	rdlong	arg02, local03
	rdlong	local04, arg02
	add	arg02, #4
	rdlong	local05, arg02
	mov	arg01, local02
	mov	arg02, local01
	mov	local06, objptr
	mov	objptr, local04
	call	local05
	mov	objptr, local06
	mov	local07, result1 wz
 if_e	jmp	#LR__0769
	neg	arg01, local07 wz
	add	ptr___system__dat__, #24
	wrlong	arg01, ptr___system__dat__
	sub	ptr___system__dat__, #24
 if_ne	neg	result1, #1
 if_e	mov	result1, #0
	jmp	#LR__0770
LR__0769
	mov	result1, local07
LR__0770
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_mkdir_ret
	ret

_fatfs_cc_getenv
	mov	COUNT_, #5
	call	#pushregs_
	mov	local01, arg01
	mov	local02, #0
	loc	pa,	#(@LR__0772-@LR__0771)
	call	#FCACHE_LOAD_
LR__0771
	rdbyte	result1, arg01 wz
 if_ne	add	local02, #1
 if_ne	add	arg01, #1
 if_ne	jmp	#LR__0771
LR__0772
	mov	result1, local02
	mov	local03, result1
	add	ptr__fatfs_cc_dat__, ##1112
	rdlong	arg03, ptr__fatfs_cc_dat__ wz
	sub	ptr__fatfs_cc_dat__, ##1112
 if_e	mov	result1, #0
 if_e	jmp	#LR__0776
	add	ptr__fatfs_cc_dat__, ##1112
	rdlong	local04, ptr__fatfs_cc_dat__
	sub	ptr__fatfs_cc_dat__, ##1112
LR__0773
	rdlong	local05, local04 wz
 if_e	jmp	#LR__0775
	mov	arg01, local05
	mov	arg02, local01
	mov	arg03, local03
	call	#_fatfs_cc_strncmp
	cmp	result1, #0 wz
 if_ne	jmp	#LR__0774
	mov	arg03, local03
	add	arg03, local05
	rdbyte	arg03, arg03
	cmp	arg03, #61 wz
 if_e	mov	result1, local05
 if_e	add	result1, local03
 if_e	add	result1, #1
 if_e	jmp	#LR__0776
LR__0774
	add	local04, #4
	jmp	#LR__0773
LR__0775
	mov	result1, #0
LR__0776
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_getenv_ret
	ret

_fatfs_cc__get_fattime
	mov	COUNT_, #0
	call	#pushregs_
	add	ptra, #52
	mov	arg01, #0
	call	#_fatfs_cc_time
	add	fp, #4
	wrlong	result1, fp
	mov	arg01, fp
	add	fp, #12
	mov	arg02, fp
	sub	fp, #16
	call	#_fatfs_cc__gmtime_r
	add	fp, #36
	rdlong	arg02, fp
	sub	arg02, #80
	shl	arg02, #9
	sub	fp, #4
	rdlong	result1, fp
	add	result1, #1
	shl	result1, #5
	or	arg02, result1
	sub	fp, #4
	rdlong	result1, fp
	or	arg02, result1
	sub	fp, #20
	wrlong	arg02, fp
	add	fp, #16
	rdlong	arg02, fp
	shl	arg02, #11
	sub	fp, #4
	rdlong	result1, fp
	shl	result1, #5
	or	arg02, result1
	sub	fp, #4
	rdlong	result1, fp
	or	arg02, result1
	sub	fp, #4
	wrlong	arg02, fp
	sub	fp, #4
	rdlong	result1, fp
	shl	result1, #16
	sub	fp, #8
	or	result1, arg02
	mov	ptra, fp
	call	#popregs_
_fatfs_cc__get_fattime_ret
	ret

_fatfs_cc_unixtime_0461
	mov	COUNT_, #0
	call	#pushregs_
	add	ptra, #52
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	sub	fp, #4
	rdlong	arg01, fp
	shr	arg01, #9
	and	arg01, #127
	mov	result1, #80
	add	result1, arg01
	add	fp, #32
	wrlong	result1, fp
	sub	fp, #32
	rdlong	result1, fp
	shr	result1, #5
	getnib	result1, result1, #0
	sub	result1, #1
	add	fp, #28
	wrlong	result1, fp
	sub	fp, #28
	rdlong	result1, fp
	and	result1, #31
	add	fp, #24
	wrlong	result1, fp
	sub	fp, #20
	rdlong	result1, fp
	shr	result1, #11
	and	result1, #31
	add	fp, #16
	wrlong	result1, fp
	sub	fp, #16
	rdlong	result1, fp
	shr	result1, #5
	and	result1, #63
	add	fp, #12
	wrlong	result1, fp
	sub	fp, #12
	rdlong	arg01, fp
	and	arg01, #31
	shl	arg01, #1
	add	fp, #8
	wrlong	arg01, fp
	mov	arg01, fp
	sub	fp, #16
	call	#_fatfs_cc_mktime
	add	fp, #12
	wrlong	result1, fp
	sub	fp, #12
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_unixtime_0461_ret
	ret

_fatfs_cc__set_dos_error_0463
	mov	_var01, arg01
	mov	_var02, _var01
	fle	_var02, #20
	jmprel	_var02
LR__0777
	jmp	#LR__0778
	jmp	#LR__0792
	jmp	#LR__0793
	jmp	#LR__0794
	jmp	#LR__0779
	jmp	#LR__0780
	jmp	#LR__0781
	jmp	#LR__0782
	jmp	#LR__0784
	jmp	#LR__0787
	jmp	#LR__0783
	jmp	#LR__0788
	jmp	#LR__0789
	jmp	#LR__0790
	jmp	#LR__0795
	jmp	#LR__0795
	jmp	#LR__0795
	jmp	#LR__0785
	jmp	#LR__0791
	jmp	#LR__0786
	jmp	#LR__0795
LR__0778
	mov	_var03, #0
	jmp	#LR__0796
LR__0779
LR__0780
LR__0781
	mov	_var03, #4
	jmp	#LR__0796
LR__0782
LR__0783
	mov	_var03, #6
	jmp	#LR__0796
LR__0784
	mov	_var03, #9
	jmp	#LR__0796
LR__0785
	mov	_var03, #7
	jmp	#LR__0796
LR__0786
LR__0787
LR__0788
LR__0789
LR__0790
	mov	_var03, #10
	jmp	#LR__0796
LR__0791
	mov	_var03, #11
	jmp	#LR__0796
LR__0792
LR__0793
LR__0794
LR__0795
	mov	_var03, #12
LR__0796
	add	ptr___system__dat__, #24
	wrlong	_var03, ptr___system__dat__
	sub	ptr___system__dat__, #24
	cmp	_var03, #0 wz
 if_ne	neg	result1, #1
 if_e	mov	result1, #0
_fatfs_cc__set_dos_error_0463_ret
	ret

_fatfs_cc_v_creat
	mov	COUNT_, #4
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	arg01, ##1588
	mov	arg02, #16
	call	#__system___gc_doalloc
	mov	local03, result1 wz
 if_e	add	ptr___system__dat__, #24
 if_e	wrlong	#7, ptr___system__dat__
 if_e	sub	ptr___system__dat__, #24
 if_e	neg	result1, #1
 if_e	jmp	#LR__0798
	mov	arg01, local03
	mov	arg02, #0
	mov	arg03, ##1588
	call	#\builtin_bytefill_
	add	local03, ##1036
	mov	arg01, local03
	sub	local03, ##1036
	mov	arg02, local02
	mov	arg03, #7
	call	#_fatfs_cc_f_open
	mov	local04, result1 wz
 if_e	jmp	#LR__0797
	mov	arg01, local03
	call	#__system___gc_free
	mov	arg01, local04
	call	#_fatfs_cc__set_dos_error_0463
	jmp	#LR__0798
LR__0797
	wrlong	local03, local01
	mov	result1, #0
LR__0798
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_v_creat_ret
	ret

_fatfs_cc_v_close
	mov	COUNT_, #2
	call	#pushregs_
	rdlong	local01, arg01
	add	local01, ##1036
	mov	arg01, local01
	sub	local01, ##1036
	call	#_fatfs_cc_f_close
	mov	local02, result1
	mov	arg01, local01
	call	#__system___gc_free
	mov	arg01, local02
	call	#_fatfs_cc__set_dos_error_0463
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_v_close_ret
	ret

_fatfs_cc_v_opendir
	mov	COUNT_, #4
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	arg01, #44
	mov	arg02, #16
	call	#__system___gc_doalloc
	mov	local03, result1 wz
 if_e	add	ptr___system__dat__, #24
 if_e	wrlong	#7, ptr___system__dat__
 if_e	sub	ptr___system__dat__, #24
 if_e	neg	result1, #1
 if_e	jmp	#LR__0800
	mov	arg02, local02
	mov	arg01, local03
	call	#_fatfs_cc_f_opendir
	mov	local04, result1 wz
 if_e	jmp	#LR__0799
	mov	arg01, local03
	call	#__system___gc_free
	mov	arg01, local04
	call	#_fatfs_cc__set_dos_error_0463
	jmp	#LR__0800
LR__0799
	add	local01, #4
	wrlong	local03, local01
	mov	result1, #0
LR__0800
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_v_opendir_ret
	ret

_fatfs_cc_v_closedir
	mov	COUNT_, #2
	call	#pushregs_
	add	arg01, #4
	rdlong	local01, arg01
	mov	arg01, local01
	call	#_fatfs_cc_f_closedir
	mov	local02, result1
	mov	arg01, local01
	call	#__system___gc_free
	cmp	local02, #0 wz
 if_ne	mov	arg01, local02
 if_ne	call	#_fatfs_cc__set_dos_error_0463
	mov	result1, local02
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_v_closedir_ret
	ret

_fatfs_cc_v_readdir
	mov	COUNT_, #1
	call	#pushregs_
	add	ptra, #44
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	sub	fp, #4
	rdlong	arg02, fp
	add	arg02, #4
	rdlong	arg01, arg02
	add	fp, #8
	mov	arg02, fp
	sub	fp, #12
	call	#_fatfs_cc_f_readdir
	add	fp, #40
	wrlong	result1, fp
	sub	fp, #40
	cmp	result1, #0 wz
 if_e	jmp	#LR__0801
	add	fp, #40
	rdlong	arg01, fp
	sub	fp, #40
	call	#_fatfs_cc__set_dos_error_0463
	jmp	#LR__0804
LR__0801
	add	fp, #24
	rdbyte	arg02, fp
	sub	fp, #24
	zerox	arg02, #7 wz
 if_e	neg	result1, #1
 if_e	jmp	#LR__0804
	add	fp, #8
	rdlong	arg01, fp
	add	fp, #16
	mov	arg02, fp
	sub	fp, #24
	call	#__system____builtin_strcpy
	add	fp, #20
	rdbyte	result1, fp
	sub	fp, #20
	test	result1, #16 wz
 if_e	jmp	#LR__0802
	add	fp, #8
	rdlong	result1, fp
	sub	fp, #8
	add	result1, #80
	wrbyte	#1, result1
	jmp	#LR__0803
LR__0802
	add	fp, #8
	rdlong	result1, fp
	sub	fp, #8
	add	result1, #80
	wrbyte	#0, result1
LR__0803
	add	fp, #8
	rdlong	result1, fp
	add	fp, #4
	rdlong	arg02, fp
	add	result1, #72
	wrlong	arg02, result1
	sub	fp, #4
	rdlong	local01, fp
	add	fp, #8
	rdword	arg01, fp
	add	fp, #2
	rdword	arg02, fp
	sub	fp, #18
	call	#_fatfs_cc_unixtime_0461
	add	local01, #76
	wrlong	result1, local01
	mov	result1, #0
LR__0804
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_v_readdir_ret
	ret

_fatfs_cc_v_stat
	mov	COUNT_, #3
	call	#pushregs_
	add	ptra, #48
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	sub	fp, #8
	mov	arg01, arg02
	mov	arg02, #0
	mov	arg03, #48
	call	#\builtin_bytefill_
	add	fp, #4
	rdlong	result1, fp
	sub	fp, #4
	rdbyte	result1, result1 wz
 if_e	jmp	#LR__0805
	add	fp, #4
	rdlong	result1, fp
	sub	fp, #4
	rdbyte	result1, result1
	cmp	result1, #46 wz
 if_ne	jmp	#LR__0806
	add	fp, #4
	rdlong	result1, fp
	sub	fp, #4
	add	result1, #1
	rdbyte	result1, result1 wz
 if_ne	jmp	#LR__0806
LR__0805
	add	fp, #24
	wrbyte	#16, fp
	sub	fp, #12
	wrlong	#0, fp
	sub	fp, #12
	jmp	#LR__0807
LR__0806
	add	fp, #4
	rdlong	arg01, fp
	add	fp, #12
	mov	arg02, fp
	sub	fp, #16
	call	#_fatfs_cc_f_stat
	add	fp, #12
	wrlong	result1, fp
	sub	fp, #12
LR__0807
	add	fp, #12
	rdlong	result1, fp wz
	sub	fp, #12
 if_e	jmp	#LR__0808
	add	fp, #12
	rdlong	arg01, fp
	sub	fp, #12
	call	#_fatfs_cc__set_dos_error_0463
	jmp	#LR__0809
LR__0808
	add	fp, #44
	wrlong	#292, fp
	sub	fp, #20
	rdbyte	local01, fp
	sub	fp, #24
	test	local01, #1 wz
 if_ne	add	fp, #44
 if_ne	rdlong	local01, fp
 if_ne	or	local01, #146
 if_ne	wrlong	local01, fp
 if_ne	sub	fp, #44
	add	fp, #24
	rdbyte	local01, fp
	sub	fp, #24
	test	local01, #16 wz
 if_ne	add	fp, #44
 if_ne	rdlong	local01, fp
 if_ne	or	local01, ##4169
 if_ne	wrlong	local01, fp
 if_ne	sub	fp, #44
	add	fp, #8
	rdlong	local01, fp
	add	fp, #36
	rdlong	result1, fp
	add	local01, #8
	wrlong	result1, local01
	sub	fp, #36
	rdlong	local01, fp
	add	local01, #12
	wrlong	#1, local01
	rdlong	local01, fp
	add	fp, #8
	rdlong	result1, fp
	add	local01, #24
	wrlong	result1, local01
	sub	fp, #8
	rdlong	local01, fp
	add	local01, #28
	wrlong	##512, local01
	rdlong	result1, fp
	mov	local01, result1
	add	result1, #24
	rdlong	result1, result1
	abs	result1, result1 wc
	shr	result1, #9
	negc	result1, result1
	add	local01, #32
	wrlong	result1, local01
	rdlong	local02, fp
	mov	local01, local02
	mov	local03, local02
	add	fp, #12
	rdword	arg01, fp
	add	fp, #2
	rdword	arg02, fp
	sub	fp, #22
	call	#_fatfs_cc_unixtime_0461
	add	local03, #44
	wrlong	result1, local03
	add	local02, #40
	wrlong	result1, local02
	add	local01, #36
	wrlong	result1, local01
	add	fp, #12
	rdlong	result1, fp
	sub	fp, #12
LR__0809
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_v_stat_ret
	ret

_fatfs_cc_v_read
	mov	COUNT_, #0
	call	#pushregs_
	add	ptra, #28
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	add	fp, #4
	wrlong	arg03, fp
	sub	fp, #8
	rdlong	arg01, fp
	rdlong	arg01, arg01 wz
	add	fp, #12
	wrlong	arg01, fp
	sub	fp, #16
 if_e	add	ptr___system__dat__, #24
 if_e	wrlong	#5, ptr___system__dat__
 if_e	sub	ptr___system__dat__, #24
 if_e	neg	result1, #1
 if_e	jmp	#LR__0812
	add	fp, #16
	rdlong	arg01, fp
	add	arg01, ##1036
	sub	fp, #8
	rdlong	arg02, fp
	add	fp, #4
	rdlong	arg03, fp
	add	fp, #12
	mov	arg04, fp
	sub	fp, #24
	call	#_fatfs_cc_f_read
	add	fp, #20
	wrlong	result1, fp
	sub	fp, #20
	cmp	result1, #0 wz
 if_e	jmp	#LR__0810
	add	fp, #4
	rdlong	arg01, fp
	mov	arg04, arg01
	add	arg01, #8
	rdlong	arg01, arg01
	or	arg01, #32
	add	arg04, #8
	wrlong	arg01, arg04
	add	fp, #16
	rdlong	arg01, fp
	sub	fp, #20
	call	#_fatfs_cc__set_dos_error_0463
	jmp	#LR__0812
LR__0810
	add	fp, #24
	rdlong	arg04, fp wz
	sub	fp, #24
 if_ne	jmp	#LR__0811
	add	fp, #4
	rdlong	result1, fp
	mov	arg04, result1
	sub	fp, #4
	add	result1, #8
	rdlong	result1, result1
	or	result1, #16
	add	arg04, #8
	wrlong	result1, arg04
LR__0811
	add	fp, #24
	rdlong	result1, fp
	sub	fp, #24
LR__0812
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_v_read_ret
	ret

_fatfs_cc_v_write
	mov	COUNT_, #0
	call	#pushregs_
	add	ptra, #28
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	add	fp, #4
	wrlong	arg03, fp
	sub	fp, #8
	rdlong	arg01, fp
	rdlong	arg01, arg01 wz
	add	fp, #12
	wrlong	arg01, fp
	sub	fp, #16
 if_e	add	ptr___system__dat__, #24
 if_e	wrlong	#5, ptr___system__dat__
 if_e	sub	ptr___system__dat__, #24
 if_e	neg	result1, #1
 if_e	jmp	#LR__0814
	add	fp, #16
	rdlong	arg01, fp
	add	arg01, ##1036
	sub	fp, #8
	rdlong	arg02, fp
	add	fp, #4
	rdlong	arg03, fp
	add	fp, #12
	mov	arg04, fp
	sub	fp, #24
	call	#_fatfs_cc_f_write
	add	fp, #20
	wrlong	result1, fp
	sub	fp, #20
	cmp	result1, #0 wz
 if_e	jmp	#LR__0813
	add	fp, #4
	rdlong	arg01, fp
	mov	arg04, arg01
	add	arg01, #8
	rdlong	arg01, arg01
	or	arg01, #32
	add	arg04, #8
	wrlong	arg01, arg04
	add	fp, #16
	rdlong	arg01, fp
	sub	fp, #20
	call	#_fatfs_cc__set_dos_error_0463
	jmp	#LR__0814
LR__0813
	add	fp, #24
	rdlong	result1, fp
	sub	fp, #24
LR__0814
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_v_write_ret
	ret

_fatfs_cc_v_lseek
	mov	COUNT_, #4
	call	#pushregs_
	mov	local01, arg02
	mov	local02, arg03
	rdlong	local03, arg01
	add	local03, ##1036 wz
 if_e	add	ptr___system__dat__, #24
 if_e	wrlong	#5, ptr___system__dat__
 if_e	sub	ptr___system__dat__, #24
 if_e	neg	result1, #1
 if_e	jmp	#LR__0817
	cmp	local02, #0 wz
 if_e	jmp	#LR__0815
	cmp	local02, #1 wz
 if_e	add	local03, #20
 if_e	rdlong	local04, local03
 if_e	sub	local03, #20
 if_e	add	local01, local04
 if_ne	add	local03, #12
 if_ne	rdlong	local04, local03
 if_ne	sub	local03, #12
 if_ne	add	local01, local04
LR__0815
	mov	arg02, local01
	mov	arg01, local03
	call	#_fatfs_cc_f_lseek
	mov	arg01, result1 wz
 if_e	jmp	#LR__0816
	call	#_fatfs_cc__set_dos_error_0463
	jmp	#LR__0817
LR__0816
	mov	result1, local01
LR__0817
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_v_lseek_ret
	ret

_fatfs_cc_v_ioctl
	add	ptr___system__dat__, #24
	wrlong	#10, ptr___system__dat__
	sub	ptr___system__dat__, #24
	neg	result1, #1
_fatfs_cc_v_ioctl_ret
	ret

_fatfs_cc_v_mkdir
	call	#_fatfs_cc_f_mkdir
	mov	arg01, result1
	call	#_fatfs_cc__set_dos_error_0463
_fatfs_cc_v_mkdir_ret
	ret

_fatfs_cc_v_remove
	call	#_fatfs_cc_f_unlink
	mov	arg01, result1
	call	#_fatfs_cc__set_dos_error_0463
_fatfs_cc_v_remove_ret
	ret

_fatfs_cc_v_rmdir
	call	#_fatfs_cc_f_unlink
	mov	arg01, result1
	call	#_fatfs_cc__set_dos_error_0463
_fatfs_cc_v_rmdir_ret
	ret

_fatfs_cc_v_rename
	call	#_fatfs_cc_f_rename
	mov	arg01, result1
	call	#_fatfs_cc__set_dos_error_0463
_fatfs_cc_v_rename_ret
	ret

_fatfs_cc_v_open
	mov	COUNT_, #11
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	mov	arg01, ##1588
	mov	arg02, #16
	call	#__system___gc_doalloc
	mov	local04, result1 wz
 if_e	add	ptr___system__dat__, #24
 if_e	wrlong	#7, ptr___system__dat__
 if_e	sub	ptr___system__dat__, #24
 if_e	neg	result1, #1
 if_e	jmp	#LR__0824
	mov	local05, local04
	mov	local06, #0
	mov	local07, ##1588
	mov	arg01, local05
	mov	arg02, #0
	mov	arg03, ##1588
	mov	local08, arg01
	call	#\builtin_bytefill_
	mov	result1, local08
	mov	local09, local03
	and	local09, #3 wz
 if_e	jmp	#LR__0818
	cmp	local09, #1 wz
 if_e	jmp	#LR__0819
	jmp	#LR__0820
LR__0818
	mov	local10, #1
	jmp	#LR__0821
LR__0819
	mov	local10, #2
	jmp	#LR__0821
LR__0820
	mov	local10, #3
LR__0821
	test	local03, #8 wz
 if_ne	or	local10, #24
 if_ne	jmp	#LR__0822
	test	local03, #32 wz
 if_ne	or	local10, #48
LR__0822
	add	local04, ##1036
	mov	arg01, local04
	sub	local04, ##1036
	mov	arg02, local02
	mov	arg03, local10
	call	#_fatfs_cc_f_open
	mov	local11, result1 wz
 if_e	jmp	#LR__0823
	mov	arg01, local04
	call	#__system___gc_free
	mov	arg01, local11
	call	#_fatfs_cc__set_dos_error_0463
	jmp	#LR__0824
LR__0823
	wrlong	local04, local01
	mov	result1, #0
LR__0824
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_v_open_ret
	ret

_fatfs_cc_v_init
	mov	result1, #0
_fatfs_cc_v_init_ret
	ret

_fatfs_cc_v_deinit
	mov	arg02, ##@LR__1258
	mov	arg01, #0
	mov	arg03, #0
	call	#_fatfs_cc_f_mount
	mov	result1, #0
_fatfs_cc_v_deinit_ret
	ret

_fatfs_cc_get_vfs
	mov	COUNT_, #2
	call	#pushregs_
	mov	local01, arg01
	mov	arg01, #80
	call	#__system___gc_alloc_managed
	mov	local02, result1
	mov	arg01, objptr
	mov	arg02, ptr__fatfs_cc_v_close_
	call	#__system___make_methodptr
	wrlong	result1, local02
	mov	arg01, objptr
	mov	arg02, ptr__fatfs_cc_v_read_
	call	#__system___make_methodptr
	add	local02, #4
	wrlong	result1, local02
	mov	arg01, objptr
	mov	arg02, ptr__fatfs_cc_v_write_
	call	#__system___make_methodptr
	add	local02, #4
	wrlong	result1, local02
	mov	arg01, objptr
	mov	arg02, ptr__fatfs_cc_v_lseek_
	call	#__system___make_methodptr
	add	local02, #4
	wrlong	result1, local02
	mov	arg01, objptr
	mov	arg02, ptr__fatfs_cc_v_ioctl_
	call	#__system___make_methodptr
	add	local02, #4
	wrlong	result1, local02
	add	local02, #4
	wrlong	#0, local02
	add	local02, #4
	wrlong	local01, local02
	add	local02, #4
	wrlong	#0, local02
	mov	arg01, objptr
	mov	arg02, ptr__fatfs_cc_v_open_
	call	#__system___make_methodptr
	add	local02, #4
	wrlong	result1, local02
	mov	arg01, objptr
	mov	arg02, ptr__fatfs_cc_v_creat_
	call	#__system___make_methodptr
	add	local02, #4
	wrlong	result1, local02
	mov	arg01, objptr
	mov	arg02, ptr__fatfs_cc_v_opendir_
	call	#__system___make_methodptr
	add	local02, #4
	wrlong	result1, local02
	mov	arg01, objptr
	mov	arg02, ptr__fatfs_cc_v_closedir_
	call	#__system___make_methodptr
	add	local02, #4
	wrlong	result1, local02
	mov	arg01, objptr
	mov	arg02, ptr__fatfs_cc_v_readdir_
	call	#__system___make_methodptr
	add	local02, #4
	wrlong	result1, local02
	mov	arg01, objptr
	mov	arg02, ptr__fatfs_cc_v_stat_
	call	#__system___make_methodptr
	add	local02, #4
	wrlong	result1, local02
	mov	arg01, objptr
	mov	arg02, ptr__fatfs_cc_v_mkdir_
	call	#__system___make_methodptr
	add	local02, #4
	wrlong	result1, local02
	mov	arg01, objptr
	mov	arg02, ptr__fatfs_cc_v_rmdir_
	call	#__system___make_methodptr
	add	local02, #4
	wrlong	result1, local02
	mov	arg01, objptr
	mov	arg02, ptr__fatfs_cc_v_remove_
	call	#__system___make_methodptr
	add	local02, #4
	wrlong	result1, local02
	mov	arg01, objptr
	mov	arg02, ptr__fatfs_cc_v_rename_
	call	#__system___make_methodptr
	add	local02, #4
	wrlong	result1, local02
	mov	arg01, objptr
	mov	arg02, ptr__fatfs_cc_v_init_
	call	#__system___make_methodptr
	add	local02, #4
	wrlong	result1, local02
	mov	arg01, objptr
	mov	arg02, ptr__fatfs_cc_v_deinit_
	call	#__system___make_methodptr
	add	local02, #4
	wrlong	result1, local02
	sub	local02, #76
	mov	result1, local02
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_get_vfs_ret
	ret

_fatfs_cc_xmit_mmc_0818
	add	objptr, #8
	rdlong	_var01, objptr
	add	objptr, #8
	rdlong	_var02, objptr
	sub	objptr, #16
	dirl	_var02
	setq	#1
	rdlong	_var03, arg01
	rev	_var03
	movbyts	_var03, #27
	wypin	_var03, _var02
	mov	_var03, arg02
	shr	arg02, #2 wz
	shl	_var03, #3
	wypin	_var03, _var01
	dirh	_var02
	add	arg01, #8
	rev	_var04
	movbyts	_var04, #27
LR__0825
 if_ne	wypin	_var04, _var02
 if_ne	rdlong	_var04, arg01
 if_ne	add	arg01, #4
 if_ne	rev	_var04
 if_ne	movbyts	_var04, #27
LR__0826
 if_ne	testp	_var02 wc
 if_a	jmp	#LR__0826
 if_ne	djnz	arg02, #LR__0825
LR__0827
	testp	_var01 wc
 if_ae	jmp	#LR__0827
	dirl	_var02
	wypin	##-1, _var02
	dirh	_var02
_fatfs_cc_xmit_mmc_0818_ret
	ret

_fatfs_cc_rcvr_mmc_0825
	add	objptr, #8
	rdlong	_var01, objptr
	add	objptr, #12
	rdlong	_var02, objptr
	sub	objptr, #20
	akpin	_var02
	mov	_var03, arg02 wz
	shr	_var03, #2 wz
 if_e	jmp	#LR__0830
	mov	_var04, _var03
	shl	_var04, #5
	wypin	_var04, _var01
	wxpin	#63, _var02
LR__0828
LR__0829
	testp	_var02 wc
 if_ae	jmp	#LR__0829
	rdpin	_var04, _var02
	rev	_var04
	movbyts	_var04, #27
	wrlong	_var04, arg01
	add	arg01, #4
	djnz	_var03, #LR__0828
LR__0830
	and	arg02, #3 wz
 if_e	jmp	#LR__0833
	wxpin	#39, _var02
LR__0831
	wypin	#8, _var01
LR__0832
	testp	_var02 wc
 if_ae	jmp	#LR__0832
	rdpin	_var04, _var02
	rev	_var04
	wrbyte	_var04, arg01
	add	arg01, #1
	djnz	arg02, #LR__0831
LR__0833
_fatfs_cc_rcvr_mmc_0825_ret
	ret

_fatfs_cc_wait_ready_0829
	mov	COUNT_, #1
	call	#pushregs_
	add	ptra, #16
	getct	result1
	add	fp, #8
	wrlong	result1, fp
	rdlong	local01, #20
	shr	local01, #1
	add	fp, #4
	wrlong	local01, fp
	sub	fp, #12
LR__0834
	add	fp, #4
	mov	arg01, fp
	sub	fp, #4
	mov	arg02, #1
	call	#_fatfs_cc_rcvr_mmc_0825
	add	fp, #4
	rdbyte	local01, fp
	sub	fp, #4
	cmp	local01, #255 wz
 if_e	mov	result1, #1
 if_e	jmp	#LR__0835
	getct	result1
	add	fp, #8
	rdlong	local01, fp
	sub	result1, local01
	add	fp, #4
	rdlong	local01, fp
	sub	fp, #12
	cmp	result1, local01 wc
 if_ae	mov	result1, #0
 if_b	jmp	#LR__0834
LR__0835
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_wait_ready_0829_ret
	ret

_fatfs_cc_deselect_0835
	mov	COUNT_, #0
	call	#pushregs_
	add	ptra, #20
	add	objptr, #12
	rdlong	arg02, objptr
	add	fp, #4
	wrlong	arg02, fp
	sub	objptr, #4
	rdlong	arg02, objptr
	add	fp, #4
	wrlong	arg02, fp
	add	objptr, #8
	rdlong	arg02, objptr
	add	fp, #4
	wrlong	arg02, fp
	add	objptr, #4
	rdlong	arg02, objptr
	sub	objptr, #20
	add	fp, #4
	wrlong	arg02, fp
	sub	fp, #12
	rdlong	arg01, fp
	sub	fp, #4
	drvh	arg01
	waitx	#16
	mov	arg01, fp
	mov	arg02, #1
	call	#_fatfs_cc_rcvr_mmc_0825
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_deselect_0835_ret
	ret

_fatfs_cc_select_0839
	mov	COUNT_, #0
	call	#pushregs_
	add	ptra, #16
	add	objptr, #12
	rdlong	arg02, objptr
	add	fp, #8
	wrlong	arg02, fp
	add	objptr, #8
	rdlong	arg01, objptr
	sub	objptr, #20
	add	fp, #4
	wrlong	arg01, fp
	fltl	arg01
	sub	fp, #4
	rdlong	arg01, fp
	drvl	arg01
	waitx	#16
	add	fp, #4
	rdlong	arg01, fp
	dirh	arg01
	sub	fp, #8
	mov	arg01, fp
	sub	fp, #4
	mov	arg02, #1
	call	#_fatfs_cc_rcvr_mmc_0825
	call	#_fatfs_cc_wait_ready_0829
	cmp	result1, #0 wz
 if_ne	mov	result1, #1
 if_ne	jmp	#LR__0836
	call	#_fatfs_cc_deselect_0835
	mov	result1, #0
LR__0836
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_select_0839_ret
	ret

_fatfs_cc_rcvr_datablock_0843
	mov	COUNT_, #1
	call	#pushregs_
	add	ptra, #24
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	getct	result1
	add	fp, #8
	wrlong	result1, fp
	rdlong	local01, #20
	shr	local01, #3
	add	fp, #4
	wrlong	local01, fp
	sub	fp, #20
LR__0837
	add	fp, #12
	mov	arg01, fp
	sub	fp, #12
	mov	arg02, #1
	call	#_fatfs_cc_rcvr_mmc_0825
	add	fp, #12
	rdbyte	local01, fp
	sub	fp, #12
	cmp	local01, #255 wz
 if_ne	jmp	#LR__0838
	getct	result1
	mov	local01, result1
	add	fp, #16
	rdlong	arg02, fp
	sub	local01, arg02
	add	fp, #4
	rdlong	arg02, fp
	sub	fp, #20
	cmp	local01, arg02 wc
 if_b	jmp	#LR__0837
LR__0838
	add	fp, #12
	rdbyte	local01, fp
	sub	fp, #12
	cmp	local01, #254 wz
 if_ne	mov	result1, #0
 if_ne	jmp	#LR__0839
	add	fp, #4
	rdlong	arg01, fp
	add	fp, #4
	rdlong	arg02, fp
	sub	fp, #8
	call	#_fatfs_cc_rcvr_mmc_0825
	add	fp, #12
	mov	arg01, fp
	sub	fp, #12
	mov	arg02, #2
	call	#_fatfs_cc_rcvr_mmc_0825
	mov	result1, #1
LR__0839
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_rcvr_datablock_0843_ret
	ret

_fatfs_cc_xmit_datablock_0845
	mov	COUNT_, #0
	call	#pushregs_
	add	ptra, #16
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrbyte	arg02, fp
	sub	fp, #8
	call	#_fatfs_cc_wait_ready_0829
	cmp	result1, #0 wz
 if_e	mov	result1, #0
 if_e	jmp	#LR__0841
	add	fp, #8
	rdbyte	arg02, fp
	add	fp, #4
	wrbyte	arg02, fp
	mov	arg01, fp
	sub	fp, #12
	mov	arg02, #1
	call	#_fatfs_cc_xmit_mmc_0818
	add	fp, #8
	rdbyte	arg02, fp
	sub	fp, #8
	cmp	arg02, #253 wz
 if_e	jmp	#LR__0840
	add	fp, #4
	rdlong	arg01, fp
	sub	fp, #4
	decod	arg02, #9
	call	#_fatfs_cc_xmit_mmc_0818
	add	fp, #12
	mov	arg01, fp
	sub	fp, #12
	mov	arg02, #2
	call	#_fatfs_cc_rcvr_mmc_0825
	add	fp, #12
	mov	arg01, fp
	sub	fp, #12
	mov	arg02, #1
	call	#_fatfs_cc_rcvr_mmc_0825
	add	fp, #12
	rdbyte	arg02, fp
	sub	fp, #12
	and	arg02, #31
	cmp	arg02, #5 wz
 if_ne	mov	result1, #0
 if_ne	jmp	#LR__0841
LR__0840
	mov	result1, #1
LR__0841
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_xmit_datablock_0845_ret
	ret

_fatfs_cc_send_cmd_0849
	mov	COUNT_, #1
	call	#pushregs_
	add	ptra, #28
_fatfs_cc_send_cmd_0849_enter
	add	fp, #4
	wrbyte	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	sub	fp, #4
	rdbyte	result1, fp
	sub	fp, #4
	test	result1, #128 wz
 if_e	jmp	#LR__0842
	add	fp, #4
	rdbyte	arg02, fp
	and	arg02, #127
	wrbyte	arg02, fp
	sub	fp, #4
	mov	arg01, #55
	mov	arg02, #0
	call	#_fatfs_cc_send_cmd_0849
	add	fp, #12
	wrbyte	result1, fp
	rdbyte	local01, fp
	sub	fp, #12
	cmp	local01, #2 wc
 if_ae	add	fp, #12
 if_ae	rdbyte	result1, fp
 if_ae	sub	fp, #12
 if_ae	jmp	#LR__0846
LR__0842
	add	fp, #4
	rdbyte	local01, fp
	sub	fp, #4
	cmp	local01, #12 wz
 if_e	jmp	#LR__0843
	call	#_fatfs_cc_deselect_0835
	call	#_fatfs_cc_select_0839
	cmp	result1, #0 wz
 if_e	mov	result1, #255
 if_e	jmp	#LR__0846
LR__0843
	add	fp, #4
	rdbyte	arg02, fp
	mov	local01, #64
	or	local01, arg02
	add	fp, #16
	wrbyte	local01, fp
	sub	fp, #12
	rdlong	local01, fp
	shr	local01, #24
	add	fp, #13
	wrbyte	local01, fp
	sub	fp, #13
	rdlong	local01, fp
	shr	local01, #16
	add	fp, #14
	wrbyte	local01, fp
	sub	fp, #14
	rdlong	local01, fp
	shr	local01, #8
	add	fp, #15
	wrbyte	local01, fp
	sub	fp, #15
	rdlong	local01, fp
	add	fp, #16
	wrbyte	local01, fp
	sub	fp, #12
	wrbyte	#1, fp
	sub	fp, #8
	rdbyte	local01, fp
	sub	fp, #4
	zerox	local01, #7 wz
 if_e	add	fp, #12
 if_e	wrbyte	#149, fp
 if_e	sub	fp, #12
	add	fp, #4
	rdbyte	local01, fp
	sub	fp, #4
	cmp	local01, #8 wz
 if_e	add	fp, #12
 if_e	wrbyte	#135, fp
 if_e	sub	fp, #12
	add	fp, #12
	rdbyte	local01, fp
	add	fp, #13
	wrbyte	local01, fp
	sub	fp, #5
	mov	arg01, fp
	sub	fp, #20
	mov	arg02, #6
	call	#_fatfs_cc_xmit_mmc_0818
	add	fp, #4
	rdbyte	local01, fp
	sub	fp, #4
	cmp	local01, #12 wz
 if_e	add	fp, #16
 if_e	mov	arg01, fp
 if_e	sub	fp, #16
 if_e	mov	arg02, #1
 if_e	call	#_fatfs_cc_rcvr_mmc_0825
	add	fp, #12
	wrbyte	#10, fp
	sub	fp, #12
LR__0844
	add	fp, #16
	mov	arg01, fp
	sub	fp, #16
	mov	arg02, #1
	call	#_fatfs_cc_rcvr_mmc_0825
	add	fp, #16
	rdbyte	local01, fp
	sub	fp, #16
	test	local01, #128 wz
 if_e	jmp	#LR__0845
	add	fp, #12
	rdbyte	local01, fp
	sub	local01, #1
	wrbyte	local01, fp
	rdbyte	local01, fp wz
	sub	fp, #12
 if_ne	jmp	#LR__0844
LR__0845
	add	fp, #16
	rdbyte	result1, fp
	sub	fp, #16
LR__0846
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_send_cmd_0849_ret
	ret

_fatfs_cc_gettimeofday
	mov	COUNT_, #4
	call	#pushregs_
	call	#__system___getus
	mov	local01, result1
	add	ptr__fatfs_cc_dat__, ##1124
	rdlong	local02, ptr__fatfs_cc_dat__
	mov	result1, local01
	sub	result1, local02
	qdiv	result1, ##1000000
	sub	ptr__fatfs_cc_dat__, ##1124
	getqx	local02
	qdiv	result1, ##1000000
	cmp	local02, #0 wz
	getqy	local03
 if_e	jmp	#LR__0847
	add	ptr__fatfs_cc_dat__, ##1120
	rdlong	local04, ptr__fatfs_cc_dat__
	add	local04, local02
	wrlong	local04, ptr__fatfs_cc_dat__
	sub	local01, local03
	add	ptr__fatfs_cc_dat__, #4
	wrlong	local01, ptr__fatfs_cc_dat__
	sub	ptr__fatfs_cc_dat__, ##1124
LR__0847
	add	ptr__fatfs_cc_dat__, ##1120
	rdlong	local04, ptr__fatfs_cc_dat__
	sub	ptr__fatfs_cc_dat__, ##1120
	wrlong	local04, arg01
	add	arg01, #4
	wrlong	local03, arg01
	mov	result1, #0
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_gettimeofday_ret
	ret

_fatfs_cc___getftab
	cmp	arg01, #10 wc
 if_ae	mov	result1, #0
 if_ae	jmp	#_fatfs_cc___getftab_ret
	mov	result1, arg01
	shl	result1, #1
	add	result1, arg01
	shl	result1, #4
	add	ptr__fatfs_cc_dat__, ##536
	add	result1, ptr__fatfs_cc_dat__
	sub	ptr__fatfs_cc_dat__, ##536
_fatfs_cc___getftab_ret
	ret

_fatfs_cc_rename
	mov	COUNT_, #3
	call	#pushregs_
	add	ptra, #284
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	add	ptr___system__dat__, #380
	mov	arg01, ptr___system__dat__
	sub	ptr___system__dat__, #380
	add	fp, #16
	wrlong	arg01, fp
	sub	fp, #20
	rdlong	arg02, fp
	sub	fp, #4
	mov	arg03, #0
	call	#__system____getvfsforfile
	add	fp, #16
	wrlong	result1, fp
	cmps	result1, #0 wz
	sub	fp, #16
 if_e	jmp	#LR__0848
	add	fp, #16
	rdlong	arg03, fp
	sub	fp, #16
	add	arg03, #68
	rdlong	arg03, arg03 wz
 if_ne	jmp	#LR__0849
LR__0848
	add	ptr___system__dat__, #24
	wrlong	#16, ptr___system__dat__
	sub	ptr___system__dat__, #24
	neg	result1, #1
	jmp	#LR__0850
LR__0849
	add	fp, #28
	mov	arg01, fp
	sub	fp, #20
	rdlong	arg02, fp
	sub	fp, #8
	mov	arg03, #0
	call	#__system____getvfsforfile
	add	fp, #20
	wrlong	result1, fp
	sub	fp, #4
	rdlong	arg01, fp
	sub	fp, #16
	cmp	result1, arg01 wz
 if_ne	add	ptr___system__dat__, #24
 if_ne	wrlong	#23, ptr___system__dat__
 if_ne	sub	ptr___system__dat__, #24
 if_ne	neg	result1, #1
 if_ne	jmp	#LR__0850
	add	fp, #16
	rdlong	local01, fp
	add	local01, #68
	rdlong	local01, local01
	rdlong	local02, local01
	add	local01, #4
	rdlong	local01, local01
	add	fp, #8
	rdlong	arg01, fp
	add	fp, #4
	mov	arg02, fp
	sub	fp, #28
	mov	local03, objptr
	mov	objptr, local02
	call	local01
	mov	objptr, local03
	add	fp, #12
	wrlong	result1, fp
	mov	arg01, result1 wz
	sub	fp, #12
	add	ptr___system__dat__, #24
	wrlong	arg01, ptr___system__dat__
	sub	ptr___system__dat__, #24
 if_ne	neg	result1, #1
 if_e	mov	result1, #0
LR__0850
	mov	ptra, fp
	call	#popregs_
_fatfs_cc_rename_ret
	ret

_fatfs_cc__is_leap_year
	abs	result1, arg01 wc
	and	result1, #3
	negc	result1, result1 wz
 if_ne	jmp	#LR__0852
	abs	result1, arg01 wc
	qdiv	result1, #100
	getqy	result1
	negc	result1, result1 wz
 if_ne	jmp	#LR__0851
	abs	result1, arg01 wc
	qdiv	result1, #400
	mov	result1, #0
	getqy	_var01
	negc	_var01, _var01 wz
 if_e	mov	result1, #1
	jmp	#_fatfs_cc__is_leap_year_ret
LR__0851
	mov	result1, #1
	jmp	#_fatfs_cc__is_leap_year_ret
LR__0852
	mov	result1, #0
_fatfs_cc__is_leap_year_ret
	ret

_fatfs_cc___tzoffset
	mov	_var01, arg01 wz
	mov	_var02, arg02
	wrlong	##-1, _var02
	mov	_var03, #1
 if_ne	rdbyte	_var04, _var01 wz
 if_e	mov	result1, #0
 if_e	jmp	#LR__0870
	wrlong	#0, _var02
	add	ptr__fatfs_cc_dat__, #504
	mov	_var05, ptr__fatfs_cc_dat__
	sub	ptr__fatfs_cc_dat__, #504
	loc	pa,	#(@LR__0854-@LR__0853)
	call	#FCACHE_LOAD_
LR__0853
	rdbyte	_var04, _var01 wz
 if_e	jmp	#LR__0855
	rdbyte	arg01, _var01
	fle	arg01, #128 wc
	add	ptr__fatfs_cc_dat__, ##1128
	add	arg01, ptr__fatfs_cc_dat__
	rdbyte	result1, arg01
	sub	ptr__fatfs_cc_dat__, ##1128
	and	result1, #12
	mov	_var06, result1 wz
 if_e	jmp	#LR__0855
	mov	_var04, _var05
	mov	_var06, _var05
	add	_var06, #1
	mov	_var05, _var06
	mov	_var07, _var01
	mov	_var08, _var01
	add	_var08, #1
	rdbyte	_var09, _var07
	mov	_var01, _var08
	wrbyte	_var09, _var04
	jmp	#LR__0853
LR__0854
LR__0855
	wrbyte	#0, _var05
	mov	_var10, #0
	rdbyte	_var04, _var01
	cmp	_var04, #45 wz
 if_e	neg	_var03, #1
 if_e	mov	_var06, _var01
 if_e	add	_var06, #1
 if_e	mov	_var01, _var06
	loc	pa,	#(@LR__0857-@LR__0856)
	call	#FCACHE_LOAD_
LR__0856
	rdbyte	arg01, _var01
	fle	arg01, #128 wc
	add	ptr__fatfs_cc_dat__, ##1128
	add	arg01, ptr__fatfs_cc_dat__
	rdbyte	result1, arg01
	sub	ptr__fatfs_cc_dat__, ##1128
	test	result1, #2 wz
 if_e	jmp	#LR__0858
	mov	_var04, _var10
	shl	_var04, #2
	add	_var04, _var10
	shl	_var04, #1
	rdbyte	_var07, _var01
	sub	_var07, #48
	add	_var04, _var07
	mov	_var10, _var04
	add	_var01, #1
	jmp	#LR__0856
LR__0857
LR__0858
	qmul	_var10, ##3600
	rdbyte	_var04, _var01
	cmp	_var04, #58 wz
	getqx	_var11
 if_ne	jmp	#LR__0862
	mov	_var10, #0
	add	_var01, #1
	loc	pa,	#(@LR__0860-@LR__0859)
	call	#FCACHE_LOAD_
LR__0859
	rdbyte	arg01, _var01
	fle	arg01, #128 wc
	add	ptr__fatfs_cc_dat__, ##1128
	add	arg01, ptr__fatfs_cc_dat__
	rdbyte	result1, arg01
	sub	ptr__fatfs_cc_dat__, ##1128
	test	result1, #2 wz
 if_e	jmp	#LR__0861
	mov	_var04, _var10
	shl	_var04, #2
	add	_var04, _var10
	shl	_var04, #1
	rdbyte	_var07, _var01
	sub	_var07, #48
	add	_var04, _var07
	mov	_var10, _var04
	add	_var01, #1
	jmp	#LR__0859
LR__0860
LR__0861
	mov	_var06, _var10
	shl	_var06, #4
	sub	_var06, _var10
	shl	_var06, #2
	add	_var11, _var06
LR__0862
	add	ptr__fatfs_cc_dat__, ##513
	mov	_var05, ptr__fatfs_cc_dat__
	rdbyte	arg01, _var01
	fle	arg01, #128 wc
	add	ptr__fatfs_cc_dat__, ##615
	add	arg01, ptr__fatfs_cc_dat__
	rdbyte	result1, arg01
	sub	ptr__fatfs_cc_dat__, ##1128
	test	result1, #12 wz
 if_e	jmp	#LR__0865
	wrlong	#1, _var02
LR__0863
	rdbyte	_var04, _var01 wz
 if_e	jmp	#LR__0864
	rdbyte	arg01, _var01
	fle	arg01, #128 wc
	add	ptr__fatfs_cc_dat__, ##1128
	add	arg01, ptr__fatfs_cc_dat__
	rdbyte	result1, arg01
	sub	ptr__fatfs_cc_dat__, ##1128
	test	result1, #12 wz
 if_e	jmp	#LR__0864
	mov	_var08, _var01
	add	_var08, #1
	rdbyte	_var09, _var01
	mov	_var01, _var08
	wrbyte	_var09, _var05
	add	_var05, #1
	jmp	#LR__0863
LR__0864
LR__0865
	wrbyte	#0, _var05
	add	ptr__fatfs_cc_dat__, #504
	rdbyte	_var04, ptr__fatfs_cc_dat__ wz
	sub	ptr__fatfs_cc_dat__, #504
 if_e	jmp	#LR__0866
	add	ptr__fatfs_cc_dat__, #504
	mov	_var04, ptr__fatfs_cc_dat__
	sub	ptr__fatfs_cc_dat__, #8
	wrlong	_var04, ptr__fatfs_cc_dat__
	sub	ptr__fatfs_cc_dat__, #496
	jmp	#LR__0867
LR__0866
	add	ptr__fatfs_cc_dat__, ##522
	mov	_var04, ptr__fatfs_cc_dat__
	sub	ptr__fatfs_cc_dat__, #26
	wrlong	_var04, ptr__fatfs_cc_dat__
	sub	ptr__fatfs_cc_dat__, #496
LR__0867
	add	ptr__fatfs_cc_dat__, ##513
	rdbyte	_var04, ptr__fatfs_cc_dat__ wz
	sub	ptr__fatfs_cc_dat__, ##513
 if_e	jmp	#LR__0868
	add	ptr__fatfs_cc_dat__, ##513
	mov	_var04, ptr__fatfs_cc_dat__
	sub	ptr__fatfs_cc_dat__, #13
	wrlong	_var04, ptr__fatfs_cc_dat__
	sub	ptr__fatfs_cc_dat__, #500
	jmp	#LR__0869
LR__0868
	add	ptr__fatfs_cc_dat__, #504
	mov	_var04, ptr__fatfs_cc_dat__
	sub	ptr__fatfs_cc_dat__, #4
	wrlong	_var04, ptr__fatfs_cc_dat__
	sub	ptr__fatfs_cc_dat__, #500
LR__0869
	qmul	_var03, _var11
	getqx	result1
LR__0870
_fatfs_cc___tzoffset_ret
	ret

_fatfs_cc___indst
	mov	_var01, arg01
	add	_var01, #16
	rdlong	_var02, _var01
	sub	_var01, #16
	cmp	_var02, #2 wz
 if_ne	jmp	#LR__0871
	mov	_var02, #7
	add	_var01, #24
	rdlong	_var03, _var01
	add	_var02, _var03
	sub	_var01, #12
	rdlong	_var04, _var01
	sub	_var02, _var04
	cmps	_var02, #0 wc
 if_b	mov	result1, #1
 if_b	jmp	#_fatfs_cc___indst_ret
	mov	result1, #0
	jmp	#_fatfs_cc___indst_ret
LR__0871
	add	_var01, #16
	rdlong	_var02, _var01
	sub	_var01, #16
	cmp	_var02, #10 wz
 if_ne	jmp	#LR__0872
	add	_var01, #24
	rdlong	_var02, _var01
	sub	_var01, #12
	rdlong	_var05, _var01
	sub	_var02, _var05
	cmps	_var02, #0 wc
 if_b	mov	result1, #0
 if_b	jmp	#_fatfs_cc___indst_ret
	mov	result1, #1
	jmp	#_fatfs_cc___indst_ret
LR__0872
	mov	_var02, #0
	add	_var01, #16
	rdlong	_var03, _var01
	sub	_var01, #16
	cmps	_var03, #3 wc
 if_b	jmp	#LR__0873
	add	_var01, #16
	rdlong	_var04, _var01
	cmps	_var04, #10 wc
 if_b	mov	_var02, #1
LR__0873
	mov	result1, _var02
_fatfs_cc___indst_ret
	ret

_fatfs_cc__rxtxioctl_1135
	mov	_var01, arg02
	mov	_var02, arg03
	cmp	_var01, #256 wz
 if_e	jmp	#LR__0874
	cmp	_var01, #257 wz
 if_e	jmp	#LR__0875
	jmp	#LR__0876
LR__0874
	add	ptr___system__dat__, #8
	rdlong	result1, ptr___system__dat__
	sub	ptr___system__dat__, #8
	wrlong	result1, _var02
	mov	result1, #0
	jmp	#LR__0877
LR__0875
	rdlong	arg01, _var02
	add	ptr___system__dat__, #8
	wrlong	arg01, ptr___system__dat__
	sub	ptr___system__dat__, #8
	mov	result1, #0
	jmp	#LR__0877
LR__0876
	add	ptr___system__dat__, #24
	wrlong	#10, ptr___system__dat__
	sub	ptr___system__dat__, #24
	neg	result1, #1
LR__0877
_fatfs_cc__rxtxioctl_1135_ret
	ret

_fatfs_cc___dummy_flush_1136
	mov	result1, #0
_fatfs_cc___dummy_flush_1136_ret
	ret

_fatfs_cc__vfswrite
	mov	COUNT_, #9
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	mov	local04, local02
	add	local01, #8
	rdlong	arg01, local01
	sub	local01, #8
	test	arg01, #2 wz
 if_e	add	ptr___system__dat__, #24
 if_e	wrlong	#6, ptr___system__dat__
 if_e	sub	ptr___system__dat__, #24
 if_e	neg	result1, #1
 if_e	jmp	#LR__0884
	add	local01, #8
	rdlong	result1, local01
	sub	local01, #8
	test	result1, #64 wz
 if_e	jmp	#LR__0879
	add	local01, #8
	rdlong	result1, local01
	sub	local01, #8
	test	result1, #128 wz
 if_e	jmp	#LR__0878
	add	local01, #44
	rdlong	arg03, local01
	sub	local01, #44
	rdlong	local05, arg03
	add	arg03, #4
	rdlong	local06, arg03
	mov	arg01, local01
	mov	arg02, #0
	mov	arg03, #2
	mov	local07, objptr
	mov	objptr, local05
	call	local06
	mov	objptr, local07
	add	local01, #8
	rdlong	local07, local01
	andn	local07, #128
	wrlong	local07, local01
	sub	local01, #8
LR__0878
LR__0879
	add	local01, #20
	rdlong	local07, local01 wz
	sub	local01, #20
 if_e	jmp	#LR__0881
	add	local01, #20
	rdlong	local07, local01
	sub	local01, #20
	rdlong	local05, local07
	add	local07, #4
	rdlong	local06, local07
	mov	arg02, local02
	mov	arg03, local03
	mov	arg01, local01
	mov	local07, objptr
	mov	objptr, local05
	call	local06
	mov	objptr, local07
	mov	local08, result1
	cmps	local08, #0 wc
 if_ae	jmp	#LR__0880
	add	local01, #8
	rdlong	local07, local01
	or	local07, #32
	wrlong	local07, local01
	add	ptr___system__dat__, #24
	wrlong	local08, ptr___system__dat__
	sub	ptr___system__dat__, #24
	cmp	local08, #0 wz
 if_ne	neg	result1, #1
 if_e	mov	result1, #0
	jmp	#LR__0884
LR__0880
	mov	result1, local08
	jmp	#LR__0884
LR__0881
	add	local01, #24
	rdlong	local09, local01 wz
	sub	local01, #24
 if_e	add	ptr___system__dat__, #24
 if_e	wrlong	#6, ptr___system__dat__
 if_e	sub	ptr___system__dat__, #24
 if_e	neg	result1, #1
 if_e	jmp	#LR__0884
	mov	local08, #0
LR__0882
	cmp	local03, #1 wc
 if_b	jmp	#LR__0883
	mov	local07, local09
	rdlong	local05, local07
	add	local07, #4
	rdlong	local06, local07
	rdbyte	arg01, local04
	mov	arg02, local01
	mov	local07, objptr
	mov	objptr, local05
	add	local04, #1
	call	local06
	mov	objptr, local07
	add	local08, result1
	sub	local03, #1
	jmp	#LR__0882
LR__0883
	mov	result1, local08
LR__0884
	mov	ptra, fp
	call	#popregs_
_fatfs_cc__vfswrite_ret
	ret

_fatfs_cc__vfsread
	mov	COUNT_, #11
	call	#pushregs_
	add	ptra, #40
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	add	fp, #4
	wrlong	arg03, fp
	sub	fp, #4
	rdlong	local01, fp
	add	fp, #20
	wrlong	local01, fp
	add	fp, #4
	wrlong	#0, fp
	sub	fp, #28
	rdlong	local02, fp
	sub	fp, #4
	add	local02, #8
	rdlong	local01, local02
	test	local01, #1 wz
 if_e	add	ptr___system__dat__, #24
 if_e	wrlong	#6, ptr___system__dat__
 if_e	sub	ptr___system__dat__, #24
 if_e	neg	result1, #1
 if_e	jmp	#LR__0891
	add	fp, #4
	rdlong	local01, fp
	sub	fp, #4
	add	local01, #16
	rdlong	local01, local01 wz
 if_e	jmp	#LR__0886
	add	fp, #4
	rdlong	arg01, fp
	mov	local02, arg01
	add	local02, #16
	rdlong	local01, local02
	rdlong	local02, local01
	add	local01, #4
	rdlong	local01, local01
	add	fp, #4
	rdlong	arg02, fp
	add	fp, #4
	rdlong	arg03, fp
	sub	fp, #12
	mov	local03, objptr
	mov	objptr, local02
	call	local01
	mov	objptr, local03
	add	fp, #16
	wrlong	result1, fp
	sub	fp, #16
	cmps	result1, #0 wc
 if_ae	jmp	#LR__0885
	add	fp, #4
	rdlong	local03, fp
	mov	local01, local03
	add	local03, #8
	rdlong	local03, local03
	or	local03, #32
	add	local01, #8
	wrlong	local03, local01
	add	fp, #12
	rdlong	arg01, fp wz
	sub	fp, #16
	add	ptr___system__dat__, #24
	wrlong	arg01, ptr___system__dat__
	sub	ptr___system__dat__, #24
 if_ne	neg	result1, #1
 if_e	mov	result1, #0
	jmp	#LR__0891
LR__0885
	add	fp, #16
	rdlong	result1, fp
	sub	fp, #16
	jmp	#LR__0891
LR__0886
	add	fp, #4
	rdlong	local01, fp
	add	local01, #28
	rdlong	local01, local01 wz
	add	fp, #20
	wrlong	local01, fp
	sub	fp, #24
 if_e	add	ptr___system__dat__, #24
 if_e	wrlong	#6, ptr___system__dat__
 if_e	sub	ptr___system__dat__, #24
 if_e	neg	result1, #1
 if_e	jmp	#LR__0891
	add	fp, #4
	rdlong	local01, fp
	sub	fp, #4
	add	local01, #36
	rdlong	local04, local01 wz
 if_e	jmp	#LR__0888
	add	fp, #4
	rdlong	local05, fp
	mov	local06, local05
	add	local06, #36
	rdlong	local07, local06
	mov	local01, local07
	rdlong	local02, local01
	add	local01, #4
	rdlong	local08, local01
	mov	local04, local08
	mov	local09, local05
	mov	local10, #256
	add	fp, #32
	mov	local11, fp
	mov	arg01, local09
	mov	arg02, #256
	mov	arg03, local11
	mov	local03, objptr
	mov	objptr, local02
	sub	fp, #36
	call	local04
	mov	objptr, local03
	add	fp, #16
	wrlong	result1, fp
	mov	local02, result1 wz
	sub	fp, #16
 if_ne	jmp	#LR__0887
	add	fp, #36
	rdlong	local06, fp
	sub	fp, #36
	mov	local04, local06
	and	local04, #2 wz
 if_ne	mov	local01, #1
 if_ne	add	fp, #32
 if_ne	wrlong	#1, fp
 if_ne	sub	fp, #32
LR__0887
LR__0888
	add	fp, #16
	wrlong	#0, fp
	sub	fp, #16
LR__0889
	add	fp, #12
	rdlong	local01, fp
	sub	fp, #12
	cmp	local01, #1 wc
 if_b	jmp	#LR__0890
	add	fp, #24
	rdlong	local01, fp
	rdlong	local02, local01
	add	local01, #4
	rdlong	local04, local01
	sub	fp, #20
	rdlong	arg01, fp
	sub	fp, #4
	mov	local08, objptr
	mov	objptr, local02
	call	local04
	mov	objptr, local08
	add	fp, #20
	wrlong	result1, fp
	sub	fp, #20
	cmps	result1, #0 wc
 if_b	jmp	#LR__0890
	add	fp, #28
	rdlong	local02, fp
	mov	local04, local02
	add	local04, #1
	wrlong	local04, fp
	sub	fp, #8
	rdlong	local05, fp
	wrbyte	local05, local02
	sub	fp, #4
	rdlong	local01, fp
	add	local01, #1
	wrlong	local01, fp
	sub	fp, #4
	rdlong	local01, fp
	sub	local01, #1
	wrlong	local01, fp
	add	fp, #20
	rdlong	local01, fp wz
	sub	fp, #32
 if_e	jmp	#LR__0889
	add	fp, #20
	rdlong	local04, fp
	sub	fp, #20
	cmp	local04, #10 wz
 if_ne	jmp	#LR__0889
LR__0890
	add	fp, #16
	rdlong	result1, fp
	sub	fp, #16
LR__0891
	mov	ptra, fp
	call	#popregs_
_fatfs_cc__vfsread_ret
	ret

_fatfs_cc__remove
	mov	COUNT_, #6
	call	#pushregs_
	mov	arg02, arg01
	add	ptr___system__dat__, #380
	mov	local01, ptr___system__dat__
	mov	arg01, local01
	mov	arg03, #0
	sub	ptr___system__dat__, #380
	call	#__system____getvfsforfile
	mov	local02, result1 wz
 if_ne	add	local02, #32
 if_ne	rdlong	arg01, local02
 if_ne	sub	local02, #32
 if_ne	cmps	arg01, #0 wz
 if_e	add	ptr___system__dat__, #24
 if_e	wrlong	#16, ptr___system__dat__
 if_e	sub	ptr___system__dat__, #24
 if_e	neg	result1, #1
 if_e	jmp	#LR__0894
	add	local02, #64
	rdlong	arg01, local02
	sub	local02, #64
	rdlong	local03, arg01
	add	arg01, #4
	rdlong	local04, arg01
	mov	arg01, local01
	mov	local05, objptr
	mov	objptr, local03
	call	local04
	mov	objptr, local05
	mov	local06, result1
	cmp	local06, ##-14 wz
 if_ne	jmp	#LR__0892
	add	local02, #60
	rdlong	local06, local02
	rdlong	local03, local06
	add	local06, #4
	rdlong	local04, local06
	mov	arg01, local01
	mov	local05, objptr
	mov	objptr, local03
	call	local04
	mov	objptr, local05
	mov	local06, result1
LR__0892
	cmp	local06, #0 wz
 if_e	jmp	#LR__0893
	neg	arg01, local06 wz
	add	ptr___system__dat__, #24
	wrlong	arg01, ptr___system__dat__
	sub	ptr___system__dat__, #24
 if_ne	neg	result1, #1
 if_e	mov	result1, #0
	jmp	#LR__0894
LR__0893
	mov	result1, #0
LR__0894
	mov	ptra, fp
	call	#popregs_
_fatfs_cc__remove_ret
	ret

_fatfs_cc___default_filbuf
	mov	COUNT_, #4
	call	#pushregs_
	rdlong	local01, arg01
	add	arg01, #16
	rdlong	arg03, arg01
	sub	arg01, #16
	rdlong	local02, arg03
	add	arg03, #4
	rdlong	local03, arg03
	add	local01, #12
	mov	arg02, local01
	sub	local01, #12
	decod	arg03, #10
	mov	local04, objptr
	mov	objptr, local02
	call	local03
	mov	objptr, local04
	mov	local04, result1
	cmps	local04, #0 wc
 if_b	neg	result1, #1
 if_b	jmp	#LR__0895
	wrlong	local04, local01
	add	local01, #12
	mov	local03, local01
	sub	local01, #8
	wrlong	local03, local01
	add	local01, #4
	rdlong	local03, local01
	or	local03, #1
	wrlong	local03, local01
	mov	result1, local04
LR__0895
	mov	ptra, fp
	call	#popregs_
_fatfs_cc___default_filbuf_ret
	ret

__struct___fmtfile_putchar
	mov	COUNT_, #3
	call	#pushregs_
	rdlong	arg02, objptr
	add	arg02, #24
	rdlong	arg02, arg02
	rdlong	local01, arg02
	add	arg02, #4
	rdlong	local02, arg02
	rdlong	arg02, objptr
	mov	local03, objptr
	mov	objptr, local01
	call	local02
	mov	objptr, local03
	mov	ptra, fp
	call	#popregs_
__struct___fmtfile_putchar_ret
	ret
hubexit
	jmp	#cogexit

__system___setbaud
	rdlong	muldiva_, #20
	mov	muldivb_, arg01
	call	#divide_
	dirl	#62
	dirl	#63
	wrlong	muldivb_, ptr___system__dat__
	shl	muldivb_, #16
	mov	arg02, #7
	add	arg02, muldivb_
	wrpin	#124, #62
	wxpin	arg02, #62
	wrpin	#62, #63
	add	arg02, #20
	wxpin	arg02, #63
	dirh	#62
	dirh	#63
__system___setbaud_ret
	ret

__system___txraw
	mov	COUNT_, #1
	call	#pushregs_
	mov	local01, arg01
	rdlong	result1, ptr___system__dat__ wz
 if_e	mov	arg01, ##230400
 if_e	call	#__system___setbaud
	wypin	local01, #62
	waitx	#1
	loc	pa,	#(@LR__0897-@LR__0896)
	call	#FCACHE_LOAD_
LR__0896
	testp	#62 wc
 if_ae	jmp	#LR__0896
LR__0897
	mov	result1, #1
	mov	ptra, fp
	call	#popregs_
__system___txraw_ret
	ret

__system___rxraw
	mov	COUNT_, #13
	call	#pushregs_
	mov	local01, arg01
	rdlong	local02, ptr___system__dat__ wz
 if_e	mov	arg01, ##230400
 if_e	call	#__system___setbaud
	cmp	local01, #0 wz
 if_e	jmp	#LR__0898
	rdlong	local03, #20
	shr	local03, #10
	qmul	local01, local03
	getct	result1
	getqx	local04
	add	result1, local04
	mov	local05, result1
LR__0898
	neg	local06, #1
	mov	local07, #63
	mov	local08, #0
	add	ptr___system__dat__, #4
	rdlong	local09, ptr___system__dat__
	sub	ptr___system__dat__, #4
LR__0899
	testb	local09, #8 wc
	testbn	local09, #9 andc
	shr	local09, #10
 if_b	mov	local08, #1
 if_ae	testp	#63 wz
 if_nc_and_z	mov	local08, #1
 if_nc_and_z	rdpin	local09, #63
 if_nc_and_z	shr	local09, #4
LR__0900
	mov	local02, #0
	cmp	local08, #0 wz
 if_ne	neg	local02, #1
	mov	local10, #0
	mov	local03, #0
	cmp	local01, #0 wz
 if_ne	neg	local03, #1
	mov	local04, #0
	mov	local11, #0
	getct	result1
	mov	local12, result1
	mov	local13, local12
	sub	local13, local05
	cmps	local13, #0 wc
 if_b	not	local11, #0
	cmp	local11, #0 wz
 if_ne	not	local04, #0
	test	local03, local04 wz
 if_ne	not	local10, #0
	or	local02, local10 wz
 if_e	jmp	#LR__0899
	cmp	local08, #0 wz
 if_ne	mov	local06, local09
 if_ne	getbyte	local06, local06, #0
	add	ptr___system__dat__, #4
	wrlong	local09, ptr___system__dat__
	sub	ptr___system__dat__, #4
	mov	result1, local06
	mov	ptra, fp
	call	#popregs_
__system___rxraw_ret
	ret

__system___getms
	getct	result2 wc
	getct	_var01
	add	ptr___system__dat__, #12
	rdlong	_var02, ptr___system__dat__ wz
	sub	ptr___system__dat__, #12
 if_ne	jmp	#LR__0901
	rdlong	_var02, #20
	qdiv	_var02, ##1000
	add	ptr___system__dat__, #12
	getqx	result1
	mov	_var02, result1
	wrlong	result1, ptr___system__dat__
	sub	ptr___system__dat__, #12
LR__0901
	setq	result2
	qdiv	_var01, _var02
	getqx	result1
__system___getms_ret
	ret

__system___getus
	getct	result2 wc
	getct	_var01
	add	ptr___system__dat__, #16
	rdlong	_var02, ptr___system__dat__ wz
	sub	ptr___system__dat__, #16
 if_ne	jmp	#LR__0902
	rdlong	_var02, #20
	qdiv	_var02, ##1000000
	add	ptr___system__dat__, #16
	getqx	result1
	mov	_var02, result1
	wrlong	result1, ptr___system__dat__
	sub	ptr___system__dat__, #16
LR__0902
	qdiv	result2, _var02
	getqy	result2
	setq	result2
	qdiv	_var01, _var02
	getqx	result1
__system___getus_ret
	ret

__system____builtin_memmove
	mov	_var01, arg01
	cmps	arg01, arg02 wc
 if_ae	jmp	#LR__0910
	loc	pa,	#(@LR__0904-@LR__0903)
	call	#FCACHE_LOAD_
LR__0903
	cmps	arg03, #4 wc
 if_b	jmp	#LR__0905
	rdlong	result1, arg02
	wrlong	result1, arg01
	add	arg01, #4
	add	arg02, #4
	sub	arg03, #4
	jmp	#LR__0903
LR__0904
LR__0905
	mov	_var02, arg03 wz
 if_e	jmp	#LR__0916
	loc	pa,	#(@LR__0908-@LR__0906)
	call	#FCACHE_LOAD_
LR__0906
	rep	@LR__0909, _var02
LR__0907
	rdbyte	_var02, arg02
	wrbyte	_var02, arg01
	add	arg01, #1
	add	arg02, #1
LR__0908
LR__0909
	jmp	#LR__0916
LR__0910
	add	arg01, arg03
	add	arg02, arg03
	mov	_var03, arg03 wz
 if_e	jmp	#LR__0915
	loc	pa,	#(@LR__0913-@LR__0911)
	call	#FCACHE_LOAD_
LR__0911
	rep	@LR__0914, _var03
LR__0912
	sub	arg01, #1
	sub	arg02, #1
	rdbyte	_var04, arg02
	wrbyte	_var04, arg01
LR__0913
LR__0914
LR__0915
LR__0916
	mov	result1, _var01
__system____builtin_memmove_ret
	ret

__system____builtin_strcpy
	mov	_var01, arg01
	loc	pa,	#(@LR__0918-@LR__0917)
	call	#FCACHE_LOAD_
LR__0917
	rdbyte	result1, arg02 wz
	wrbyte	result1, arg01
	add	arg02, #1
	add	arg01, #1
 if_ne	jmp	#LR__0917
LR__0918
	mov	result1, _var01
__system____builtin_strcpy_ret
	ret

__system____topofstack
	mov	COUNT_, #0
	call	#pushregs_
	add	ptra, #8
	add	fp, #4
	wrlong	arg01, fp
	mov	result1, fp
	sub	fp, #4
	mov	ptra, fp
	call	#popregs_
__system____topofstack_ret
	ret

__system___make_methodptr
	mov	COUNT_, #2
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	arg01, #8
	call	#__system___gc_alloc_managed
	cmps	result1, #0 wz
 if_ne	wrlong	local01, result1
 if_ne	mov	local01, result1
 if_ne	add	local01, #4
 if_ne	wrlong	local02, local01
	mov	ptra, fp
	call	#popregs_
__system___make_methodptr_ret
	ret

__system___lockmem
	mov	result1, #0
	cogid	result1
	add	result1, #256
LR__0919
	rdlong	_var01, arg01 wz
 if_e	wrlong	result1, arg01
 if_e	rdlong	_var01, arg01
 if_e	rdlong	_var01, arg01
	cmp	_var01, result1 wz
 if_ne	jmp	#LR__0919
__system___lockmem_ret
	ret

__system___tx
	mov	COUNT_, #2
	call	#pushregs_
	mov	local01, arg01
	cmp	local01, #10 wz
 if_ne	jmp	#LR__0920
	add	ptr___system__dat__, #8
	rdlong	local02, ptr___system__dat__
	sub	ptr___system__dat__, #8
	test	local02, #2 wz
 if_ne	mov	arg01, #13
 if_ne	call	#__system___txraw
LR__0920
	mov	arg01, local01
	call	#__system___txraw
	mov	ptra, fp
	call	#popregs_
__system___tx_ret
	ret

__system___rx
	mov	COUNT_, #1
	call	#pushregs_
LR__0921
	mov	arg01, #0
	call	#__system___rxraw
	mov	local01, result1
	cmp	local01, ##-1 wz
 if_e	jmp	#LR__0921
	cmp	local01, #13 wz
 if_ne	jmp	#LR__0922
	add	ptr___system__dat__, #8
	rdlong	result1, ptr___system__dat__
	sub	ptr___system__dat__, #8
	test	result1, #2 wz
 if_ne	mov	local01, #10
LR__0922
	add	ptr___system__dat__, #8
	rdlong	arg01, ptr___system__dat__
	sub	ptr___system__dat__, #8
	test	arg01, #1 wz
 if_e	jmp	#LR__0925
	cmp	local01, #127 wz
 if_ne	jmp	#LR__0923
	mov	arg01, #8
	call	#__system___tx
	jmp	#LR__0924
LR__0923
	mov	arg01, local01
	call	#__system___tx
LR__0924
LR__0925
	mov	result1, local01
	mov	ptra, fp
	call	#popregs_
__system___rx_ret
	ret

__system___waitms
	mov	_var01, arg01
	rdlong	_var02, #20
	loc	pa,	#(@LR__0927-@LR__0926)
	call	#FCACHE_LOAD_
LR__0926
	cmps	_var01, ##1001 wc
 if_ae	waitx	_var02
 if_ae	sub	_var01, ##1000
 if_ae	jmp	#LR__0926
LR__0927
	add	ptr___system__dat__, #12
	rdlong	_var03, ptr___system__dat__ wz
	sub	ptr___system__dat__, #12
 if_ne	jmp	#LR__0928
	qdiv	_var02, ##1000
	add	ptr___system__dat__, #12
	getqx	_var02
	mov	_var03, _var02
	wrlong	_var02, ptr___system__dat__
	sub	ptr___system__dat__, #12
LR__0928
	cmps	_var01, #1 wc
 if_ae	qmul	_var01, _var03
 if_ae	getqx	arg01
 if_ae	waitx	arg01
__system___waitms_ret
	ret

__system___waitus
	mov	_var01, arg01
	add	ptr___system__dat__, #16
	rdlong	_var02, ptr___system__dat__ wz
	sub	ptr___system__dat__, #16
 if_ne	jmp	#LR__0929
	rdlong	_var02, #20
	qdiv	_var02, ##1000000
	add	ptr___system__dat__, #16
	getqx	arg01
	mov	_var02, arg01
	wrlong	arg01, ptr___system__dat__
	sub	ptr___system__dat__, #16
LR__0929
	qmul	_var01, _var02
	getqx	arg01
	waitx	arg01
__system___waitus_ret
	ret

__system___mount
	mov	COUNT_, #18
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	neg	local03, #1
	rdbyte	arg01, local01
	cmp	arg01, #47 wz
 if_ne	jmp	#LR__0932
	mov	arg01, local01
	mov	local04, #0
	loc	pa,	#(@LR__0931-@LR__0930)
	call	#FCACHE_LOAD_
LR__0930
	rdbyte	result1, arg01 wz
 if_ne	add	local04, #1
 if_ne	add	arg01, #1
 if_ne	jmp	#LR__0930
LR__0931
	mov	result1, local04
	cmps	result1, #16 wc
 if_b	jmp	#LR__0933
LR__0932
	add	ptr___system__dat__, #24
	wrlong	#10, ptr___system__dat__
	sub	ptr___system__dat__, #24
	neg	result1, #1
	jmp	#LR__0945
LR__0933
	mov	local05, #0
LR__0934
	cmps	local05, #4 wc
 if_ae	jmp	#LR__0939
	mov	arg01, local05
	shl	arg01, #2
	add	ptr___system__dat__, #92
	add	arg01, ptr___system__dat__
	rdlong	arg01, arg01 wz
	sub	ptr___system__dat__, #92
 if_e	cmps	local03, #0 wc
 if_c_and_z	mov	local03, local05
 if_c_and_z	jmp	#LR__0938
	mov	arg01, local05
	shl	arg01, #2
	add	ptr___system__dat__, #92
	add	arg01, ptr___system__dat__
	rdlong	arg01, arg01
	sub	ptr___system__dat__, #92
	mov	local04, #0
	loc	pa,	#(@LR__0936-@LR__0935)
	call	#FCACHE_LOAD_
LR__0935
	rdbyte	result1, arg01 wz
 if_ne	add	local04, #1
 if_ne	add	arg01, #1
 if_ne	jmp	#LR__0935
LR__0936
	mov	result1, local04
	mov	local06, result1
	mov	arg01, local06
	add	arg01, local01
	rdbyte	arg01, arg01
	cmp	arg01, #47 wz
 if_ne	mov	local07, local06
 if_ne	add	local07, local01
 if_ne	rdbyte	arg01, local07 wz
 if_ne	jmp	#LR__0937
	mov	arg03, local05
	shl	arg03, #2
	add	ptr___system__dat__, #92
	mov	local08, ptr___system__dat__
	add	arg03, ptr___system__dat__
	rdlong	arg02, arg03
	mov	local09, local06
	mov	arg01, local01
	mov	arg03, local09
	sub	ptr___system__dat__, #92
	call	#__system__strncmp
	cmps	result1, #0 wz
 if_e	mov	local03, local05
 if_e	jmp	#LR__0939
LR__0937
LR__0938
	add	local05, #1
	jmp	#LR__0934
LR__0939
	cmp	local03, ##-1 wz
 if_e	add	ptr___system__dat__, #24
 if_e	wrlong	#11, ptr___system__dat__
 if_e	sub	ptr___system__dat__, #24
 if_e	neg	result1, #1
 if_e	jmp	#LR__0945
	mov	local05, local03
	mov	local07, local05
	shl	local07, #2
	add	ptr___system__dat__, #108
	add	local07, ptr___system__dat__
	rdlong	local10, local07 wz
	sub	ptr___system__dat__, #108
 if_e	jmp	#LR__0940
	add	local10, #76
	rdlong	local07, local10 wz
	sub	local10, #76
 if_e	jmp	#LR__0940
	add	local10, #76
	rdlong	local11, local10
	sub	local10, #76
	mov	local12, local11
	rdlong	local13, local12
	add	local12, #4
	rdlong	local07, local12
	mov	local14, local07
	mov	result1, local05
	shl	result1, #2
	add	ptr___system__dat__, #92
	mov	local15, ptr___system__dat__
	add	result1, ptr___system__dat__
	rdlong	local16, result1
	mov	arg01, local16
	mov	local17, objptr
	mov	objptr, local13
	sub	ptr___system__dat__, #92
	call	local14
	mov	objptr, local17
LR__0940
	mov	local12, local05
	shl	local12, #2
	add	ptr___system__dat__, #108
	add	local12, ptr___system__dat__
	wrlong	local02, local12
	cmp	local02, #0 wz
	sub	ptr___system__dat__, #108
 if_ne	jmp	#LR__0941
	shl	local05, #2
	add	ptr___system__dat__, #92
	add	local05, ptr___system__dat__
	wrlong	#0, local05
	sub	ptr___system__dat__, #92
	jmp	#LR__0944
LR__0941
	mov	local18, local05
	shl	local18, #4
	add	ptr___system__dat__, #28
	add	local18, ptr___system__dat__
	mov	arg01, local18
	mov	arg02, local01
	mov	arg03, #16
	sub	ptr___system__dat__, #28
	call	#__system__strncpy
	add	local02, #72
	rdlong	local12, local02 wz
	sub	local02, #72
 if_e	jmp	#LR__0943
	add	local02, #72
	rdlong	local12, local02
	rdlong	local13, local12
	add	local12, #4
	rdlong	local14, local12
	mov	arg01, local18
	mov	local17, objptr
	mov	objptr, local13
	call	local14
	mov	objptr, local17
	cmp	result1, #0 wz
 if_e	jmp	#LR__0942
	mov	local12, local05
	shl	local12, #2
	add	ptr___system__dat__, #108
	add	local12, ptr___system__dat__
	wrlong	#0, local12
	shl	local05, #2
	sub	ptr___system__dat__, #16
	add	local05, ptr___system__dat__
	wrlong	#0, local05
	sub	ptr___system__dat__, #68
	wrlong	#12, ptr___system__dat__
	sub	ptr___system__dat__, #24
	neg	result1, #1
	jmp	#LR__0945
LR__0942
LR__0943
	shl	local05, #2
	add	ptr___system__dat__, #92
	add	local05, ptr___system__dat__
	wrlong	local18, local05
	sub	ptr___system__dat__, #92
LR__0944
	mov	result1, #0
LR__0945
	mov	ptra, fp
	call	#popregs_
__system___mount_ret
	ret

__system____getvfsforfile
	mov	COUNT_, #19
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	loc	pa,	#(@LR__0947-@LR__0946)
	call	#FCACHE_LOAD_
LR__0946
	rdbyte	result1, local02
	cmp	result1, #47 wz
 if_ne	jmp	#LR__0948
	add	local02, #1
	rdbyte	result1, local02
	sub	local02, #1
	cmp	result1, #47 wz
 if_e	add	local02, #1
 if_e	jmp	#LR__0946
LR__0947
LR__0948
	rdbyte	arg03, local02
	cmp	arg03, #47 wz
 if_ne	jmp	#LR__0949
	mov	arg01, local01
	mov	arg02, local02
	mov	arg03, #256
	call	#__system__strncpy
	jmp	#LR__0954
LR__0949
	add	ptr___system__dat__, #124
	mov	arg02, ptr___system__dat__
	sub	ptr___system__dat__, #124
	mov	arg01, local01
	mov	arg03, #256
	call	#__system__strncpy
	rdbyte	local04, local02 wz
 if_e	jmp	#LR__0953
	rdbyte	local05, local02
	cmp	local05, #46 wz
 if_ne	jmp	#LR__0950
	add	local02, #1
	rdbyte	local06, local02
	sub	local02, #1
	mov	local07, local06
	zerox	local07, #7 wz
 if_e	jmp	#LR__0953
LR__0950
	rdbyte	local04, local01
	cmp	local04, #47 wz
 if_ne	jmp	#LR__0951
	add	local01, #1
	rdbyte	local07, local01
	sub	local01, #1
	mov	local05, local07
	zerox	local05, #7 wz
 if_e	jmp	#LR__0952
LR__0951
	mov	arg02, ##@LR__1229
	mov	arg01, local01
	mov	arg03, #256
	call	#__system__strncat
LR__0952
	mov	arg01, local01
	mov	arg02, local02
	mov	arg03, #256
	call	#__system__strncat
LR__0953
LR__0954
	rdbyte	local04, local01 wz
 if_e	jmp	#LR__0955
	rdbyte	local05, local01
	cmp	local05, #47 wz
 if_ne	jmp	#LR__0956
	add	local01, #1
	rdbyte	local07, local01
	sub	local01, #1
	zerox	local07, #7 wz
 if_ne	jmp	#LR__0956
LR__0955
	add	ptr___system__dat__, ##636
	mov	result1, ptr___system__dat__
	sub	ptr___system__dat__, ##636
	jmp	#LR__0971
LR__0956
	mov	local08, #0
LR__0957
	cmps	local08, #4 wc
 if_ae	jmp	#LR__0970
	mov	local04, local08
	shl	local04, #2
	add	ptr___system__dat__, #92
	add	local04, ptr___system__dat__
	rdlong	local07, local04 wz
	sub	ptr___system__dat__, #92
 if_e	jmp	#LR__0969
	mov	local05, local08
	shl	local05, #2
	add	ptr___system__dat__, #92
	add	local05, ptr___system__dat__
	rdlong	arg01, local05
	sub	ptr___system__dat__, #92
	mov	local09, #0
	loc	pa,	#(@LR__0959-@LR__0958)
	call	#FCACHE_LOAD_
LR__0958
	rdbyte	result1, arg01 wz
 if_ne	add	local09, #1
 if_ne	add	arg01, #1
 if_ne	jmp	#LR__0958
LR__0959
	mov	local10, local09
	mov	local05, local10
	add	local05, local01
	rdbyte	local04, local05
	cmp	local04, #47 wz
 if_ne	mov	local11, local10
 if_ne	mov	local12, local01
 if_ne	add	local11, local01
 if_ne	rdbyte	local06, local11 wz
 if_ne	jmp	#LR__0968
	mov	local07, local08
	shl	local07, #2
	add	ptr___system__dat__, #92
	mov	local13, ptr___system__dat__
	add	local07, ptr___system__dat__
	rdlong	local14, local07
	mov	local15, local10
	mov	arg01, local01
	mov	arg02, local14
	mov	arg03, local15
	sub	ptr___system__dat__, #92
	call	#__system__strncmp
	mov	local16, result1 wz
 if_ne	jmp	#LR__0968
	mov	local04, local08
	shl	local04, #2
	add	ptr___system__dat__, #108
	add	local04, ptr___system__dat__
	rdlong	local17, local04
	sub	ptr___system__dat__, #108
	loc	pa,	#(@LR__0962-@LR__0960)
	call	#FCACHE_LOAD_
LR__0960
	mov	local05, local10
	add	local05, #1
	mov	local07, local05
	mov	local06, local01
	add	local07, local01
	rdbyte	local04, local07
	cmp	local04, #46 wz
 if_ne	jmp	#LR__0963
	mov	local12, local10
	add	local12, #2
	mov	local16, local12
	mov	local14, local01
	add	local16, local01
	rdbyte	local11, local16
	cmp	local11, #47 wz
 if_e	jmp	#LR__0961
	mov	local13, local10
	add	local13, #2
	mov	local18, local13
	mov	local19, local01
	add	local18, local01
	rdbyte	local15, local18 wz
 if_ne	jmp	#LR__0963
LR__0961
	add	local10, #1
	jmp	#LR__0960
LR__0962
LR__0963
	cmp	local03, #0 wz
 if_ne	mov	arg01, local03
 if_ne	mov	arg02, local01
 if_ne	mov	arg03, #256
 if_ne	call	#__system__strncpy
	mov	arg02, local01
	add	arg02, local10
	add	arg02, #1
	mov	arg01, local01
	call	#__system____builtin_strcpy
	mov	arg01, local01
	mov	local09, #0
	loc	pa,	#(@LR__0965-@LR__0964)
	call	#FCACHE_LOAD_
LR__0964
	rdbyte	result1, arg01 wz
 if_ne	add	local09, #1
 if_ne	add	arg01, #1
 if_ne	jmp	#LR__0964
LR__0965
	mov	result1, local09
	mov	local10, result1
LR__0966
	cmps	local10, #1 wc
 if_b	jmp	#LR__0967
	mov	local05, local10
	add	local05, local01
	rdbyte	local04, local05
	cmp	local04, #47 wz
 if_e	mov	local04, local10
 if_e	add	local04, local01
 if_e	wrbyte	#0, local04
 if_e	sub	local10, #1
 if_e	jmp	#LR__0966
	mov	local05, local10
	add	local05, local01
	rdbyte	local04, local05
	cmp	local04, #46 wz
 if_ne	jmp	#LR__0967
	cmps	local10, #2 wc
 if_b	jmp	#LR__0967
	mov	local12, local10
	sub	local12, #1
	add	local12, local01
	rdbyte	local06, local12
	cmp	local06, #47 wz
 if_ne	jmp	#LR__0967
	mov	local05, local10
	sub	local05, #1
	add	local05, local01
	wrbyte	#0, local05
	sub	local10, #2
	jmp	#LR__0966
LR__0967
	mov	result1, local17
	jmp	#LR__0971
LR__0968
LR__0969
	add	local08, #1
	jmp	#LR__0957
LR__0970
	add	ptr___system__dat__, ##752
	rdlong	result1, ptr___system__dat__
	sub	ptr___system__dat__, ##752
LR__0971
	mov	ptra, fp
	call	#popregs_
__system____getvfsforfile_ret
	ret

__system___basic_print_char
	mov	COUNT_, #3
	call	#pushregs_
	mov	local01, arg02
	call	#__system___gettxfunc
	mov	arg01, result1 wz
 if_e	mov	result1, #0
 if_e	jmp	#LR__0972
	rdlong	local02, arg01
	add	arg01, #4
	rdlong	local03, arg01
	mov	arg01, local01
	mov	local01, objptr
	mov	objptr, local02
	call	local03
	mov	objptr, local01
	mov	result1, #1
LR__0972
	mov	ptra, fp
	call	#popregs_
__system___basic_print_char_ret
	ret

__system___basic_print_string
	mov	COUNT_, #3
	call	#pushregs_
	mov	local01, arg02
	mov	local02, arg03
	call	#__system___gettxfunc
	mov	local03, result1 wz
 if_e	mov	result1, #0
 if_e	jmp	#LR__0973
	cmp	local01, #0 wz
 if_e	mov	result1, #0
 if_ne	mov	arg02, local02
 if_ne	mov	arg03, local01
 if_ne	mov	arg01, local03
 if_ne	call	#__system___fmtstr
LR__0973
	mov	ptra, fp
	call	#popregs_
__system___basic_print_string_ret
	ret

__system___basic_print_integer
	mov	COUNT_, #4
	call	#pushregs_
	mov	local01, arg02
	mov	local02, arg03
	mov	local03, arg04
	call	#__system___gettxfunc
	mov	local04, result1 wz
 if_e	mov	result1, #0
 if_ne	mov	arg02, local02
 if_ne	mov	arg03, local01
 if_ne	mov	arg04, local03
 if_ne	mov	arg01, local04
 if_ne	call	#__system___fmtnum
	mov	ptra, fp
	call	#popregs_
__system___basic_print_integer_ret
	ret

__system___fmtchar
	mov	COUNT_, #0
	call	#pushregs_
	add	ptra, #20
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	add	fp, #4
	wrlong	arg03, fp
	add	fp, #4
	wrbyte	arg03, fp
	add	fp, #1
	wrbyte	#0, fp
	sub	fp, #13
	rdlong	arg01, fp
	add	fp, #4
	rdlong	arg02, fp
	add	fp, #8
	mov	arg03, fp
	sub	fp, #16
	call	#__system___fmtstr
	mov	ptra, fp
	call	#popregs_
__system___fmtchar_ret
	ret

__system___fmtstr
	mov	COUNT_, #10
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	getbyte	arg04, local02, #0
	mov	arg01, local03
	mov	local04, #0
	loc	pa,	#(@LR__0975-@LR__0974)
	call	#FCACHE_LOAD_
LR__0974
	rdbyte	result1, arg01 wz
 if_ne	add	local04, #1
 if_ne	add	arg01, #1
 if_ne	jmp	#LR__0974
LR__0975
	mov	local05, local04
	cmp	arg04, #0 wz
 if_ne	fles	local05, arg04 wcz
	mov	arg02, local02
	mov	arg03, local05
	mov	arg01, local01
	mov	arg04, #2
	call	#__system___fmtpad
	mov	local06, result1
	cmps	local06, #0 wc
 if_b	mov	result1, local06
 if_b	jmp	#LR__0978
	mov	local07, #0
LR__0976
	cmps	local07, local05 wc
 if_ae	jmp	#LR__0977
	mov	arg01, local01
	rdlong	local04, arg01
	add	arg01, #4
	rdlong	local08, arg01
	rdbyte	arg01, local03
	mov	local09, objptr
	mov	objptr, local04
	add	local03, #1
	call	local08
	mov	objptr, local09
	mov	local09, result1
	cmps	local09, #0 wc
 if_b	mov	result1, local09
 if_b	jmp	#LR__0978
	add	local06, local09
	add	local07, #1
	jmp	#LR__0976
LR__0977
	mov	arg02, local02
	mov	arg03, local05
	mov	arg01, local01
	mov	arg04, #1
	call	#__system___fmtpad
	mov	local10, result1
	cmps	local10, #0 wc
 if_b	mov	result1, local10
 if_ae	add	local06, local10
 if_ae	mov	result1, local06
LR__0978
	mov	ptra, fp
	call	#popregs_
__system___fmtstr_ret
	ret

__system___fmtnum
	mov	COUNT_, #3
	call	#pushregs_
	add	ptra, #112
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	add	fp, #4
	wrlong	arg03, fp
	add	fp, #4
	wrlong	arg04, fp
	add	fp, #4
	mov	result1, fp
	add	fp, #68
	wrlong	result1, fp
	add	fp, #4
	wrlong	#0, fp
	sub	fp, #84
	rdlong	result1, fp
	shr	result1, #16
	and	result1, #63
	add	fp, #88
	wrlong	result1, fp
	sub	fp, #88
	rdlong	result1, fp
	getbyte	result1, result1, #0
	add	fp, #92
	wrlong	result1, fp
	sub	fp, #92
	rdlong	result1, fp
	shr	result1, #26
	and	result1, #3
	add	fp, #96
	wrlong	result1, fp
	sub	fp, #8
	rdlong	local01, fp
	sub	fp, #96
	cmps	local01, #1 wc
 if_ae	add	fp, #96
 if_ae	rdlong	local01, fp
 if_ae	sub	local01, #1
 if_ae	wrlong	local01, fp
 if_ae	sub	fp, #96
	add	fp, #100
	rdlong	local01, fp
	sub	fp, #100
	cmps	local01, #65 wc
 if_b	add	fp, #100
 if_b	rdlong	local01, fp
 if_b	sub	fp, #100
 if_b	cmps	local01, #0 wz
 if_nc_or_z	add	fp, #100
 if_nc_or_z	wrlong	#64, fp
 if_nc_or_z	sub	fp, #100
	add	fp, #104
	rdlong	local01, fp
	sub	fp, #104
	cmp	local01, #3 wz
 if_e	add	fp, #104
 if_e	wrlong	#0, fp
 if_e	sub	fp, #104
 if_e	jmp	#LR__0980
	add	fp, #12
	rdlong	local01, fp
	sub	fp, #12
	cmps	local01, #0 wc
 if_ae	jmp	#LR__0979
	add	fp, #104
	wrlong	#4, fp
	sub	fp, #92
	rdlong	local01, fp
	neg	local01, local01
	wrlong	local01, fp
	sub	fp, #12
LR__0979
LR__0980
	add	fp, #104
	rdlong	local01, fp wz
	sub	fp, #104
 if_e	jmp	#LR__0987
	add	fp, #92
	rdlong	local01, fp
	add	local01, #1
	wrlong	local01, fp
	add	fp, #4
	rdlong	local01, fp
	add	fp, #4
	rdlong	arg03, fp
	sub	fp, #100
	cmp	local01, arg03 wz
 if_ne	jmp	#LR__0982
	add	fp, #96
	rdlong	local01, fp
	sub	local01, #1 wz
	wrlong	local01, fp
	sub	fp, #96
 if_ne	jmp	#LR__0981
	add	fp, #4
	rdlong	arg01, fp
	add	fp, #4
	rdlong	arg02, fp
	sub	fp, #8
	mov	arg03, #35
	call	#__system___fmtchar
	jmp	#LR__0992
LR__0981
LR__0982
	add	fp, #104
	rdlong	local01, fp
	sub	fp, #104
	cmp	local01, #2 wz
 if_ne	jmp	#LR__0983
	add	fp, #88
	rdlong	local01, fp
	mov	result1, local01
	add	result1, #1
	wrlong	result1, fp
	sub	fp, #88
	wrbyte	#32, local01
	jmp	#LR__0986
LR__0983
	add	fp, #104
	rdlong	local01, fp
	sub	fp, #104
	cmp	local01, #4 wz
 if_ne	jmp	#LR__0984
	add	fp, #88
	rdlong	local01, fp
	mov	result1, local01
	add	result1, #1
	wrlong	result1, fp
	sub	fp, #88
	wrbyte	#45, local01
	jmp	#LR__0985
LR__0984
	add	fp, #88
	rdlong	local01, fp
	mov	result1, local01
	add	result1, #1
	wrlong	result1, fp
	sub	fp, #88
	wrbyte	#43, local01
LR__0985
LR__0986
LR__0987
	add	fp, #88
	rdlong	arg01, fp
	sub	fp, #76
	rdlong	arg02, fp
	add	fp, #4
	rdlong	arg03, fp
	add	fp, #80
	rdlong	arg04, fp
	mov	arg05, #0
	sub	fp, #88
	rdlong	local01, fp
	sub	fp, #8
	testbn	local01, #29 wz
 if_ne	mov	arg05, #1
	call	#__system___uitoa
	mov	local02, result1
	add	fp, #92
	rdlong	local01, fp
	add	local01, local02
	wrlong	local01, fp
	add	fp, #8
	rdlong	local03, fp
	sub	fp, #100
	cmps	local01, local03 wcz
 if_be	jmp	#LR__0991
	loc	pa,	#(@LR__0989-@LR__0988)
	call	#FCACHE_LOAD_
LR__0988
	add	fp, #100
	rdlong	local02, fp
	mov	local03, local02
	sub	local03, #1
	wrlong	local03, fp
	sub	fp, #100
	cmps	local02, #1 wc
 if_b	jmp	#LR__0990
	add	fp, #88
	rdlong	local02, fp
	mov	local03, local02
	add	local03, #1
	wrlong	local03, fp
	sub	fp, #88
	wrbyte	#35, local02
	jmp	#LR__0988
LR__0989
LR__0990
	add	fp, #88
	rdlong	local02, fp
	mov	local03, local02
	add	local03, #1
	wrlong	local03, fp
	sub	fp, #88
	wrbyte	#0, local02
LR__0991
	add	fp, #4
	rdlong	arg01, fp
	add	fp, #4
	rdlong	arg02, fp
	add	fp, #12
	mov	arg03, fp
	sub	fp, #20
	call	#__system___fmtstr
LR__0992
	mov	ptra, fp
	call	#popregs_
__system___fmtnum_ret
	ret

__system___fmtfloat
	mov	COUNT_, #16
	call	#pushregs_
	add	ptra, #292
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	add	fp, #4
	wrlong	arg03, fp
	add	fp, #4
	wrlong	arg04, fp
	add	fp, #12
	wrlong	#10, fp
	add	fp, #8
	wrlong	#0, fp
	add	fp, #8
	wrlong	#0, fp
	add	fp, #8
	wrlong	#0, fp
	add	fp, #4
	wrlong	#2, fp
	add	fp, #4
	wrlong	#0, fp
	add	fp, #4
	wrlong	#0, fp
	add	fp, #4
	wrlong	#0, fp
	add	fp, #4
	wrlong	#0, fp
	add	fp, #24
	wrlong	#0, fp
	add	fp, #104
	mov	local01, fp
	sub	fp, #8
	wrlong	local01, fp
	add	fp, #4
	wrlong	local01, fp
	sub	fp, #188
	rdlong	local02, fp
	shr	local02, #16
	and	local02, #63
	add	fp, #176
	wrlong	local02, fp
	sub	fp, #176
	rdlong	local02, fp
	shr	local02, #28
	and	local02, #1
	add	fp, #264
	wrlong	local02, fp
	sub	fp, #88
	rdlong	local02, fp wz
	sub	fp, #184
 if_ne	jmp	#LR__0994
	add	fp, #16
	rdlong	local02, fp
	sub	fp, #16
	cmp	local02, #97 wz
 if_ne	jmp	#LR__0993
	add	fp, #184
	wrlong	#13, fp
	sub	fp, #132
	wrlong	#1, fp
	sub	fp, #52
	jmp	#LR__0995
LR__0993
	add	fp, #184
	wrlong	#6, fp
	sub	fp, #184
	jmp	#LR__0995
LR__0994
	add	fp, #184
	rdlong	local02, fp
	sub	local02, #1
	wrlong	local02, fp
	sub	fp, #184
LR__0995
	add	fp, #8
	rdlong	local02, fp
	shr	local02, #22
	and	local02, #3
	add	fp, #260
	wrlong	local02, fp
	sub	fp, #260
	rdlong	local02, fp
	shr	local02, #29
	and	local02, #1
	add	fp, #180
	wrlong	local02, fp
	sub	fp, #180
	rdlong	local02, fp
	getbyte	local02, local02, #1
	add	fp, #96
	wrlong	local02, fp
	sub	fp, #96
	rdlong	local02, fp
	getbyte	local02, local02, #0
	add	fp, #100
	wrlong	local02, fp
	mov	local02, #0
	sub	fp, #92
	rdlong	local01, fp
	cmp	local01, #101 wz
 if_e	mov	local02, #1
	add	fp, #20
	wrlong	local02, fp
	add	fp, #152
	rdlong	local01, fp wz
 if_ne	mov	local02, #69
 if_e	mov	local02, #101
	sub	fp, #140
	wrlong	local02, fp
	sub	fp, #32
	rdlong	local02, fp
	sub	fp, #16
	cmp	local02, #97 wz
 if_ne	jmp	#LR__0996
	add	fp, #36
	wrlong	#1, fp
	add	fp, #152
	rdlong	local01, fp wz
 if_ne	mov	local02, #80
 if_e	mov	local02, #112
	sub	fp, #140
	wrlong	local02, fp
	sub	fp, #20
	wrlong	#2, fp
	add	fp, #28
	wrlong	#1, fp
	add	fp, #132
	rdlong	local01, fp wz
 if_ne	mov	local02, #88
 if_e	mov	local02, #120
	sub	fp, #124
	wrlong	local02, fp
	sub	fp, #64
LR__0996
	add	fp, #16
	rdlong	local02, fp
	sub	fp, #16
	cmp	local02, #35 wz
 if_ne	jmp	#LR__0999
	add	fp, #72
	wrlong	#1, fp
	add	fp, #200
	rdlong	local02, fp wz
	sub	fp, #272
 if_e	jmp	#LR__0997
	add	fp, #16
	wrlong	#102, fp
	add	fp, #256
	wrlong	#0, fp
	sub	fp, #272
	jmp	#LR__0998
LR__0997
	add	fp, #272
	wrlong	#1, fp
	sub	fp, #272
LR__0998
LR__0999
	add	fp, #8
	rdlong	local02, fp
	shr	local02, #26
	and	local02, #3
	add	fp, #92
	wrlong	local02, fp
	sub	fp, #88
	rdlong	result1, fp
	sub	fp, #12
	shr	result1, #31 wz
 if_e	jmp	#LR__1000
	add	fp, #44
	wrlong	#45, fp
	sub	fp, #32
	rdlong	result1, fp
	bitnot	result1, #31
	wrlong	result1, fp
	sub	fp, #12
	jmp	#LR__1002
LR__1000
	add	fp, #100
	rdlong	local02, fp
	sub	fp, #100
	cmp	local02, #1 wz
 if_e	add	fp, #44
 if_e	wrlong	#43, fp
 if_e	sub	fp, #44
 if_e	jmp	#LR__1001
	add	fp, #100
	rdlong	local02, fp
	sub	fp, #100
	cmp	local02, #2 wz
 if_e	add	fp, #44
 if_e	wrlong	#32, fp
 if_e	sub	fp, #44
LR__1001
LR__1002
	add	fp, #8
	rdlong	local02, fp
	shr	local02, #24
	and	local02, #3
	add	fp, #60
	wrlong	local02, fp
	mov	local02, #0
	sub	fp, #24
	rdlong	local03, fp
	sub	fp, #44
	mov	local01, local03 wz
 if_ne	jmp	#LR__1003
	add	fp, #28
	rdlong	local04, fp
	sub	fp, #28
	mov	local05, local04
	cmp	local05, #10 wz
 if_e	jmp	#LR__1004
LR__1003
	xor	local02, #1
LR__1004
	add	fp, #60
	wrlong	local02, fp
	sub	fp, #60
	cmp	local02, #0 wz
 if_e	jmp	#LR__1006
	add	fp, #68
	rdlong	local03, fp
	sub	fp, #68
	cmp	local03, #2 wz
 if_ne	jmp	#LR__1006
	add	fp, #268
	rdlong	local06, fp
	sub	fp, #268
	mov	local04, local06
	cmp	local04, #2 wz
 if_e	jmp	#LR__1006
	add	fp, #192
	rdlong	arg01, fp
	sub	fp, #148
	rdlong	arg02, fp
	add	fp, #20
	rdlong	arg03, fp
	sub	fp, #64
	call	#__system__emitsign_0684
	add	fp, #276
	wrlong	result1, fp
	sub	fp, #276
	cmps	result1, #0 wc
 if_b	add	fp, #276
 if_b	rdlong	result1, fp
 if_b	sub	fp, #276
 if_b	jmp	#LR__1057
	add	fp, #192
	rdlong	local02, fp
	add	fp, #84
	rdlong	local05, fp
	mov	local03, local05
	add	local02, local05
	sub	fp, #84
	wrlong	local02, fp
	sub	fp, #88
	rdlong	local01, fp wz
	sub	fp, #104
 if_e	jmp	#LR__1005
	add	fp, #104
	rdlong	local02, fp
	add	fp, #172
	rdlong	local03, fp
	sub	local02, local03
	sub	fp, #172
	wrlong	local02, fp
	sub	fp, #104
	cmps	local02, #0 wc
 if_b	add	fp, #104
 if_b	wrlong	#0, fp
 if_b	sub	fp, #104
	add	fp, #8
	rdlong	local01, fp
	bitl	local01, #232
	wrlong	local01, fp
	mov	local02, local01
	add	fp, #96
	rdlong	local05, fp
	mov	local03, local05
	shl	local03, #8
	or	local02, local03
	sub	fp, #96
	wrlong	local02, fp
	sub	fp, #8
LR__1005
	mov	local02, #0
	add	fp, #60
	wrlong	#0, fp
	sub	fp, #60
LR__1006
	add	fp, #12
	rdlong	arg01, fp
	sub	fp, #12
	call	#__system____builtin_ilogb
	cmp	result1, ##2147483647 wz
 if_ne	jmp	#LR__1008
	add	fp, #44
	rdlong	local02, fp wz
	sub	fp, #44
 if_e	jmp	#LR__1007
	add	fp, #192
	rdlong	local01, fp
	mov	local03, local01
	add	local03, #1
	wrlong	local03, fp
	sub	fp, #148
	rdlong	local04, fp
	sub	fp, #44
	wrbyte	local04, local01
LR__1007
	add	fp, #192
	rdlong	arg01, fp
	sub	fp, #192
	mov	arg02, ##@LR__1230
	call	#__system____builtin_strcpy
	jmp	#LR__1045
LR__1008
	add	fp, #12
	rdlong	arg01, fp
	sub	fp, #12
	call	#__system____builtin_ilogb
	cmp	result1, ##-2147483648 wz
 if_ne	jmp	#LR__1010
	add	fp, #44
	rdlong	local02, fp wz
	sub	fp, #44
 if_e	jmp	#LR__1009
	add	fp, #192
	rdlong	local01, fp
	mov	local03, local01
	add	local03, #1
	wrlong	local03, fp
	sub	fp, #148
	rdlong	local04, fp
	sub	fp, #44
	wrbyte	local04, local01
LR__1009
	add	fp, #192
	rdlong	arg01, fp
	sub	fp, #192
	mov	arg02, ##@LR__1231
	call	#__system____builtin_strcpy
	jmp	#LR__1045
LR__1010
	add	fp, #16
	rdlong	local01, fp
	sub	fp, #16
	cmp	local01, #103 wz
 if_e	jmp	#LR__1011
	add	fp, #16
	rdlong	local05, fp
	sub	fp, #16
	mov	local03, local05
	cmp	local03, #35 wz
 if_ne	jmp	#LR__1016
LR__1011
	add	fp, #12
	rdlong	arg01, fp
	add	fp, #8
	mov	arg02, fp
	add	fp, #12
	mov	arg03, fp
	add	fp, #152
	rdlong	arg04, fp
	sub	fp, #156
	rdlong	arg05, fp
	sub	fp, #28
	call	#__system__disassemble_0682
	add	fp, #16
	rdlong	local02, fp
	sub	fp, #16
	cmp	local02, #35 wz
 if_ne	jmp	#LR__1013
	add	fp, #32
	rdlong	local02, fp
	add	fp, #152
	rdlong	local03, fp
	sub	fp, #184
	cmps	local02, local03 wcz
 if_a	add	fp, #36
 if_a	wrlong	#1, fp
 if_a	sub	fp, #36
 if_a	jmp	#LR__1019
	add	fp, #32
	rdlong	local02, fp
	sub	fp, #32
	cmps	local02, #0 wc
 if_ae	jmp	#LR__1012
	add	fp, #184
	rdlong	local02, fp
	neg	local02, local02
	sub	fp, #152
	rdlong	local03, fp
	sub	fp, #32
	cmps	local03, local02 wcz
 if_be	add	fp, #36
 if_be	wrlong	#1, fp
 if_be	sub	fp, #36
	jmp	#LR__1019
LR__1012
	add	fp, #32
	rdlong	local02, fp
	sub	fp, #32
	cmps	local02, #1 wc
 if_b	jmp	#LR__1019
	add	fp, #184
	rdlong	local02, fp
	sub	fp, #152
	rdlong	local03, fp
	sub	local02, local03
	add	fp, #152
	wrlong	local02, fp
	sub	fp, #184
	jmp	#LR__1019
LR__1013
	mov	local02, #0
	add	fp, #8
	rdlong	local01, fp
	shr	local01, #28
	test	local01, #1 wz
 if_e	mov	local02, #1
	add	fp, #44
	wrlong	local02, fp
	sub	fp, #20
	rdlong	local01, fp
	mov	local02, local01
	add	fp, #152
	rdlong	local05, fp
	sub	fp, #184
	cmps	local02, local05 wc
 if_ae	jmp	#LR__1014
	add	fp, #32
	rdlong	local06, fp
	sub	fp, #32
	cmps	local06, ##-4 wc
 if_ae	jmp	#LR__1015
LR__1014
	add	fp, #36
	wrlong	#1, fp
	sub	fp, #36
	jmp	#LR__1019
LR__1015
	add	fp, #184
	rdlong	local04, fp
	sub	fp, #152
	rdlong	local03, fp
	sub	local04, local03
	add	fp, #152
	wrlong	local04, fp
	sub	fp, #172
	rdlong	arg01, fp
	add	fp, #8
	mov	arg02, fp
	add	fp, #12
	mov	arg03, fp
	neg	arg04, local04
	sub	fp, #4
	rdlong	arg05, fp
	sub	fp, #28
	call	#__system__disassemble_0682
	jmp	#LR__1019
LR__1016
	add	fp, #36
	rdlong	local02, fp wz
	sub	fp, #36
 if_e	jmp	#LR__1017
	add	fp, #12
	rdlong	arg01, fp
	add	fp, #8
	mov	arg02, fp
	add	fp, #12
	mov	arg03, fp
	add	fp, #152
	rdlong	arg04, fp
	sub	fp, #156
	rdlong	arg05, fp
	sub	fp, #28
	call	#__system__disassemble_0682
	jmp	#LR__1018
LR__1017
	add	fp, #12
	rdlong	arg01, fp
	add	fp, #8
	mov	arg02, fp
	add	fp, #12
	mov	arg03, fp
	add	fp, #152
	rdlong	local04, fp
	add	local04, #1
	neg	arg04, local04
	sub	fp, #156
	rdlong	arg05, fp
	sub	fp, #28
	call	#__system__disassemble_0682
LR__1018
LR__1019
	add	fp, #28
	rdlong	local02, fp
	sub	fp, #28
	cmp	local02, #2 wz
 if_ne	jmp	#LR__1022
	add	fp, #28
	wrlong	#16, fp
	sub	fp, #28
LR__1020
	add	fp, #20
	rdlong	local02, fp wz
	sub	fp, #20
 if_e	jmp	#LR__1021
	add	fp, #20
	rdlong	local03, fp
	sub	fp, #20
	cmp	local03, ##16777216 wc
 if_ae	jmp	#LR__1021
	add	fp, #20
	rdlong	local02, fp
	shl	local02, #1
	wrlong	local02, fp
	sub	fp, #20
	jmp	#LR__1020
LR__1021
LR__1022
	add	fp, #112
	mov	arg01, fp
	sub	fp, #92
	rdlong	arg02, fp
	add	fp, #8
	rdlong	arg03, fp
	add	fp, #160
	rdlong	arg05, fp
	sub	fp, #188
	mov	arg04, #1
	call	#__system___uitoa
	add	fp, #88
	wrlong	result1, fp
	sub	fp, #56
	rdlong	local02, fp
	sub	fp, #32
	cmps	local02, #0 wc
 if_ae	jmp	#LR__1023
	add	fp, #96
	wrlong	#45, fp
	add	fp, #80
	mov	arg01, fp
	sub	fp, #144
	rdlong	local03, fp
	neg	arg02, local03
	add	fp, #24
	rdlong	arg04, fp
	add	fp, #132
	rdlong	local06, fp
	sub	fp, #188
	mov	arg03, #10
	mov	arg05, local06
	call	#__system___uitoa
	add	fp, #92
	wrlong	result1, fp
	sub	fp, #92
	jmp	#LR__1024
LR__1023
	add	fp, #96
	wrlong	#43, fp
	add	fp, #80
	mov	arg01, fp
	sub	fp, #144
	rdlong	arg02, fp
	add	fp, #24
	rdlong	arg04, fp
	add	fp, #132
	rdlong	local06, fp
	sub	fp, #188
	mov	arg03, #10
	mov	arg05, local06
	call	#__system___uitoa
	add	fp, #92
	wrlong	result1, fp
	sub	fp, #92
LR__1024
	add	fp, #36
	rdlong	local02, fp wz
	sub	fp, #36
 if_e	jmp	#LR__1025
	add	fp, #80
	wrlong	#0, fp
	sub	fp, #4
	wrlong	#0, fp
	add	fp, #108
	rdlong	local02, fp
	add	local02, #1
	sub	fp, #100
	wrlong	local02, fp
	sub	fp, #84
	jmp	#LR__1028
LR__1025
	add	fp, #32
	rdlong	local02, fp
	sub	fp, #32
	cmps	local02, #0 wc
 if_ae	jmp	#LR__1026
	add	fp, #32
	rdlong	local01, fp
	add	fp, #48
	wrlong	local01, fp
	sub	fp, #4
	wrlong	local01, fp
	sub	fp, #44
	rdlong	local02, fp
	add	fp, #152
	rdlong	local03, fp
	add	local02, local03
	add	local02, #1
	sub	fp, #100
	wrlong	local02, fp
	sub	fp, #84
	jmp	#LR__1027
LR__1026
	add	fp, #76
	wrlong	#0, fp
	sub	fp, #44
	rdlong	local02, fp
	add	fp, #48
	wrlong	local02, fp
	add	fp, #104
	rdlong	local03, fp
	add	local02, local03
	add	local02, #1
	sub	fp, #100
	wrlong	local02, fp
	sub	fp, #84
LR__1027
LR__1028
	add	fp, #84
	rdlong	local02, fp
	sub	fp, #8
	rdlong	local03, fp
	sub	local02, local03
	add	local02, #1
	sub	fp, #36
	wrlong	local02, fp
	add	fp, #4
	rdlong	local02, fp wz
	sub	fp, #44
 if_ne	add	fp, #40
 if_ne	rdlong	local03, fp
 if_ne	add	local03, #1
 if_ne	wrlong	local03, fp
 if_ne	sub	fp, #40
	add	fp, #28
	rdlong	local02, fp
	sub	fp, #28
	cmp	local02, #16 wz
 if_e	add	fp, #40
 if_e	rdlong	local02, fp
 if_e	add	local02, #2
 if_e	wrlong	local02, fp
 if_e	sub	fp, #40
	add	fp, #36
	rdlong	local02, fp wz
	sub	fp, #36
 if_e	jmp	#LR__1029
	add	fp, #40
	rdlong	local02, fp
	mov	local03, #2
	add	fp, #52
	rdlong	local05, fp
	add	local03, local05
	add	local02, local03
	sub	fp, #52
	wrlong	local02, fp
	sub	fp, #40
LR__1029
	add	fp, #40
	rdlong	local02, fp
	sub	fp, #40
	cmps	local02, #65 wc
 if_ae	neg	result1, #1
 if_ae	jmp	#LR__1057
	add	fp, #60
	rdlong	local02, fp wz
	sub	fp, #60
 if_e	jmp	#LR__1030
	add	fp, #192
	rdlong	arg01, fp
	sub	fp, #148
	rdlong	arg02, fp
	add	fp, #20
	rdlong	arg03, fp
	sub	fp, #64
	call	#__system__emitsign_0684
	add	fp, #280
	wrlong	result1, fp
	sub	fp, #280
	cmps	result1, #0 wc
 if_b	add	fp, #280
 if_b	rdlong	result1, fp
 if_b	sub	fp, #280
 if_b	jmp	#LR__1057
	add	fp, #192
	rdlong	local02, fp
	add	fp, #88
	rdlong	local03, fp
	add	local02, local03
	sub	fp, #88
	wrlong	local02, fp
	sub	fp, #192
LR__1030
	add	fp, #76
	rdlong	local02, fp
	sub	fp, #52
	wrlong	local02, fp
	sub	fp, #24
	loc	pa,	#(@LR__1036-@LR__1031)
	call	#FCACHE_LOAD_
LR__1031
	add	fp, #24
	rdlong	local03, fp
	mov	local01, local03
	add	fp, #60
	rdlong	local04, fp
	sub	fp, #84
	mov	local05, local04
	cmps	local01, local05 wc
 if_ae	jmp	#LR__1037
	add	fp, #24
	rdlong	local06, fp
	sub	fp, #24
	cmps	local06, #0 wc
 if_b	jmp	#LR__1032
	add	fp, #24
	rdlong	local06, fp
	add	fp, #64
	rdlong	local07, fp
	sub	fp, #88
	cmps	local06, local07 wc
 if_ae	jmp	#LR__1032
	add	fp, #192
	rdlong	local07, fp
	mov	local06, local07
	add	local07, #1
	wrlong	local07, fp
	sub	fp, #168
	rdlong	local07, fp
	mov	local08, local07
	add	fp, #88
	mov	local09, fp
	add	local08, fp
	rdbyte	local10, local08
	wrbyte	local10, local06
	sub	fp, #112
	jmp	#LR__1033
LR__1032
	add	fp, #192
	rdlong	local06, fp
	mov	local08, local06
	add	local08, #1
	wrlong	local08, fp
	sub	fp, #192
	mov	local08, #48
	wrbyte	#48, local06
LR__1033
	add	fp, #24
	rdlong	local06, fp
	add	fp, #56
	rdlong	local11, fp
	sub	fp, #80
	cmp	local06, local11 wz
 if_ne	jmp	#LR__1035
	add	fp, #272
	rdlong	local07, fp
	sub	fp, #272
	mov	local08, local07 wz
 if_ne	jmp	#LR__1034
	add	fp, #84
	rdlong	local10, fp
	mov	local09, local10
	sub	local09, #1
	sub	fp, #60
	rdlong	local12, fp
	sub	fp, #24
	mov	local13, local12
	cmps	local13, local09 wc
 if_ae	jmp	#LR__1035
LR__1034
	add	fp, #192
	rdlong	local14, fp
	mov	local06, local14
	mov	local15, local14
	mov	local11, local15
	add	local11, #1
	wrlong	local11, fp
	sub	fp, #192
	mov	local08, #46
	wrbyte	#46, local06
LR__1035
	add	fp, #24
	rdlong	local14, fp
	mov	local06, local14
	mov	local15, local14
	mov	local11, local15
	add	local11, #1
	wrlong	local11, fp
	sub	fp, #24
	jmp	#LR__1031
LR__1036
LR__1037
	add	fp, #52
	rdlong	local02, fp wz
	sub	fp, #52
 if_e	jmp	#LR__1041
	add	fp, #192
	rdlong	local02, fp
	sub	local02, #1
	wrlong	local02, fp
	sub	fp, #192
	loc	pa,	#(@LR__1039-@LR__1038)
	call	#FCACHE_LOAD_
LR__1038
	add	fp, #192
	rdlong	local02, fp
	add	fp, #4
	rdlong	local03, fp
	sub	fp, #196
	cmps	local02, local03 wcz
 if_be	jmp	#LR__1040
	add	fp, #192
	rdlong	local14, fp
	sub	fp, #192
	mov	local06, local14
	rdbyte	local04, local06
	cmp	local04, #48 wz
 if_ne	jmp	#LR__1040
	add	fp, #192
	rdlong	local02, fp
	sub	local02, #1
	wrlong	local02, fp
	sub	fp, #192
	jmp	#LR__1038
LR__1039
LR__1040
	add	fp, #192
	rdlong	local01, fp
	sub	fp, #192
	rdbyte	local02, local01
	cmp	local02, #46 wz
 if_e	add	fp, #192
 if_e	rdlong	local02, fp
 if_e	sub	local02, #1
 if_e	wrlong	local02, fp
 if_e	sub	fp, #192
	add	fp, #192
	rdlong	local05, fp
	mov	local03, local05
	add	local03, #1
	wrlong	local03, fp
	sub	fp, #192
LR__1041
	add	fp, #36
	rdlong	local02, fp wz
	sub	fp, #36
 if_e	jmp	#LR__1044
	add	fp, #192
	rdlong	local01, fp
	mov	local03, local01
	add	local03, #1
	wrlong	local03, fp
	sub	fp, #144
	rdlong	local04, fp
	wrbyte	local04, local01
	add	fp, #144
	rdlong	local01, fp
	mov	local03, local01
	add	local03, #1
	wrlong	local03, fp
	sub	fp, #96
	rdlong	local04, fp
	wrbyte	local04, local01
	sub	fp, #72
	wrlong	#0, fp
	sub	fp, #24
LR__1042
	add	fp, #24
	rdlong	local01, fp
	add	fp, #68
	rdlong	local04, fp
	sub	fp, #92
	mov	local05, local04
	cmps	local01, local05 wc
 if_ae	jmp	#LR__1043
	add	fp, #192
	rdlong	local14, fp
	mov	local11, local14
	add	local11, #1
	wrlong	local11, fp
	sub	fp, #168
	rdlong	local07, fp
	mov	local08, local07
	add	fp, #152
	mov	local09, fp
	add	local08, fp
	rdbyte	local10, local08
	wrbyte	local10, local14
	sub	fp, #152
	rdlong	local14, fp
	mov	local06, local14
	mov	local15, local14
	mov	local11, local15
	add	local11, #1
	wrlong	local11, fp
	sub	fp, #24
	jmp	#LR__1042
LR__1043
LR__1044
	add	fp, #192
	rdlong	local01, fp
	sub	fp, #192
	mov	local02, local01
	mov	local03, #0
	wrbyte	#0, local02
LR__1045
	add	fp, #108
	rdlong	local02, fp wz
	sub	fp, #108
 if_e	jmp	#LR__1056
	add	fp, #72
	rdlong	local03, fp wz
	sub	fp, #72
 if_e	jmp	#LR__1056
	add	fp, #196
	rdlong	arg01, fp
	sub	fp, #196
	mov	local16, #0
	loc	pa,	#(@LR__1047-@LR__1046)
	call	#FCACHE_LOAD_
LR__1046
	rdbyte	result1, arg01 wz
 if_ne	add	local16, #1
 if_ne	add	arg01, #1
 if_ne	jmp	#LR__1046
LR__1047
	mov	result1, local16
	mov	local04, result1
	add	fp, #108
	rdlong	local14, fp
	sub	fp, #108
	mov	local06, local14
	cmps	local04, local06 wcz
 if_be	jmp	#LR__1056
	add	fp, #196
	rdlong	local02, fp
	add	fp, #92
	wrlong	local02, fp
	sub	fp, #252
	rdlong	local02, fp wz
	sub	fp, #36
 if_e	jmp	#LR__1048
	add	fp, #184
	wrlong	#0, fp
	sub	fp, #76
	rdlong	local02, fp
	add	fp, #176
	wrlong	local02, fp
	sub	fp, #284
	jmp	#LR__1049
LR__1048
	add	fp, #108
	rdlong	local02, fp
	sub	local02, #1
	add	fp, #76
	rdlong	local03, fp
	sub	local02, local03
	add	fp, #100
	wrlong	local02, fp
	sub	fp, #284
LR__1049
	loc	pa,	#(@LR__1051-@LR__1050)
	call	#FCACHE_LOAD_
LR__1050
	add	fp, #284
	rdlong	local02, fp wz
	sub	fp, #284
 if_e	jmp	#LR__1052
	add	fp, #288
	rdlong	local01, fp
	mov	local03, local01
	add	local03, #1
	wrlong	local03, fp
	wrbyte	#42, local01
	sub	fp, #4
	rdlong	local02, fp
	sub	local02, #1
	wrlong	local02, fp
	sub	fp, #284
	jmp	#LR__1050
LR__1051
LR__1052
	add	fp, #184
	rdlong	local02, fp wz
	sub	fp, #184
 if_e	jmp	#LR__1055
	add	fp, #288
	rdlong	local01, fp
	mov	local03, local01
	add	local03, #1
	wrlong	local03, fp
	wrbyte	#46, local01
	sub	fp, #4
	wrlong	#0, fp
	sub	fp, #284
LR__1053
	add	fp, #284
	rdlong	local01, fp
	sub	fp, #100
	rdlong	local05, fp
	sub	fp, #184
	cmps	local01, local05 wc
 if_ae	jmp	#LR__1054
	add	fp, #288
	rdlong	local14, fp
	mov	local11, local14
	add	local11, #1
	wrlong	local11, fp
	mov	local08, #42
	wrbyte	#42, local14
	sub	fp, #4
	rdlong	local14, fp
	mov	local06, local14
	mov	local15, local14
	mov	local11, local15
	add	local11, #1
	wrlong	local11, fp
	sub	fp, #284
	jmp	#LR__1053
LR__1054
LR__1055
	add	fp, #288
	rdlong	local01, fp
	mov	local02, local01
	mov	local05, local01
	mov	local03, local05
	add	local03, #1
	wrlong	local03, fp
	sub	fp, #288
	mov	local04, #0
	wrbyte	#0, local02
LR__1056
	add	fp, #4
	rdlong	arg01, fp
	add	fp, #4
	rdlong	arg02, fp
	add	fp, #188
	rdlong	arg03, fp
	sub	fp, #196
	call	#__system___fmtstr
LR__1057
	mov	ptra, fp
	call	#popregs_
__system___fmtfloat_ret
	ret

__system___int64_divmodu
	mov	_var01, arg02
	cmps	arg03, #0 wz
	mov	_var02, #0
	mov	_var03, #0
	mov	_var04, #0
	mov	_var05, #0
 if_ne	jmp	#LR__1058
	cmp	arg04, #0 wz
 if_e	mov	result3, arg01
 if_e	mov	result4, _var01
 if_e	neg	result1, #1
 if_e	neg	result2, #1
 if_e	jmp	#LR__1064
LR__1058
	decod	_var06, #31
	mov	_var07, #31
	loc	pa,	#(@LR__1063-@LR__1059)
	call	#FCACHE_LOAD_
LR__1059
	mov	result1, _var02
	mov	result2, _var03
	add	result1, _var02 wc
	addx	result2, _var03
	mov	_var03, result2
	mov	_var02, result1
	test	_var01, _var06 wz
 if_ne	or	_var02, #1
	mov	arg02, _var03
	mov	result1, #0
	cmp	_var02, arg03 wcz
	cmpx	arg02, arg04 wcz
 if_ne	negc	result1, #1
	cmps	result1, #0 wc
 if_b	jmp	#LR__1060
	sub	_var02, arg03 wc
	subx	_var03, arg04
	or	_var05, _var06
LR__1060
	shr	_var06, #1
	sub	_var07, #1
	cmps	_var07, #0 wc
 if_ae	jmp	#LR__1059
	decod	_var06, #31
	mov	_var07, #31
LR__1061
	mov	result1, _var02
	mov	result2, _var03
	add	result1, _var02 wc
	addx	result2, _var03
	mov	_var03, result2
	mov	_var02, result1
	test	arg01, _var06 wz
 if_ne	or	_var02, #1
	mov	arg02, _var03
	mov	result1, #0
	cmp	_var02, arg03 wcz
	cmpx	arg02, arg04 wcz
 if_ne	negc	result1, #1
	cmps	result1, #0 wc
 if_b	jmp	#LR__1062
	sub	_var02, arg03 wc
	subx	_var03, arg04
	or	_var04, _var06
LR__1062
	shr	_var06, #1
	sub	_var07, #1
	cmps	_var07, #0 wc
 if_ae	jmp	#LR__1061
LR__1063
	mov	result1, _var04
	mov	result2, _var05
	mov	result3, _var02
	mov	result4, _var03
LR__1064
__system___int64_divmodu_ret
	ret

__system___float_fromuns
	mov	arg03, arg01 wz
 if_e	mov	result1, arg03
 if_e	jmp	#LR__1065
	encod	arg02, arg03 wc
 if_b	add	arg02, #1
	sub	arg02, #1
	mov	arg01, #31
	sub	arg01, arg02
	shl	arg03, arg01
	shr	arg03, #2
	mov	arg01, #0
	call	#__system___float_Pack
LR__1065
__system___float_fromuns_ret
	ret

__system___float_fromint
	mov	COUNT_, #1
	call	#pushregs_
	cmps	arg01, #0 wc
 if_b	neg	arg01, arg01
 if_b	mov	local01, #1
 if_ae	mov	local01, #0
	call	#__system___float_fromuns
	cmp	local01, #0 wz
 if_ne	bitnot	result1, #31
	mov	ptra, fp
	call	#popregs_
__system___float_fromint_ret
	ret

__system___float_mul
	mov	COUNT_, #12
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, local01
	mov	local04, local03
	zerox	local04, #22
	mov	local05, local03
	shl	local05, #1
	shr	local05, #24
	shr	local03, #31
	mov	arg01, local02
	mov	result1, arg01
	mov	local06, result1
	mov	local07, local06
	zerox	local07, #22
	mov	local08, local06
	shl	local08, #1
	shr	local08, #24
	mov	local09, local08
	shr	local06, #31
	mov	local10, #0
	xor	local03, local06
	cmp	local05, #255 wz
 if_e	jmp	#LR__1069
	cmp	local09, #255 wz
 if_e	jmp	#LR__1072
	cmp	local05, #0 wz
 if_e	jmp	#LR__1073
	bith	local04, #23
LR__1066
	cmp	local09, #0 wz
 if_e	jmp	#LR__1077
	bith	local07, #23
LR__1067
	mov	local08, local04
	shl	local08, #4
	mov	local10, local07
	shl	local10, #5
	qmul	local08, local10
	add	local05, local09
	sub	local05, #254
	mov	local11, local05
	shl	local04, #4
	shl	local07, #5
	getqx	local10
	qmul	local04, local07
	getqy	local12
	cmp	local12, ##16777216 wc
 if_b	jmp	#LR__1068
	add	local11, #1
	shr	local10, #1
	mov	local09, local12
	shl	local09, #31
	or	local10, local09
	shr	local12, #1
LR__1068
	mov	arg01, local12
	mov	arg02, local10
	mov	arg03, local11
	mov	arg04, local03
	call	#__system__pack_0764
	jmp	#LR__1081
LR__1069
	cmp	local04, #0 wz
 if_ne	mov	result1, local01
 if_ne	jmp	#LR__1081
	cmps	local09, #255 wc
 if_ae	jmp	#LR__1070
	cmp	local09, #0 wz
 if_ne	jmp	#LR__1071
	cmp	local07, #0 wz
 if_ne	jmp	#LR__1071
	mov	result1, ##2146435072
	jmp	#LR__1081
LR__1070
	cmp	local07, #0 wz
 if_ne	mov	result1, local02
 if_ne	jmp	#LR__1081
LR__1071
	or	local03, #2
	mov	arg01, #0
	mov	arg02, #0
	mov	arg03, local05
	mov	arg04, local03
	call	#__system__pack_0764
	jmp	#LR__1081
LR__1072
	cmp	local05, #0 wz
 if_e	cmp	local04, #0 wz
 if_e	mov	result1, ##2146435072
 if_e	jmp	#LR__1081
	cmp	local07, #0 wz
 if_ne	mov	result1, local02
 if_ne	jmp	#LR__1081
	mov	arg03, local09
	mov	arg04, local03
	or	arg04, #2
	mov	arg01, #0
	mov	arg02, #0
	call	#__system__pack_0764
	jmp	#LR__1081
LR__1073
	cmp	local04, #0 wz
 if_e	jmp	#LR__1076
	shl	local04, #1
	loc	pa,	#(@LR__1075-@LR__1074)
	call	#FCACHE_LOAD_
LR__1074
	cmp	local04, ##8388608 wc
 if_b	sub	local05, #1
 if_b	shl	local04, #1
 if_b	jmp	#LR__1074
LR__1075
	jmp	#LR__1066
LR__1076
	or	local03, #8
	mov	arg01, #0
	mov	arg02, #0
	mov	arg03, #0
	mov	arg04, local03
	call	#__system__pack_0764
	jmp	#LR__1081
LR__1077
	cmp	local07, #0 wz
 if_e	jmp	#LR__1080
	shl	local07, #1
	loc	pa,	#(@LR__1079-@LR__1078)
	call	#FCACHE_LOAD_
LR__1078
	cmp	local07, ##8388608 wc
 if_b	sub	local09, #1
 if_b	shl	local07, #1
 if_b	jmp	#LR__1078
LR__1079
	jmp	#LR__1067
LR__1080
	mov	arg04, local03
	or	arg04, #8
	mov	arg01, #0
	mov	arg02, #0
	mov	arg03, #0
	call	#__system__pack_0764
LR__1081
	mov	ptra, fp
	call	#popregs_
__system___float_mul_ret
	ret

__system___float_div
	mov	COUNT_, #14
	call	#pushregs_
	mov	local03, arg01
	mov	local04, arg02
	mov	local05, local03
	mov	local06, local05
	zerox	local06, #22
	mov	local07, local05
	shl	local07, #1
	shr	local07, #24
	shr	local05, #31
	mov	result1, local04
	mov	local08, result1
	mov	local09, local08
	zerox	local09, #22
	mov	local10, local08
	shl	local10, #1
	shr	local10, #24
	shr	local08, #31
	xor	local05, local08
	cmp	local07, #255 wz
 if_e	jmp	#LR__1087
	cmp	local10, #255 wz
 if_e	jmp	#LR__1088
	cmp	local07, #0 wz
 if_e	jmp	#LR__1089
	bith	local06, #23
LR__1082
	cmp	local10, #0 wz
 if_e	jmp	#LR__1093
	bith	local09, #23
LR__1083
	sub	local07, local10
	mov	local11, local07
	mov	arg01, local06
	shr	arg01, #2
	shl	local06, #30
	mov	arg02, local06
	mov	arg03, local09
	setq	arg01
	qdiv	arg02, arg03
	mov	local12, #0
	getqx	local01
	getqy	result2
	mov	local02, result2
	mov	local13, local01
	cmps	local02, #0 wz
	mov	local14, local13
	shl	local14, #25
 if_ne	mov	local12, #1
	or	local14, local12
	shr	local13, #7
	cmp	local13, ##16777216 wc
 if_b	jmp	#LR__1084
	add	local11, #1
	shr	local14, #1
	mov	local12, local13
	shl	local12, #31
	or	local14, local12
	shr	local13, #1
	jmp	#LR__1086
LR__1084
	cmp	local13, ##8388608 wc
 if_ae	jmp	#LR__1085
	sub	local11, #1
	shl	local13, #1
	mov	local12, local14
	shr	local12, #31
	or	local13, local12
	shl	local14, #1
LR__1085
LR__1086
	mov	arg01, local13
	mov	arg02, local14
	mov	arg03, local11
	mov	arg04, local05
	call	#__system__pack_0764
	jmp	#LR__1097
LR__1087
	cmp	local06, #0 wz
 if_ne	mov	result1, local03
 if_ne	jmp	#LR__1097
	cmp	local10, #255 wz
 if_e	mov	result1, ##2146435072
 if_e	jmp	#LR__1097
	or	local05, #2
	mov	arg01, #0
	mov	arg02, #0
	mov	arg03, local07
	mov	arg04, local05
	call	#__system__pack_0764
	jmp	#LR__1097
LR__1088
	cmp	local09, #0 wz
 if_ne	mov	result1, local04
 if_ne	jmp	#LR__1097
	mov	arg04, local05
	or	arg04, #8
	mov	arg01, #0
	mov	arg02, #0
	mov	arg03, #0
	call	#__system__pack_0764
	jmp	#LR__1097
LR__1089
	cmp	local06, #0 wz
 if_e	jmp	#LR__1092
	shl	local06, #1
	loc	pa,	#(@LR__1091-@LR__1090)
	call	#FCACHE_LOAD_
LR__1090
	cmp	local06, ##8388608 wc
 if_b	sub	local07, #1
 if_b	shl	local06, #1
 if_b	jmp	#LR__1090
LR__1091
	jmp	#LR__1082
LR__1092
	cmp	local10, #0 wz
 if_e	cmp	local09, #0 wz
 if_e	mov	result1, ##2146435072
 if_e	jmp	#LR__1097
	mov	arg04, local05
	or	arg04, #8
	mov	arg01, #0
	mov	arg02, #0
	mov	arg03, #0
	call	#__system__pack_0764
	jmp	#LR__1097
LR__1093
	cmp	local09, #0 wz
 if_e	jmp	#LR__1096
	shl	local09, #1
	loc	pa,	#(@LR__1095-@LR__1094)
	call	#FCACHE_LOAD_
LR__1094
	cmp	local09, ##8388608 wc
 if_b	sub	local10, #1
 if_b	shl	local09, #1
 if_b	jmp	#LR__1094
LR__1095
	jmp	#LR__1083
LR__1096
	mov	arg04, local05
	or	arg04, #2
	mov	arg01, #0
	mov	arg02, #0
	mov	arg03, #0
	call	#__system__pack_0764
LR__1097
	mov	ptra, fp
	call	#popregs_
__system___float_div_ret
	ret

__system___float_cmp
	mov	_var01, arg01
	cmps	_var01, ##2139095041 wc
 if_b	cmps	arg02, ##2139095041 wc
 if_ae	mov	result1, arg03
 if_ae	jmp	#__system___float_cmp_ret
	cmp	_var01, ##-8388607 wc
 if_b	cmp	_var01, ##-8388607 wc
 if_ae	mov	result1, arg03
 if_ae	jmp	#__system___float_cmp_ret
	cmps	_var01, #0 wc
 if_ae	jmp	#LR__1098
	cmps	arg02, #0 wc
 if_b	mov	result1, arg02
 if_b	sub	result1, _var01
 if_b	jmp	#__system___float_cmp_ret
	cmp	arg02, #0 wz
 if_e	cmp	_var01, ##-2147483648 wz
 if_e	mov	result1, #0
 if_e	jmp	#__system___float_cmp_ret
	neg	result1, #1
	jmp	#__system___float_cmp_ret
LR__1098
	cmps	arg02, #0 wc
 if_ae	jmp	#LR__1099
	cmp	_var01, #0 wz
 if_e	cmp	arg02, ##-2147483648 wz
 if_e	mov	result1, #0
 if_e	jmp	#__system___float_cmp_ret
	mov	result1, #1
	jmp	#__system___float_cmp_ret
LR__1099
	sub	_var01, arg02
	mov	result1, _var01
__system___float_cmp_ret
	ret

__system___float_tointeger
	mov	COUNT_, #4
	call	#pushregs_
	mov	local01, arg02
	call	#__system___float_Unpack
	mov	local02, result3
	mov	local03, result2
	cmps	local03, ##-1 wc
 if_b	jmp	#LR__1100
	cmps	local03, #31 wc
 if_ae	jmp	#LR__1100
	shl	local02, #2
	mov	local04, #30
	sub	local04, local03
	shr	local02, local04
	add	local02, local01
	shr	local02, #1
	cmp	result1, #0 wz
 if_ne	neg	local02, local02
	mov	result1, local02
	jmp	#LR__1101
LR__1100
	mov	result1, #0
LR__1101
	mov	ptra, fp
	call	#popregs_
__system___float_tointeger_ret
	ret

__system___float_Unpack
	mov	_var01, arg01
	shr	_var01, #31
	mov	_var02, arg01
	shl	_var02, #1
	shr	_var02, #24 wz
	bitl	arg01, #279
 if_ne	shl	arg01, #6
 if_ne	bith	arg01, #29
 if_ne	jmp	#LR__1102
	encod	_var03, arg01 wc
 if_b	add	_var03, #1
	sub	_var03, #23
	mov	_var02, _var03
	mov	result2, #7
	sub	result2, _var03
	shl	arg01, result2
LR__1102
	sub	_var02, #127
	mov	result3, arg01
	mov	result1, _var01
	mov	result2, _var02
__system___float_Unpack_ret
	ret

__system___float_Pack
	mov	_var01, #0
	cmp	arg03, #0 wz
 if_e	jmp	#LR__1104
	encod	_var02, arg03 wc
 if_b	add	_var02, #1
	mov	_var01, #33
	sub	_var01, _var02
	shl	arg03, _var01
	mov	_var02, #3
	sub	_var02, _var01
	add	arg02, _var02
	mov	_var03, arg02
	add	arg03, #256
	mov	_var02, arg03
	andn	_var02, #255 wz
 if_e	add	_var03, #1
	add	_var03, #127
	fges	_var03, ##-23
	fles	_var03, #255
	cmps	_var03, #1 wc
 if_ae	jmp	#LR__1103
	shr	arg03, #1
	decod	_var02, #31
	add	_var02, arg03
	neg	_var03, _var03
	shr	_var02, _var03
	mov	arg03, _var02
	mov	_var03, #0
LR__1103
	mov	result1, arg01
	shl	result1, #31
	mov	_var02, _var03
	shl	_var02, #23
	or	result1, _var02
	mov	_var04, arg03
	shr	_var04, #9
	or	result1, _var04
	jmp	#__system___float_Pack_ret
LR__1104
	mov	result1, _var01
__system___float_Pack_ret
	ret

__system____builtin_ilogb
	mov	COUNT_, #2
	call	#pushregs_
	call	#__system___float_Unpack
	mov	local01, result2
	mov	local02, result3 wz
 if_e	mov	result1, ##-2147483647
 if_e	jmp	#LR__1106
	cmp	local01, #128 wz
 if_ne	jmp	#LR__1105
	cmp	local02, ##536870912 wz
 if_e	bmask	result1, #30
 if_e	jmp	#LR__1106
	decod	result1, #31
	jmp	#LR__1106
LR__1105
	mov	result1, local01
LR__1106
	mov	ptra, fp
	call	#popregs_
__system____builtin_ilogb_ret
	ret

__system___float_pow_n
	mov	COUNT_, #5
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	cmps	local03, #0 wc
 if_ae	jmp	#LR__1107
	mov	local04, #1
	neg	local03, local03
	cmps	local03, #0 wc
 if_b	mov	result1, #0
 if_b	jmp	#LR__1115
	jmp	#LR__1108
LR__1107
	mov	local04, #0
LR__1108
	mov	local05, ##1065353216
LR__1109
	cmps	local03, #1 wc
 if_b	jmp	#LR__1111
	test	local03, #1 wz
 if_e	jmp	#LR__1110
	mov	arg01, local05
	mov	arg02, local02
	call	#__system___float_mul
	mov	local05, result1
LR__1110
	sar	local03, #1
	mov	arg01, local02
	mov	arg02, local02
	call	#__system___float_mul
	mov	local02, result1
	jmp	#LR__1109
LR__1111
	cmp	local04, #0 wz
 if_e	jmp	#LR__1112
	mov	arg01, local01
	mov	arg02, local05
	call	#__system___float_div
	mov	local05, result1
	jmp	#LR__1114
LR__1112
	mov	arg01, local01
	mov	arg02, ##1065353216
	mov	arg03, #1
	call	#__system___float_cmp
	cmp	result1, #0 wz
 if_e	jmp	#LR__1113
	mov	arg01, local01
	mov	arg02, local05
	call	#__system___float_mul
	mov	local05, result1
LR__1113
LR__1114
	mov	result1, local05
LR__1115
	mov	ptra, fp
	call	#popregs_
__system___float_pow_n_ret
	ret

__system___gc_ptrs
	mov	_var01, __heap_ptr
	mov	_var02, _var01
	add	_var02, ##32392
	rdlong	result2, _var01 wz
 if_ne	jmp	#LR__1116
	mov	result2, _var02
	sub	result2, _var01
	wrword	#1, _var01
	mov	result1, _var01
	add	result1, #2
	wrword	##27792, result1
	mov	result1, _var01
	add	result1, #4
	wrword	#0, result1
	mov	result1, _var01
	add	result1, #6
	wrword	#1, result1
	add	_var01, #16
	abs	result2, result2 wc
	shr	result2, #4
	negc	result2, result2
	wrword	result2, _var01
	mov	result2, _var01
	add	result2, #2
	wrword	##27791, result2
	mov	result2, _var01
	add	result2, #4
	wrword	#0, result2
	mov	result2, _var01
	add	result2, #6
	wrword	#0, result2
	sub	_var01, #16
LR__1116
	mov	result2, _var02
	mov	result1, _var01
__system___gc_ptrs_ret
	ret

__system___gc_nextBlockPtr
	mov	COUNT_, #2
	call	#pushregs_
	mov	local01, arg01
	rdword	local02, local01 wz
 if_ne	jmp	#LR__1117
	mov	arg01, ##@LR__1232
	call	#__system___gc_errmsg
	jmp	#LR__1118
LR__1117
	mov	result1, local01
	shl	local02, #4
	add	result1, local02
LR__1118
	mov	ptra, fp
	call	#popregs_
__system___gc_nextBlockPtr_ret
	ret

__system___gc_tryalloc
	mov	COUNT_, #13
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	call	#__system___gc_ptrs
	mov	local03, result1
	mov	local04, result2
	mov	local05, local03
	mov	local06, #0
	loc	pa,	#(@LR__1120-@LR__1119)
	call	#FCACHE_LOAD_
LR__1119
	mov	local07, local05
	add	local05, #6
	rdword	arg02, local05 wz
	mov	arg01, local03
 if_e	mov	result1, #0
 if_ne	shl	arg02, #4
 if_ne	add	arg01, arg02
 if_ne	mov	result1, arg01
	mov	local08, result1
	mov	local05, local08 wz
 if_ne	mov	local08, local05
 if_ne	rdword	local06, local08
	cmp	local05, #0 wz
 if_ne	cmps	local05, local04 wc
 if_a	jmp	#LR__1121
 if_ne	cmps	local01, local06 wcz
 if_a	jmp	#LR__1119
LR__1120
LR__1121
	cmp	local05, #0 wz
 if_e	mov	result1, local05
 if_e	jmp	#LR__1124
	mov	local08, local05
	add	local08, #6
	rdword	local09, local08
	cmps	local01, local06 wc
 if_ae	jmp	#LR__1123
	wrword	local01, local05
	mov	arg01, local05
	mov	local09, local01
	shl	local09, #4
	add	arg01, local09
	mov	local08, local06
	sub	local08, local01
	wrword	local08, arg01
	mov	local08, arg01
	add	local08, #2
	wrword	##27791, local08
	mov	arg02, local05 wz
 if_e	mov	result1, #0
 if_ne	sub	arg02, local03
 if_ne	shr	arg02, #4
 if_ne	mov	result1, arg02
	mov	local09, arg01
	add	local09, #4
	wrword	result1, local09
	mov	local08, local05
	add	local08, #6
	mov	local09, arg01
	rdword	local10, local08
	add	local09, #6
	wrword	local10, local09
	mov	local11, arg01
	mov	arg02, local11 wz
 if_e	mov	result1, #0
 if_ne	sub	arg02, local03
 if_ne	shr	arg02, #4
 if_ne	mov	result1, arg02
	mov	local09, result1
	call	#__system___gc_nextBlockPtr
	mov	local12, result1 wz
 if_e	jmp	#LR__1122
	cmps	local12, local04 wc
 if_ae	jmp	#LR__1122
	mov	arg01, local03
	mov	arg02, local11 wz
 if_e	mov	result1, #0
 if_ne	sub	arg02, arg01
 if_ne	shr	arg02, #4
 if_ne	mov	result1, arg02
	mov	local08, result1
	mov	local13, local12
	add	local13, #4
	wrword	local08, local13
LR__1122
LR__1123
	add	local07, #6
	wrword	local09, local07
	mov	local08, ##27776
	or	local08, local02
	mov	result1, #0
	cogid	result1
	or	local08, result1
	mov	local10, local05
	add	local10, #2
	wrword	local08, local10
	mov	local08, local03
	add	local08, #8
	mov	local13, local05
	rdword	local10, local08
	add	local13, #6
	wrword	local10, local13
	mov	arg02, local05 wz
 if_e	mov	result1, #0
 if_ne	sub	arg02, local03
 if_ne	shr	arg02, #4
 if_ne	mov	result1, arg02
	add	local03, #8
	wrword	result1, local03
	mov	result1, local05
	add	result1, #8
	or	result1, ##1669332992
LR__1124
	mov	ptra, fp
	call	#popregs_
__system___gc_tryalloc_ret
	ret

__system___gc_errmsg
	mov	COUNT_, #1
	call	#pushregs_
	mov	local01, arg01
LR__1125
	rdbyte	arg01, local01 wz
	add	local01, #1
 if_e	jmp	#LR__1126
	call	#__system___tx
	jmp	#LR__1125
LR__1126
	mov	result1, #0
	mov	ptra, fp
	call	#popregs_
__system___gc_errmsg_ret
	ret

__system___gc_alloc_managed
	mov	COUNT_, #2
	call	#pushregs_
	mov	local01, arg01
	mov	arg02, #0
	call	#__system___gc_doalloc
	mov	local02, result1 wz
 if_ne	jmp	#LR__1127
	cmps	local01, #1 wc
 if_b	jmp	#LR__1127
	mov	arg01, ##@LR__1233
	call	#__system___gc_errmsg
	jmp	#LR__1128
LR__1127
	mov	result1, local02
LR__1128
	mov	ptra, fp
	call	#popregs_
__system___gc_alloc_managed_ret
	ret

__system___gc_doalloc
	mov	COUNT_, #6
	call	#pushregs_
	mov	local01, arg01 wz
	mov	local02, arg02
 if_e	mov	result1, #0
 if_e	jmp	#LR__1136
	add	local01, #23
	andn	local01, #15
	shr	local01, #4
	add	ptr___system__dat__, #20
	mov	arg01, ptr___system__dat__
	sub	ptr___system__dat__, #20
	call	#__system___lockmem
	mov	arg01, local01
	mov	arg02, local02
	call	#__system___gc_tryalloc
	mov	local03, result1 wz
 if_ne	jmp	#LR__1129
	call	#__system___gc_docollect
	mov	arg01, local01
	mov	arg02, local02
	call	#__system___gc_tryalloc
	mov	local03, result1
LR__1129
	add	ptr___system__dat__, #20
	mov	arg01, ptr___system__dat__
	sub	ptr___system__dat__, #20
	wrlong	#0, arg01
	cmp	local03, #0 wz
 if_e	jmp	#LR__1135
	shl	local01, #4
	sub	local01, #8
	abs	local04, local01 wc
	shr	local04, #2
	negc	local05, local04 wz
	mov	local06, local03
 if_e	jmp	#LR__1134
	loc	pa,	#(@LR__1132-@LR__1130)
	call	#FCACHE_LOAD_
LR__1130
	rep	@LR__1133, local05
LR__1131
	wrlong	#0, local06
	add	local06, #4
LR__1132
LR__1133
LR__1134
LR__1135
	mov	result1, local03
LR__1136
	mov	ptra, fp
	call	#popregs_
__system___gc_doalloc_ret
	ret

__system___gc_isvalidptr
	mov	_var01, arg03
	mov	_var02, _var01
	and	_var02, ##-1048576
	cmp	_var02, ##1669332992 wz
 if_ne	mov	result1, #0
 if_ne	jmp	#__system___gc_isvalidptr_ret
	sub	_var01, #8
	bitl	_var01, #372
	cmps	_var01, arg01 wc
 if_b	jmp	#LR__1137
	cmps	_var01, arg02 wc
 if_b	jmp	#LR__1138
LR__1137
	mov	result1, #0
	jmp	#__system___gc_isvalidptr_ret
LR__1138
	mov	_var02, _var01
	xor	_var02, arg01
	test	_var02, #15 wz
 if_ne	mov	result1, #0
 if_ne	jmp	#__system___gc_isvalidptr_ret
	mov	_var02, _var01
	add	_var02, #2
	rdword	_var02, _var02
	and	_var02, ##65472
	cmp	_var02, ##27776 wz
 if_ne	mov	result1, #0
 if_e	mov	result1, _var01
__system___gc_isvalidptr_ret
	ret

__system___gc_free
	mov	COUNT_, #1
	call	#pushregs_
	mov	arg03, arg01
	call	#__system___gc_ptrs
	mov	arg01, result1
	mov	arg02, result2
	call	#__system___gc_isvalidptr
	mov	local01, result1 wz
 if_e	jmp	#LR__1139
	add	ptr___system__dat__, #20
	mov	arg01, ptr___system__dat__
	sub	ptr___system__dat__, #20
	call	#__system___lockmem
	mov	arg01, local01
	call	#__system___gc_dofree
	add	ptr___system__dat__, #20
	mov	arg01, ptr___system__dat__
	sub	ptr___system__dat__, #20
	wrlong	#0, arg01
LR__1139
	mov	ptra, fp
	call	#popregs_
__system___gc_free_ret
	ret

__system___gc_dofree
	mov	COUNT_, #11
	call	#pushregs_
	mov	local01, arg01
	call	#__system___gc_ptrs
	mov	local02, result1
	mov	local03, result2
	mov	arg01, local01
	add	arg01, #2
	wrword	##27791, arg01
	mov	local04, local01
	mov	arg01, local01
	call	#__system___gc_nextBlockPtr
	mov	local05, result1
	loc	pa,	#(@LR__1141-@LR__1140)
	call	#FCACHE_LOAD_
LR__1140
	add	local04, #4
	rdword	arg02, local04 wz
	mov	arg01, local02
 if_e	mov	result1, #0
 if_ne	shl	arg02, #4
 if_ne	add	arg01, arg02
 if_ne	mov	result1, arg01
	mov	local04, result1 wz
 if_e	jmp	#LR__1142
	mov	arg01, local04
	mov	result1, #0
	add	arg01, #2
	rdword	arg01, arg01
	cmp	arg01, ##27791 wz
 if_e	neg	result1, #1
	cmps	result1, #0 wz
 if_e	jmp	#LR__1140
LR__1141
LR__1142
	cmp	local04, #0 wz
 if_e	mov	local04, local02
	mov	arg02, local04
	add	arg02, #6
	mov	arg01, local01
	rdword	arg02, arg02
	add	arg01, #6
	wrword	arg02, arg01
	mov	arg02, local01 wz
 if_e	mov	result1, #0
 if_ne	sub	arg02, local02
 if_ne	shr	arg02, #4
 if_ne	mov	result1, arg02
	mov	arg01, local04
	add	arg01, #6
	wrword	result1, arg01
	cmp	local04, local02 wz
 if_e	jmp	#LR__1145
	mov	arg01, local04
	call	#__system___gc_nextBlockPtr
	cmp	result1, local01 wz
 if_ne	jmp	#LR__1144
	rdword	local05, local04
	rdword	result2, local01
	add	local05, result2
	wrword	local05, local04
	mov	local05, local01
	add	local05, #2
	wrword	#0, local05
	mov	arg01, local01
	call	#__system___gc_nextBlockPtr
	mov	local05, result1
	cmps	local05, local03 wc
 if_ae	jmp	#LR__1143
	mov	arg02, local04 wz
 if_e	mov	result1, #0
 if_ne	sub	arg02, local02
 if_ne	shr	arg02, #4
 if_ne	mov	result1, arg02
	mov	result2, local05
	add	result2, #4
	wrword	result1, result2
LR__1143
	mov	result2, local01
	add	result2, #6
	mov	result1, local04
	rdword	result2, result2
	add	result1, #6
	wrword	result2, result1
	add	local01, #6
	wrword	#0, local01
	mov	local01, local04
LR__1144
LR__1145
	mov	arg01, local01
	call	#__system___gc_nextBlockPtr
	mov	local06, result1 wz
 if_e	jmp	#LR__1147
	cmps	local06, local03 wc
 if_ae	jmp	#LR__1147
	mov	arg01, local06
	mov	result1, #0
	add	arg01, #2
	rdword	arg01, arg01
	cmp	arg01, ##27791 wz
 if_e	neg	result1, #1
	cmp	result1, #0 wz
 if_e	jmp	#LR__1147
	mov	local04, local01
	rdword	local05, local04
	mov	local01, local06
	rdword	local07, local01
	add	local05, local07
	mov	local08, local04
	wrword	local05, local08
	mov	local05, local01
	add	local05, #6
	mov	result2, local04
	rdword	local09, local05
	add	result2, #6
	wrword	local09, result2
	mov	local05, local01
	add	local05, #2
	wrword	#170, local05
	mov	local05, local01
	add	local05, #6
	mov	local10, #0
	wrword	#0, local05
	mov	arg01, local01
	call	#__system___gc_nextBlockPtr
	mov	local11, result1
	mov	local05, local11 wz
 if_e	jmp	#LR__1146
	cmps	local05, local03 wc
 if_ae	jmp	#LR__1146
	mov	arg01, local02
	mov	arg02, local04 wz
 if_e	mov	result1, #0
 if_ne	sub	arg02, arg01
 if_ne	shr	arg02, #4
 if_ne	mov	result1, arg02
	mov	local11, result1
	mov	local10, local05
	add	local10, #4
	wrword	local11, local10
LR__1146
LR__1147
	mov	result1, local05
	mov	ptra, fp
	call	#popregs_
__system___gc_dofree_ret
	ret

__system___gc_docollect
	mov	COUNT_, #9
	call	#pushregs_
	call	#__system___gc_ptrs
	mov	local01, result2
	mov	local02, result1
	mov	arg01, local02
	call	#__system___gc_nextBlockPtr
	mov	local03, result1 wz
	mov	local04, #0
	cogid	local04
 if_e	jmp	#LR__1149
LR__1148
	cmps	local03, local01 wc
 if_ae	jmp	#LR__1149
	mov	local05, local03
	add	local05, #2
	rdword	local06, local05
	andn	local06, #32
	mov	local07, local03
	add	local07, #2
	wrword	local06, local07
	mov	arg01, local03
	call	#__system___gc_nextBlockPtr
	mov	local03, result1 wz
 if_ne	jmp	#LR__1148
LR__1149
	mov	local06, #0
	mov	arg01, #0
	call	#__system____topofstack
	mov	arg02, result1
	mov	arg01, local06
	call	#__system___gc_markhub
	call	#__system___gc_markcog
	mov	arg01, local02
	call	#__system___gc_nextBlockPtr
	mov	local08, result1 wz
 if_ne	jmp	#LR__1150
	mov	arg01, ##@LR__1234
	call	#__system___gc_errmsg
	jmp	#LR__1154
LR__1150
LR__1151
	mov	local03, local08
	mov	arg01, local03
	call	#__system___gc_nextBlockPtr
	mov	local08, result1
	mov	local06, local03
	add	local06, #2
	rdword	local06, local06
	test	local06, #32 wz
 if_ne	jmp	#LR__1153
	mov	local05, local06
	and	local05, #16 wz
 if_ne	jmp	#LR__1153
	getnib	local06, local06, #0
	mov	local09, local06
	cmp	local09, local04 wz
 if_ne	cmp	local09, #14 wz
 if_ne	jmp	#LR__1152
	mov	arg01, local03
	call	#__system___gc_dofree
	mov	local06, result1
	mov	local08, local06
LR__1152
LR__1153
	cmp	local08, #0 wz
 if_ne	cmps	local08, local01 wc
 if_c_and_nz	jmp	#LR__1151
LR__1154
	mov	ptra, fp
	call	#popregs_
__system___gc_docollect_ret
	ret

__system___gc_markhub
	mov	COUNT_, #4
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	call	#__system___gc_ptrs
	mov	local03, result1
	mov	local04, result2
LR__1155
	cmps	local01, local02 wc
 if_ae	jmp	#LR__1156
	rdlong	arg03, local01
	add	local01, #4
	mov	arg02, local04
	mov	arg01, local03
	call	#__system___gc_isvalidptr
	mov	arg03, result1 wz
 if_e	jmp	#LR__1155
	mov	arg01, arg03
	mov	result1, #0
	add	arg01, #2
	rdword	arg01, arg01
	cmp	arg01, ##27791 wz
 if_e	neg	result1, #1
	cmp	result1, #0 wz
 if_ne	jmp	#LR__1155
	mov	result2, arg03
	add	result2, #2
	rdword	result2, result2
	andn	result2, #15
	or	result2, #46
	add	arg03, #2
	wrword	result2, arg03
	jmp	#LR__1155
LR__1156
	mov	ptra, fp
	call	#popregs_
__system___gc_markhub_ret
	ret

__system___gc_markcog
	mov	COUNT_, #3
	call	#pushregs_
	call	#__system___gc_ptrs
	mov	local01, result1
	mov	local02, result2
	mov	local03, #495
LR__1157
	'.live	local03
	alts	local03, #0
	mov	arg03, local03
	mov	arg01, local01
	mov	arg02, local02
	call	#__system___gc_isvalidptr
	cmp	result1, #0 wz
 if_e	jmp	#LR__1158
	mov	arg03, result1
	add	arg03, #2
	rdword	arg03, arg03
	or	arg03, #32
	add	result1, #2
	wrword	arg03, result1
LR__1158
	sub	local03, #1
	cmps	local03, #0 wc
 if_ae	jmp	#LR__1157
	mov	ptra, fp
	call	#popregs_
__system___gc_markcog_ret
	ret

__system____default_getc
__system____default_getc_ret
	ret

__system____default_putc
__system____default_putc_ret
	ret

__system____default_putc_terminal
__system____default_putc_terminal_ret
	ret

__system____default_flush
__system____default_flush_ret
	ret

__system____getftab
	cmp	arg01, #10 wc
 if_ae	mov	result1, #0
 if_ae	jmp	#__system____getftab_ret
	mov	result1, arg01
	shl	result1, #1
	add	result1, arg01
	shl	result1, #4
	add	ptr___system__dat__, ##756
	add	result1, ptr___system__dat__
	sub	ptr___system__dat__, ##756
__system____getftab_ret
	ret

__system__strncpy
	mov	_var01, arg01
LR__1159
	sub	arg03, #1
	cmps	arg03, #0 wc
 if_b	jmp	#LR__1160
	rdbyte	result1, arg02
	wrbyte	result1, _var01
	add	arg02, #1
	rdbyte	result1, _var01 wz
	add	_var01, #1
 if_ne	jmp	#LR__1159
LR__1160
	loc	pa,	#(@LR__1162-@LR__1161)
	call	#FCACHE_LOAD_
LR__1161
	sub	arg03, #1
	cmps	arg03, #0 wc
 if_ae	mov	_var02, _var01
 if_ae	add	_var01, #1
 if_ae	wrbyte	#0, _var02
 if_ae	jmp	#LR__1161
LR__1162
	mov	result1, arg01
__system__strncpy_ret
	ret

__system__strncat
	mov	_var01, arg01
	mov	_var02, arg02
	mov	_var03, arg03
	mov	_var04, _var02 wz
 if_e	jmp	#LR__1167
	cmp	_var03, #1 wc
 if_b	jmp	#LR__1167
	mov	_var05, _var01
	loc	pa,	#(@LR__1165-@LR__1163)
	call	#FCACHE_LOAD_
LR__1163
	rdbyte	_var06, _var05 wz
 if_ne	add	_var05, #1
 if_ne	jmp	#LR__1163
	mov	_var07, _var03
LR__1164
	mov	_var08, _var04
	mov	_var09, _var04
	add	_var09, #1
	mov	_var04, _var09
	rdbyte	_var10, _var08
	mov	_var06, _var10
	zerox	_var06, #7 wz
 if_e	jmp	#LR__1166
	mov	_var11, _var07
	sub	_var11, #1
	mov	_var07, _var11
	cmps	_var07, #0 wc
 if_ae	mov	_var06, _var05
 if_ae	add	_var05, #1
 if_ae	wrbyte	_var10, _var06
 if_ae	jmp	#LR__1164
LR__1165
LR__1166
	mov	_var06, #0
	wrbyte	#0, _var05
LR__1167
	mov	result1, _var01
__system__strncat_ret
	ret

__system__strncmp
	mov	_var01, arg01 wz
 if_ne	jmp	#LR__1168
	cmp	arg02, #0 wz
 if_ne	neg	_var02, #1
 if_e	mov	_var02, #0
	mov	result1, _var02
	jmp	#__system__strncmp_ret
LR__1168
	cmp	arg02, #0 wz
 if_e	mov	result1, #1
 if_e	jmp	#__system__strncmp_ret
	mov	_var03, arg03
	loc	pa,	#(@LR__1170-@LR__1169)
	call	#FCACHE_LOAD_
LR__1169
	rdbyte	_var04, _var01
	mov	_var05, arg02
	mov	_var06, arg02
	add	_var06, #1
	mov	arg02, _var06
	rdbyte	_var07, _var05
	mov	_var02, _var03
	sub	_var02, #1
	mov	_var03, _var02
	cmps	_var03, #0 wc
	add	_var01, #1
 if_ae	cmp	_var04, #0 wz
 if_nc_and_z	jmp	#LR__1171
 if_ae	cmp	_var04, _var07 wz
 if_nc_and_z	jmp	#LR__1169
LR__1170
LR__1171
	cmps	_var03, #0 wc
 if_b	mov	result1, #0
 if_b	jmp	#__system__strncmp_ret
	cmp	_var04, _var07 wz
 if_e	mov	result1, #0
 if_e	jmp	#__system__strncmp_ret
	cmp	_var04, #0 wz
 if_e	neg	result1, #1
 if_e	jmp	#__system__strncmp_ret
	cmp	_var07, #0 wz
 if_e	mov	result1, #1
 if_ne	mov	result1, _var04
 if_ne	sub	result1, _var07
__system__strncmp_ret
	ret

__system____root_opendir
	add	ptr___system__dat__, #92
	add	arg01, #4
	wrlong	ptr___system__dat__, arg01
	mov	result1, #0
	sub	ptr___system__dat__, #92
__system____root_opendir_ret
	ret

__system____root_readdir
	mov	COUNT_, #3
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	add	local01, #4
	rdlong	local03, local01
	sub	local01, #4
LR__1172
	add	ptr___system__dat__, #108
	cmp	local03, ptr___system__dat__ wz
	sub	ptr___system__dat__, #108
 if_e	neg	result1, #1
 if_e	jmp	#LR__1173
	rdlong	arg03, local03 wz
 if_e	add	local03, #4
 if_e	jmp	#LR__1172
	rdlong	arg02, local03
	add	arg02, #1
	mov	arg01, local02
	mov	arg03, #64
	call	#__system__strncpy
	add	local02, #80
	wrbyte	#1, local02
	sub	local02, #8
	wrlong	#0, local02
	add	local02, #4
	wrlong	#0, local02
	add	local03, #4
	add	local01, #4
	wrlong	local03, local01
	mov	result1, #0
LR__1173
	mov	ptra, fp
	call	#popregs_
__system____root_readdir_ret
	ret

__system____root_closedir
	mov	result1, #0
__system____root_closedir_ret
	ret

__system____root_stat
	mov	_var01, arg02
	mov	arg01, _var01
	mov	arg02, #0
	mov	arg03, #48
	call	#\builtin_bytefill_
	add	_var01, #8
	wrlong	##4607, _var01
	mov	result1, #0
__system____root_stat_ret
	ret

__system___strrev
	rdbyte	_var01, arg01 wz
 if_e	jmp	#__system___strrev_ret
	mov	_var02, arg01
	loc	pa,	#(@LR__1176-@LR__1174)
	call	#FCACHE_LOAD_
LR__1174
	rdbyte	_var01, _var02 wz
 if_ne	add	_var02, #1
 if_ne	jmp	#LR__1174
	sub	_var02, #1
LR__1175
	cmps	_var02, arg01 wcz
 if_be	jmp	#LR__1177
	rdbyte	_var01, arg01
	rdbyte	_var03, _var02
	wrbyte	_var03, arg01
	wrbyte	_var01, _var02
	add	arg01, #1
	sub	_var02, #1
	jmp	#LR__1175
LR__1176
LR__1177
__system___strrev_ret
	ret

__system___fmtpad
	mov	COUNT_, #7
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	getbyte	arg01, local02, #1
	shr	local02, #22
	and	local02, #3 wz
	mov	local04, #0
 if_e	mov	local02, #1
	test	local02, arg04 wz
 if_e	mov	result1, #0
 if_e	jmp	#LR__1181
	subr	local03, arg01
	cmps	local03, #1 wc
 if_b	mov	result1, #0
 if_b	jmp	#LR__1181
	cmp	local02, #3 wz
 if_ne	jmp	#LR__1178
	cmp	arg04, #1 wz
	wrz	local02
	add	local03, local02
	abs	local03, local03 wc
	shr	local03, #1
	negc	local03, local03
LR__1178
	mov	local05, #0
LR__1179
	cmps	local05, local03 wc
 if_ae	jmp	#LR__1180
	mov	local06, local01
	rdlong	local07, local06
	add	local06, #4
	rdlong	local06, local06
	mov	arg01, #32
	mov	local02, objptr
	mov	objptr, local07
	call	local06
	mov	objptr, local02
	mov	local06, result1
	cmps	local06, #0 wc
 if_b	mov	result1, local06
 if_b	jmp	#LR__1181
	add	local04, local06
	add	local05, #1
	jmp	#LR__1179
LR__1180
	mov	result1, local04
LR__1181
	mov	ptra, fp
	call	#popregs_
__system___fmtpad_ret
	ret

__system___uitoall
	mov	COUNT_, #9
	call	#pushregs_
	mov	local03, arg01
	mov	local01, arg02
	mov	local02, arg03
	mov	local04, arg04
	mov	local05, arg05
	mov	local06, arg06 wz
	mov	local07, local03
	mov	local08, #0
 if_ne	mov	local09, #55
 if_e	mov	local09, #87
LR__1182
	mov	arg01, local01
	mov	arg02, local02
	mov	arg03, local04
	mov	arg04, #0
	call	#__system___int64_divmodu
	mov	local06, result3
	cmp	local06, #10 wc
 if_b	add	local06, #48
 if_ae	add	local06, local09
	wrbyte	local06, local07
	mov	arg01, local01
	mov	arg02, local02
	add	local07, #1
	mov	arg03, local04
	mov	arg04, #0
	call	#__system___int64_divmodu
	mov	local01, result1
	mov	local02, result2
	add	local08, #1
	mov	arg01, local01
	mov	arg02, local02
	mov	result1, #0
	cmp	arg01, #0 wcz
	cmpx	arg02, #0 wcz
 if_ne	negc	result1, #1
	cmps	result1, #1 wc
 if_ae	jmp	#LR__1182
	cmp	local08, local05 wc
 if_b	jmp	#LR__1182
	wrbyte	#0, local07
	mov	arg01, local03
	call	#__system___strrev
	mov	result1, local08
	mov	ptra, fp
	call	#popregs_
__system___uitoall_ret
	ret

__system___uitoa
	mov	COUNT_, #8
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	mov	local04, arg04
	mov	local05, arg05 wz
	mov	local06, local01
	mov	local07, #0
 if_ne	mov	local08, #55
 if_e	mov	local08, #87
LR__1183
	qdiv	local02, local03
	getqy	local05
	qdiv	local02, local03
	cmp	local05, #10 wc
 if_b	add	local05, #48
 if_ae	add	local05, local08
	wrbyte	local05, local06
	add	local06, #1
	add	local07, #1
	getqx	local02
	cmp	local02, #0 wz
 if_ne	jmp	#LR__1183
	cmp	local07, local04 wc
 if_b	jmp	#LR__1183
	wrbyte	#0, local06
	mov	arg01, local01
	call	#__system___strrev
	mov	result1, local07
	mov	ptra, fp
	call	#popregs_
__system___uitoa_ret
	ret

__system___fmtnumlong
	mov	COUNT_, #13
	call	#pushregs_
	add	ptra, #144
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	add	fp, #4
	wrlong	arg03, fp
	add	fp, #4
	wrlong	arg04, fp
	add	fp, #4
	wrlong	arg05, fp
	add	fp, #4
	mov	local01, fp
	add	fp, #68
	wrlong	local01, fp
	add	fp, #4
	wrlong	#0, fp
	sub	fp, #88
	rdlong	local01, fp
	shr	local01, #16
	and	local01, #63
	add	fp, #92
	wrlong	local01, fp
	sub	fp, #92
	rdlong	local01, fp
	getbyte	local01, local01, #0
	add	fp, #96
	wrlong	local01, fp
	sub	fp, #96
	rdlong	local01, fp
	shr	local01, #26
	and	local01, #3
	add	fp, #100
	wrlong	local01, fp
	sub	fp, #8
	rdlong	local01, fp
	sub	fp, #100
	cmps	local01, #1 wc
 if_ae	add	fp, #100
 if_ae	rdlong	local01, fp
 if_ae	sub	local01, #1
 if_ae	wrlong	local01, fp
 if_ae	sub	fp, #100
	add	fp, #104
	rdlong	local01, fp
	sub	fp, #104
	cmps	local01, #65 wc
 if_b	add	fp, #104
 if_b	rdlong	local01, fp
 if_b	sub	fp, #104
 if_b	cmps	local01, #0 wz
 if_nc_or_z	add	fp, #104
 if_nc_or_z	wrlong	#64, fp
 if_nc_or_z	sub	fp, #104
	add	fp, #108
	rdlong	local01, fp
	sub	fp, #108
	cmp	local01, #3 wz
 if_e	add	fp, #108
 if_e	wrlong	#0, fp
 if_e	sub	fp, #108
 if_e	jmp	#LR__1185
	add	fp, #12
	rdlong	local02, fp
	add	fp, #4
	rdlong	local03, fp
	sub	fp, #16
	mov	local04, #0
	mov	local05, #0
	mov	arg01, local02
	mov	arg02, local03
	mov	arg03, #0
	mov	arg04, #0
	mov	result1, #0
	cmp	arg01, #0 wcz
	cmpsx	arg02, #0 wcz
 if_ne	negc	result1, #1
	cmps	result1, #0 wc
 if_ae	jmp	#LR__1184
	add	fp, #108
	wrlong	#4, fp
	sub	fp, #96
	rdlong	local06, fp
	add	fp, #4
	rdlong	local07, fp
	mov	arg01, local06
	not	result1, arg01
	add	result1, #1 wz
	not	result2, local07
	mov	arg02, #0
 if_e	neg	arg02, #1
	sub	result2, arg02
	sub	fp, #4
	wrlong	result1, fp
	add	fp, #4
	wrlong	result2, fp
	sub	fp, #16
LR__1184
LR__1185
	add	fp, #108
	rdlong	local01, fp wz
	sub	fp, #108
 if_e	jmp	#LR__1194
	add	fp, #96
	rdlong	local01, fp
	add	local01, #1
	wrlong	local01, fp
	add	fp, #4
	rdlong	local01, fp
	add	fp, #4
	rdlong	local08, fp
	sub	fp, #104
	cmp	local01, local08 wz
 if_ne	jmp	#LR__1187
	add	fp, #100
	rdlong	local01, fp
	sub	local01, #1 wz
	wrlong	local01, fp
	sub	fp, #100
 if_ne	jmp	#LR__1186
	add	fp, #4
	rdlong	arg01, fp
	add	fp, #4
	rdlong	arg02, fp
	sub	fp, #8
	mov	arg03, #35
	call	#__system___fmtchar
	jmp	#LR__1199
LR__1186
LR__1187
	add	fp, #108
	rdlong	local01, fp
	sub	fp, #108
	mov	local09, local01
	sub	local09, #1
	fle	local09, #4
	jmprel	local09
LR__1188
	jmp	#LR__1191
	jmp	#LR__1189
	jmp	#LR__1190
	jmp	#LR__1192
	jmp	#LR__1190
LR__1189
	add	fp, #92
	rdlong	local10, fp
	mov	local11, local10
	add	local10, #1
	wrlong	local10, fp
	sub	fp, #92
	wrbyte	#32, local11
	jmp	#LR__1193
LR__1190
LR__1191
	add	fp, #92
	rdlong	local08, fp
	mov	local10, local08
	add	local10, #1
	wrlong	local10, fp
	sub	fp, #92
	wrbyte	#43, local08
	jmp	#LR__1193
LR__1192
	add	fp, #92
	rdlong	local08, fp
	mov	local11, local08
	mov	local12, local08
	mov	local10, local12
	add	local10, #1
	wrlong	local10, fp
	sub	fp, #92
	mov	local13, #45
	wrbyte	#45, local11
LR__1193
LR__1194
	add	fp, #12
	rdlong	arg02, fp
	add	fp, #4
	rdlong	arg03, fp
	add	fp, #76
	rdlong	arg01, fp
	sub	fp, #72
	rdlong	arg04, fp
	add	fp, #80
	rdlong	arg05, fp
	mov	arg06, #0
	sub	fp, #92
	rdlong	local08, fp
	sub	fp, #8
	testbn	local08, #29 wz
 if_ne	mov	arg06, #1
	call	#__system___uitoall
	add	fp, #96
	rdlong	local01, fp
	add	local01, result1
	wrlong	local01, fp
	add	fp, #8
	rdlong	local08, fp
	sub	fp, #104
	cmps	local01, local08 wcz
 if_be	jmp	#LR__1198
	loc	pa,	#(@LR__1196-@LR__1195)
	call	#FCACHE_LOAD_
LR__1195
	add	fp, #104
	rdlong	local11, fp
	mov	local08, local11
	sub	local08, #1
	wrlong	local08, fp
	sub	fp, #104
	cmps	local11, #1 wc
 if_b	jmp	#LR__1197
	add	fp, #92
	rdlong	local11, fp
	mov	local08, local11
	add	local08, #1
	wrlong	local08, fp
	sub	fp, #92
	wrbyte	#35, local11
	jmp	#LR__1195
LR__1196
LR__1197
	add	fp, #92
	rdlong	local11, fp
	mov	local08, local11
	add	local08, #1
	wrlong	local08, fp
	sub	fp, #92
	wrbyte	#0, local11
LR__1198
	add	fp, #4
	rdlong	arg01, fp
	add	fp, #4
	rdlong	arg02, fp
	add	fp, #16
	mov	arg03, fp
	sub	fp, #24
	call	#__system___fmtstr
LR__1199
	mov	ptra, fp
	call	#popregs_
__system___fmtnumlong_ret
	ret

__system__disassemble_0682
	mov	COUNT_, #22
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	mov	local04, arg04
	mov	local05, arg05
	mov	arg01, local05
	call	#__system___float_fromint
	mov	local06, result1
	mov	local07, #0
	mov	local08, #0
	mov	local09, #1
	mov	arg01, local01
	mov	arg02, #0
	mov	arg03, #1
	call	#__system___float_cmp
	cmp	result1, #0 wz
 if_e	mov	local10, #0
 if_e	wrlong	#0, local02
 if_e	wrlong	local10, local03
 if_e	jmp	#LR__1212
	mov	arg01, local01
	call	#__system____builtin_ilogb
	mov	local11, result1
	cmp	local05, #10 wz
 if_ne	jmp	#LR__1200
	mov	local10, local11
	shl	local10, #1
	add	local10, local11
	abs	local11, local10 wc
	qdiv	local11, #10
	mov	local12, #9
	getqx	local11
	negc	local11, local11
	jmp	#LR__1201
LR__1200
	mov	local12, #24
LR__1201
LR__1202
	cmps	local07, #8 wc
	add	local07, #1
 if_ae	jmp	#LR__1203
	mov	arg01, ##1065353216
	mov	arg02, local06
	mov	arg03, local11
	call	#__system___float_pow_n
	mov	local13, result1
	mov	arg01, local01
	mov	arg02, local13
	call	#__system___float_div
	mov	local14, result1
	mov	local09, #1
	mov	arg01, local14
	mov	arg02, ##1065353216
	mov	arg03, #1
	call	#__system___float_cmp
	cmps	result1, #0 wc
 if_b	sub	local11, #1
 if_b	jmp	#LR__1202
	mov	arg02, local06
	neg	local09, #1
	mov	arg01, local14
	neg	arg03, #1
	call	#__system___float_cmp
	cmps	result1, #0 wc
 if_ae	add	local11, #1
 if_ae	jmp	#LR__1202
LR__1203
	mov	arg01, local14
	call	#__system____builtin_ilogb
	mov	local15, result1
	mov	local16, local14
	mov	local17, local16
	bitl	local17, #279
	bith	local17, #23
	shl	local17, local15
	cmp	local05, #2 wz
 if_e	shl	local04, #2
	mov	local18, #0
	cmps	local04, #0 wc
 if_ae	jmp	#LR__1204
	subr	local04, local11
	cmps	local04, #0 wc
 if_b	jmp	#LR__1211
	jmp	#LR__1205
LR__1204
	add	local04, #1
LR__1205
	fles	local04, local12 wcz
	mov	local19, #1
	loc	pa,	#(@LR__1207-@LR__1206)
	call	#FCACHE_LOAD_
LR__1206
	cmp	local18, ##8388608 wc
 if_ae	jmp	#LR__1208
	cmps	local04, #1 wc
	sub	local04, #1
 if_b	jmp	#LR__1208
	qmul	local18, local05
	mov	local20, local17
	shr	local20, #23
	bitl	local17, #279
	getqx	local18
	qmul	local19, local05
	getqx	local19
	qmul	local17, local05
	add	local18, local20
	getqx	local17
	jmp	#LR__1206
LR__1207
LR__1208
	mov	local10, local05
	shl	local10, #23
	abs	local08, local10 wc
	shr	local08, #1
	negc	local08, local08
	cmp	local17, local08 wcz
 if_a	jmp	#LR__1209
	mov	local09, local05
	shl	local09, #23
	abs	local21, local09 wc
	shr	local21, #1
	negc	local21, local21
	cmp	local17, local21 wz
 if_ne	jmp	#LR__1210
	mov	local22, local18
	and	local22, #1 wz
 if_e	jmp	#LR__1210
LR__1209
	mov	local10, local18
	mov	local08, local18
	add	local08, #1
	mov	local18, local08
	cmp	local18, local19 wz
 if_e	mov	local10, local11
 if_e	add	local10, #1
 if_e	mov	local11, local10
LR__1210
LR__1211
	wrlong	local18, local02
	wrlong	local11, local03
LR__1212
	mov	ptra, fp
	call	#popregs_
__system__disassemble_0682_ret
	ret

__system__emitsign_0684
	mov	result1, #0
	cmp	arg02, #0 wz
 if_ne	mov	_var01, arg01
 if_ne	add	arg01, #1
 if_ne	wrbyte	arg02, _var01
 if_ne	mov	result1, #1
	cmp	arg03, #0 wz
 if_ne	wrbyte	#48, arg01
 if_ne	add	arg01, #1
 if_ne	wrbyte	arg03, arg01
 if_ne	add	result1, #2
__system__emitsign_0684_ret
	ret

__system___gettxfunc
	mov	COUNT_, #2
	call	#pushregs_
	call	#__system____getftab
	mov	local01, result1 wz
 if_ne	add	local01, #8
 if_ne	rdlong	local02, local01
 if_ne	sub	local01, #8
 if_ne	cmps	local02, #0 wz
 if_e	mov	result1, #0
 if_ne	mov	arg02, ptr___struct__s_vfs_file_t_putchar_
 if_ne	mov	arg01, local01
 if_ne	call	#__system___make_methodptr
	mov	ptra, fp
	call	#popregs_
__system___gettxfunc_ret
	ret

__system___getiolock_0724
	mov	COUNT_, #2
	call	#pushregs_
	call	#__system____getftab
	mov	local01, result1 wz
 if_ne	add	local01, #8
 if_ne	rdlong	local02, local01
 if_ne	sub	local01, #8
 if_ne	cmps	local02, #0 wz
 if_e	add	ptr___system__dat__, ##748
 if_e	mov	result1, ptr___system__dat__
 if_e	sub	ptr___system__dat__, ##748
 if_ne	add	local01, #12
 if_ne	mov	result1, local01
	mov	ptra, fp
	call	#popregs_
__system___getiolock_0724_ret
	ret

__system__pack_0764
	mov	_var01, arg01
	mov	_var02, arg02
	mov	_var03, arg03
	mov	_var04, arg04
	add	_var03, #127
	test	_var04, #4 wz
 if_e	jmp	#LR__1213
	cmp	_var01, #0 wz
 if_e	decod	_var01, #22
	bith	_var01, #247
	jmp	#LR__1222
LR__1213
	test	_var04, #2 wz
 if_ne	mov	_var01, ##2139095040
 if_ne	mov	_var02, #0
 if_ne	jmp	#LR__1221
	test	_var04, #8 wz
 if_ne	mov	_var01, #0
 if_ne	jmp	#LR__1220
	cmps	_var03, #255 wc
 if_ae	mov	_var01, ##2139095040
 if_ae	mov	_var02, #0
 if_ae	jmp	#LR__1219
	cmps	_var03, #1 wc
 if_ae	jmp	#LR__1217
	shr	_var02, #1
	mov	_var05, _var01
	and	_var05, #1
	shl	_var05, #31
	or	_var02, _var05
	shr	_var01, #1
	loc	pa,	#(@LR__1215-@LR__1214)
	call	#FCACHE_LOAD_
LR__1214
	cmps	_var03, #0 wc
 if_ae	jmp	#LR__1216
	cmp	_var01, #0 wz
 if_e	jmp	#LR__1216
	mov	_var06, _var02
	and	_var06, #1
	add	_var03, #1
	shr	_var02, #1
	mov	_var05, _var01
	and	_var05, #1
	shl	_var05, #31
	or	_var02, _var05
	or	_var02, _var06
	shr	_var01, #1
	jmp	#LR__1214
LR__1215
LR__1216
	cmps	_var03, #0 wc
 if_ae	jmp	#LR__1218
	cmp	_var02, #0 wz
	wrnz	_var02
	jmp	#LR__1218
LR__1217
	bitl	_var01, #279
	shl	_var03, #23
	or	_var01, _var03
LR__1218
LR__1219
LR__1220
LR__1221
LR__1222
	test	_var01, #1 wz
 if_ne	or	_var02, #1
	mov	_var06, _var02
	mov	_var05, #0
	add	_var02, ##2147483647
	cmp	_var02, _var06 wc
 if_b	mov	_var05, #1
	add	_var01, _var05
	test	_var04, #1 wz
 if_ne	bith	_var01, #31
	mov	result1, _var01
__system__pack_0764_ret
	ret

__system___rxtxioctl_1052
	mov	_var01, arg02
	mov	_var02, arg03
	cmp	_var01, #256 wz
 if_e	jmp	#LR__1223
	cmp	_var01, #257 wz
 if_e	jmp	#LR__1224
	jmp	#LR__1225
LR__1223
	add	ptr___system__dat__, #8
	rdlong	result1, ptr___system__dat__
	sub	ptr___system__dat__, #8
	wrlong	result1, _var02
	mov	result1, #0
	jmp	#LR__1226
LR__1224
	rdlong	arg01, _var02
	add	ptr___system__dat__, #8
	wrlong	arg01, ptr___system__dat__
	sub	ptr___system__dat__, #8
	mov	result1, #0
	jmp	#LR__1226
LR__1225
	add	ptr___system__dat__, #24
	wrlong	#10, ptr___system__dat__
	sub	ptr___system__dat__, #24
	neg	result1, #1
LR__1226
__system___rxtxioctl_1052_ret
	ret

__system____dummy_flush_1053
	mov	result1, #0
__system____dummy_flush_1053_ret
	ret

__struct__s_vfs_file_t_putchar
	mov	COUNT_, #4
	call	#pushregs_
	add	objptr, #24
	rdlong	arg02, objptr wz
	sub	objptr, #24
 if_e	mov	result1, #0
 if_e	jmp	#LR__1227
	add	objptr, #24
	rdlong	local01, objptr
	sub	objptr, #24
	rdlong	local02, local01
	add	local01, #4
	rdlong	local03, local01
	mov	arg02, objptr
	mov	local04, objptr
	mov	objptr, local02
	call	local03
	mov	objptr, local04
	cmps	result1, #0 wc
 if_b	mov	local01, #0
 if_ae	mov	local01, #1
	mov	result1, local01
LR__1227
	mov	ptra, fp
	call	#popregs_
__struct__s_vfs_file_t_putchar_ret
	ret

__struct__s_vfs_file_t_getchar
	mov	COUNT_, #3
	call	#pushregs_
	add	objptr, #28
	rdlong	arg01, objptr wz
	sub	objptr, #28
 if_e	neg	result1, #1
 if_e	jmp	#LR__1228
	add	objptr, #28
	rdlong	arg01, objptr
	sub	objptr, #28
	rdlong	local01, arg01
	add	arg01, #4
	rdlong	local02, arg01
	mov	arg01, objptr
	mov	local03, objptr
	mov	objptr, local01
	call	local02
	mov	objptr, local03
LR__1228
	mov	ptra, fp
	call	#popregs_
__struct__s_vfs_file_t_getchar_ret
	ret

__struct___bas_wrap_sender_tx
	mov	COUNT_, #3
	call	#pushregs_
	rdlong	local01, objptr
	rdlong	local02, local01
	add	local01, #4
	rdlong	local01, local01
	mov	local03, objptr
	mov	objptr, local02
	call	local01
	mov	objptr, local03
	mov	result1, #1
	mov	ptra, fp
	call	#popregs_
__struct___bas_wrap_sender_tx_ret
	ret

__struct___bas_wrap_sender_rx
	mov	COUNT_, #3
	call	#pushregs_
	add	objptr, #4
	rdlong	local01, objptr
	sub	objptr, #4
	rdlong	local02, local01
	add	local01, #4
	rdlong	local01, local01
	mov	local03, objptr
	mov	objptr, local02
	call	local01
	mov	objptr, local03
	mov	ptra, fp
	call	#popregs_
__struct___bas_wrap_sender_rx_ret
	ret

__struct___bas_wrap_sender_close
	mov	COUNT_, #3
	call	#pushregs_
	add	objptr, #8
	rdlong	local01, objptr
	sub	objptr, #8
	rdlong	local02, local01
	add	local01, #4
	rdlong	local01, local01
	mov	local03, objptr
	mov	objptr, local02
	call	local01
	mov	objptr, local03
	mov	ptra, fp
	call	#popregs_
__struct___bas_wrap_sender_close_ret
	ret

LR__1229
	byte	"/"
	byte	0
LR__1230
	byte	"inf"
	byte	0
LR__1231
	byte	"nan"
	byte	0
LR__1232
	byte	" !!! corrupted heap??? !!! "
	byte	0
LR__1233
	byte	" !!! out of heap memory !!! "
	byte	0
LR__1234
	byte	" !!! corrupted heap !!! "
	byte	0
LR__1235
	byte	"Error setting up MCP23017: ACK:%d",10
	byte	0
LR__1236
	byte	"Error: Queue is full",10
	byte	0
LR__1237
	byte	"Motion failed to start",10
	byte	0
LR__1238
	byte	"Control failed to start",10
	byte	0
LR__1239
	byte	0
	byte	0
LR__1240
	byte	"/sd"
	byte	0
LR__1241
	byte	"/sd/test.txt"
	byte	0
LR__1242
	byte	"r"
	byte	0
LR__1243
	byte	"Read test data: "
	byte	0
LR__1244
	byte	"/sd/test.txt"
	byte	0
LR__1245
	byte	"r"
	byte	0
LR__1246
	byte	"/sd/config.txt"
	byte	0
LR__1247
	byte	"r"
	byte	0
LR__1248
	byte	"read_profile_status: "
	byte	0
LR__1249
	byte	"/sd/config.txt"
	byte	0
LR__1250
	byte	"w"
	byte	0
LR__1251
	byte	"/sd/test.txt"
	byte	0
LR__1252
	byte	"w"
	byte	0
LR__1253
	byte	"Must be in test mode to run test",10
	byte	0
LR__1254
	byte	"???"
	byte	0
LR__1255
	byte	"*+,:;<=>[]|",34,"?",127
	byte	0
LR__1256
	byte	"FAT32   "
	byte	0
LR__1257
	byte	"TZ"
	byte	0
LR__1258
	byte	0
	byte	0
	alignl
_dat_
	byte	$00[120460]
	byte	$ff, $ff, $ff, $ff, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
	byte	$00[121396]
	byte	$05, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
	long	@@@_dat_ + 242344
	long	@@@_dat_ + 242352
	byte	$00, $00, $00, $00
	long	@@@_dat_ + 242360
	long	@@@_dat_ + 242368
	byte	$00[8]
	byte	$01, $00, $00, $00, $06, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
	byte	$00, $00, $00, $00
	long	@@@_dat_ + 242376
	long	@@@_dat_ + 242384
	byte	$00, $00, $00, $00
	long	@@@_dat_ + 242392
	long	@@@_dat_ + 242400
	byte	$00[8]
	byte	$01, $00, $00, $00, $06, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
	byte	$00, $00, $00, $00
	long	@@@_dat_ + 242408
	long	@@@_dat_ + 242416
	byte	$00, $00, $00, $00
	long	@@@_dat_ + 242424
	long	@@@_dat_ + 242432
	byte	$00[344]
	long	@@@__system___tx
	byte	$00, $00, $00, $00
	long	@@@__system___rx
	byte	$00, $00, $00, $00
	long	@@@__rxtxioctl_0903
	byte	$00, $00, $00, $00
	long	@@@___dummy_flush_0904
	byte	$00, $00, $00, $00
	long	@@@__system___tx
	byte	$00, $00, $00, $00
	long	@@@__system___rx
	byte	$00, $00, $00, $00
	long	@@@__rxtxioctl_0903
	byte	$00, $00, $00, $00
	long	@@@___dummy_flush_0904
	byte	$00, $00, $00, $00
	long	@@@__system___tx
	byte	$00, $00, $00, $00
	long	@@@__system___rx
	byte	$00, $00, $00, $00
	long	@@@__rxtxioctl_0903
	byte	$00, $00, $00, $00
	long	@@@___dummy_flush_0904
	alignl
_jm_fullduplexserial_spin2_dat_
	byte	$28, $06, $64, $fd, $00, $3b, $04, $fb, $1f, $3a, $14, $f4, $0c, $00, $b0, $3d
	byte	$1f, $3c, $14, $f4, $2c, $00, $b0, $3d, $ec, $ff, $9f, $fd, $40, $3a, $70, $fd
	byte	$2d, $00, $64, $3d, $1d, $46, $88, $fa, $18, $46, $44, $f0, $1f, $42, $00, $f6
	byte	$04, $45, $04, $fb, $22, $42, $00, $f1, $21, $46, $40, $fc, $ff, $44, $04, $f7
	byte	$04, $45, $64, $0c, $1e, $42, $98, $fa, $2d, $00, $64, $cd, $06, $43, $04, $fb
	byte	$07, $45, $04, $fb, $22, $42, $08, $f2, $2d, $00, $64, $ad, $20, $42, $00, $f6
	byte	$22, $42, $00, $f1, $21, $46, $c0, $fa, $1e, $46, $20, $fc, $7f, $44, $04, $f7
	byte	$07, $45, $64, $0c
'-' rxd                     res       1                             ' receive pin
'-' txd                     res       1                             ' transmit pin
'-' p_rxbuf                 res       1                             ' pointer to rxbuf
'-' p_txbuf                 res       1                             ' pointer to txbuf
'-' t1                      res       1                             ' work vars
'-' t2                      res       1
'-' t3                      res       1
'-'                         fit       496
	alignl
_fatfs_cc_dat_
	byte	$43, $55, $45, $41, $41, $41, $41, $43, $45, $45, $45, $49, $49, $49, $41, $41
	byte	$45, $92, $92, $4f, $4f, $4f, $55, $55, $59, $4f, $55, $4f, $9c, $4f, $9e, $9f
	byte	$41, $49, $4f, $55, $a5, $a5, $a6, $a7, $a8, $a9, $aa, $ab, $ac, $ad, $ae, $af
	byte	$b0, $b1, $b2, $b3, $b4, $41, $41, $41, $b8, $b9, $ba, $bb, $bc, $bd, $be, $bf
	byte	$c0, $c1, $c2, $c3, $c4, $c5, $41, $41, $c8, $c9, $ca, $cb, $cc, $cd, $ce, $cf
	byte	$d1, $d1, $45, $45, $45, $49, $49, $49, $49, $d9, $da, $db, $dc, $dd, $49, $df
	byte	$4f, $e1, $4f, $4f, $4f, $4f, $e6, $e8, $e8, $55, $55, $55, $59, $59, $ee, $ef
	byte	$f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $fa, $fb, $fc, $fd, $fe, $ff
	byte	$00, $00, $00, $00, $00, $00, $00, $00
	long	@@@_fatfs_cc_dat_ + 216
	long	@@@_fatfs_cc_dat_ + 224
	long	@@@_fatfs_cc_dat_ + 232
	long	@@@_fatfs_cc_dat_ + 240
	long	@@@_fatfs_cc_dat_ + 248
	byte	$00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
	long	@@@_fatfs_cc_dat_ + 256
	long	@@@_fatfs_cc_dat_ + 264
	long	@@@_fatfs_cc_dat_ + 272
	long	@@@_fatfs_cc_dat_ + 280
	long	@@@_fatfs_cc_dat_ + 288
	long	@@@_fatfs_cc_dat_ + 296
	long	@@@_fatfs_cc_dat_ + 304
	long	@@@_fatfs_cc_dat_ + 312
	long	@@@_fatfs_cc_dat_ + 320
	long	@@@_fatfs_cc_dat_ + 328
	long	@@@_fatfs_cc_dat_ + 336
	long	@@@_fatfs_cc_dat_ + 344
	byte	$00, $00, $00, $00
	long	@@@_fatfs_cc_v_close
	byte	$00, $00, $00, $00
	long	@@@_fatfs_cc_v_read
	byte	$00, $00, $00, $00
	long	@@@_fatfs_cc_v_write
	byte	$00, $00, $00, $00
	long	@@@_fatfs_cc_v_lseek
	byte	$00, $00, $00, $00
	long	@@@_fatfs_cc_v_ioctl
	byte	$00, $00, $00, $00
	long	@@@_fatfs_cc_v_open
	byte	$00, $00, $00, $00
	long	@@@_fatfs_cc_v_creat
	byte	$00, $00, $00, $00
	long	@@@_fatfs_cc_v_opendir
	byte	$00, $00, $00, $00
	long	@@@_fatfs_cc_v_closedir
	byte	$00, $00, $00, $00
	long	@@@_fatfs_cc_v_readdir
	byte	$00, $00, $00, $00
	long	@@@_fatfs_cc_v_stat
	byte	$00, $00, $00, $00
	long	@@@_fatfs_cc_v_mkdir
	byte	$00, $00, $00, $00
	long	@@@_fatfs_cc_v_rmdir
	byte	$00, $00, $00, $00
	long	@@@_fatfs_cc_v_remove
	byte	$00, $00, $00, $00
	long	@@@_fatfs_cc_v_rename
	byte	$00, $00, $00, $00
	long	@@@_fatfs_cc_v_init
	byte	$00, $00, $00, $00
	long	@@@_fatfs_cc_v_deinit
	byte	$ff, $ff, $ff, $ff, $1f, $00, $00, $00, $1c, $00, $00, $00, $1f, $00, $00, $00
	byte	$1e, $00, $00, $00, $1f, $00, $00, $00, $1e, $00, $00, $00, $1f, $00, $00, $00
	byte	$1f, $00, $00, $00, $1e, $00, $00, $00, $1f, $00, $00, $00, $1e, $00, $00, $00
	byte	$1f, $00, $00, $00, $00, $00, $00, $00, $1f, $00, $00, $00, $3b, $00, $00, $00
	byte	$5a, $00, $00, $00, $78, $00, $00, $00, $97, $00, $00, $00, $b5, $00, $00, $00
	byte	$d4, $00, $00, $00, $f3, $00, $00, $00, $11, $01, $00, $00, $30, $01, $00, $00
	byte	$4e, $01, $00, $00, $6d, $01, $00, $00, $ff, $ff, $ff, $ff, $00, $00, $00, $00
	byte	$00[32]
	long	@@@_fatfs_cc_dat_ + 526
	long	@@@_fatfs_cc_dat_ + 530
	byte	$00[18]
	byte	$3f, $3f, $3f, $00, $55, $43, $54, $00, $55, $43, $54, $00, $00, $00, $00, $00
	byte	$00[6]
	byte	$05, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
	long	@@@_fatfs_cc_dat_ + 1016
	long	@@@_fatfs_cc_dat_ + 1024
	byte	$00, $00, $00, $00
	long	@@@_fatfs_cc_dat_ + 1032
	long	@@@_fatfs_cc_dat_ + 1040
	byte	$00[8]
	byte	$01, $00, $00, $00, $06, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
	byte	$00, $00, $00, $00
	long	@@@_fatfs_cc_dat_ + 1048
	long	@@@_fatfs_cc_dat_ + 1056
	byte	$00, $00, $00, $00
	long	@@@_fatfs_cc_dat_ + 1064
	long	@@@_fatfs_cc_dat_ + 1072
	byte	$00[8]
	byte	$01, $00, $00, $00, $06, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
	byte	$00, $00, $00, $00
	long	@@@_fatfs_cc_dat_ + 1080
	long	@@@_fatfs_cc_dat_ + 1088
	byte	$00, $00, $00, $00
	long	@@@_fatfs_cc_dat_ + 1096
	long	@@@_fatfs_cc_dat_ + 1104
	byte	$00[344]
	long	@@@__system___tx
	byte	$00, $00, $00, $00
	long	@@@__system___rx
	byte	$00, $00, $00, $00
	long	@@@_fatfs_cc__rxtxioctl_1135
	byte	$00, $00, $00, $00
	long	@@@_fatfs_cc___dummy_flush_1136
	byte	$00, $00, $00, $00
	long	@@@__system___tx
	byte	$00, $00, $00, $00
	long	@@@__system___rx
	byte	$00, $00, $00, $00
	long	@@@_fatfs_cc__rxtxioctl_1135
	byte	$00, $00, $00, $00
	long	@@@_fatfs_cc___dummy_flush_1136
	byte	$00, $00, $00, $00
	long	@@@__system___tx
	byte	$00, $00, $00, $00
	long	@@@__system___rx
	byte	$00, $00, $00, $00
	long	@@@_fatfs_cc__rxtxioctl_1135
	byte	$00, $00, $00, $00
	long	@@@_fatfs_cc___dummy_flush_1136
	byte	$00[9]
	byte	$ca, $9a, $3b, $00, $00, $00, $00, $01, $01, $01, $01, $01, $01, $01, $01, $01
	byte	$91, $11, $11, $11, $11, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01
	byte	$01[7]
	byte	$90, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20
	byte	$42[10]
	byte	$20[7]
	byte	$44[6]
	byte	$04[20]
	byte	$20[6]
	byte	$48[6]
	byte	$08[20]
	byte	$20, $20, $20, $20, $01, $00, $00, $00, $00
	alignl
__system__dat_
	byte	$00[8]
	byte	$03, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
	byte	$00[652]
	long	@@@__system__dat_ + 716
	long	@@@__system__dat_ + 724
	long	@@@__system__dat_ + 732
	long	@@@__system__dat_ + 740
	byte	$00[28]
	long	@@@__system____root_opendir
	byte	$00, $00, $00, $00
	long	@@@__system____root_closedir
	byte	$00, $00, $00, $00
	long	@@@__system____root_readdir
	byte	$00, $00, $00, $00
	long	@@@__system____root_stat
	byte	$00[16]
	byte	$05, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
	long	@@@__system__dat_ + 1236
	long	@@@__system__dat_ + 1244
	byte	$00, $00, $00, $00
	long	@@@__system__dat_ + 1252
	long	@@@__system__dat_ + 1260
	byte	$00[8]
	byte	$01, $00, $00, $00, $06, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
	byte	$00, $00, $00, $00
	long	@@@__system__dat_ + 1268
	long	@@@__system__dat_ + 1276
	byte	$00, $00, $00, $00
	long	@@@__system__dat_ + 1284
	long	@@@__system__dat_ + 1292
	byte	$00[8]
	byte	$01, $00, $00, $00, $06, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
	byte	$00, $00, $00, $00
	long	@@@__system__dat_ + 1300
	long	@@@__system__dat_ + 1308
	byte	$00, $00, $00, $00
	long	@@@__system__dat_ + 1316
	long	@@@__system__dat_ + 1324
	byte	$00[344]
	long	@@@__system___tx
	byte	$00, $00, $00, $00
	long	@@@__system___rx
	byte	$00, $00, $00, $00
	long	@@@__system___rxtxioctl_1052
	byte	$00, $00, $00, $00
	long	@@@__system____dummy_flush_1053
	byte	$00, $00, $00, $00
	long	@@@__system___tx
	byte	$00, $00, $00, $00
	long	@@@__system___rx
	byte	$00, $00, $00, $00
	long	@@@__system___rxtxioctl_1052
	byte	$00, $00, $00, $00
	long	@@@__system____dummy_flush_1053
	byte	$00, $00, $00, $00
	long	@@@__system___tx
	byte	$00, $00, $00, $00
	long	@@@__system___rx
	byte	$00, $00, $00, $00
	long	@@@__system___rxtxioctl_1052
	byte	$00, $00, $00, $00
	long	@@@__system____dummy_flush_1053
__heap_base
	long	0[8102]
objmem
	long	0[0]
stackspace
	long	0[1]
	org	COG_BSS_START
_var01
	res	1
_var02
	res	1
_var03
	res	1
_var04
	res	1
_var05
	res	1
_var06
	res	1
_var07
	res	1
_var08
	res	1
_var09
	res	1
_var10
	res	1
_var11
	res	1
_var12
	res	1
arg01
	res	1
arg02
	res	1
arg03
	res	1
arg04
	res	1
arg05
	res	1
arg06
	res	1
arg07
	res	1
local01
	res	1
local02
	res	1
local03
	res	1
local04
	res	1
local05
	res	1
local06
	res	1
local07
	res	1
local08
	res	1
local09
	res	1
local10
	res	1
local11
	res	1
local12
	res	1
local13
	res	1
local14
	res	1
local15
	res	1
local16
	res	1
local17
	res	1
local18
	res	1
local19
	res	1
local20
	res	1
local21
	res	1
local22
	res	1
local23
	res	1
local24
	res	1
muldiva_
	res	1
muldivb_
	res	1
	fit	480
