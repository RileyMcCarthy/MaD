#line 1 "/home/mad/Tensile-Testing-Machine/Firmware/MaD_Firmware/src/Communication/CRC.c"
#line 2 "/home/mad/Tensile-Testing-Machine/Firmware/MaD_Firmware/src/Communication/CRC.c"
#line 1 "/home/mad/Tensile-Testing-Machine/Firmware/MaD_Firmware/include/Main/Communication/CRC.h"
#line 3 "/home/mad/Tensile-Testing-Machine/Firmware/MaD_Firmware/include/Main/Communication/CRC.h"
#line 1 "/home/mad/flexprop/include/stddef.h"
#line 4 "/home/mad/flexprop/include/stddef.h"
#line 1 "/home/mad/flexprop/include/sys/size_t.h"





  typedef  unsigned long  size_t;
#line 5 "/home/mad/flexprop/include/stddef.h"
#line 1 "/home/mad/flexprop/include/sys/null.h"
#line 6 "/home/mad/flexprop/include/stddef.h"
#line 1 "/home/mad/flexprop/include/sys/wchar_t.h"
#line 15 "/home/mad/flexprop/include/sys/wchar_t.h"
typedef int wchar_t;
#line 24 "/home/mad/flexprop/include/sys/wchar_t.h"
typedef struct _Mbstate {
  unsigned int total:5;
  unsigned int left:5;
  unsigned int partial:22;
} _Mbstate_t;
#line 7 "/home/mad/flexprop/include/stddef.h"

typedef long ptrdiff_t;
#line 4 "/home/mad/Tensile-Testing-Machine/Firmware/MaD_Firmware/include/Main/Communication/CRC.h"
#line 1 "/home/mad/flexprop/include/stdint.h"



typedef signed char int8_t;
typedef unsigned char uint8_t;

typedef signed short int16_t;
typedef unsigned short uint16_t;

typedef signed long int32_t;
typedef unsigned long uint32_t;

typedef long long int64_t;
typedef unsigned long long uint64_t;

typedef unsigned long uintptr_t;
typedef long intptr_t;

typedef int64_t intmax_t;
typedef uint64_t uintmax_t;

typedef int8_t int_least8_t;
typedef int16_t int_least16_t;
typedef int32_t int_least32_t;
typedef int64_t int_least64_t;

typedef uint8_t uint_least8_t;
typedef uint16_t uint_least16_t;
typedef uint32_t uint_least32_t;
typedef uint64_t uint_least64_t;

typedef int32_t int_fast8_t;
typedef int32_t int_fast16_t;
typedef int32_t int_fast32_t;
typedef int64_t int_fast64_t;

typedef uint32_t uint_fast8_t;
typedef uint32_t uint_fast16_t;
typedef uint32_t uint_fast32_t;
typedef uint64_t uint_fast64_t;
#line 5 "/home/mad/Tensile-Testing-Machine/Firmware/MaD_Firmware/include/Main/Communication/CRC.h"
uint8_t crc8(uint8_t *addr, uint8_t len);
#line 3 "/home/mad/Tensile-Testing-Machine/Firmware/MaD_Firmware/src/Communication/CRC.c"

uint8_t crc8(uint8_t *addr, uint8_t len)
{
    uint8_t crc = 0;
    for (uint8_t i = 0; i < len; i++)
    {
        uint8_t inbyte = addr[i];
        for (uint8_t j = 0; j < 8; j++)
        {
            uint8_t mix = (crc ^ inbyte) & 0x01;
            crc >>= 1;
            if (mix)
                crc ^= 0x8C;
            inbyte >>= 1;
        }
    }
    return crc;
}
